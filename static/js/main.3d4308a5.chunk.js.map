{"version":3,"sources":["Components/Nav.jsx","Components/axios.js","Components/Barchart.jsx","Components/data.jsx","Components/Alert.jsx","Components/NewCustomerForm.jsx","Components/Loader.jsx","Components/Invoice.jsx","Components/Receipt.jsx","Components/ReceivePayment.jsx","Components/Quotation.jsx","Components/CreditNote.jsx","Components/Sales.jsx","Components/CustomersPage.jsx","Components/CustomerDetails.jsx","Components/NewSupplierForm.jsx","Components/PurchaseInvoice.jsx","Components/CashPurchase.jsx","Components/MakePayment.jsx","Components/PurchaseOrder.jsx","Components/PurchaseReturns.jsx","Components/Purchases.jsx","Components/SuppliersPage.jsx","Components/SupplierDetails.jsx","Components/NewExpense.jsx","Components/UpdateExpense.jsx","Components/DeleteBox.jsx","Components/ExpensesPage.jsx","Components/AddProductForm.js","Components/UpdateProduct.jsx","Components/InventoryPage.js","Components/InventoriesPage.jsx","Components/Contra.jsx","Components/LiquidityPage.jsx","Components/NewFixedAsset.jsx","Components/NewShareholder.jsx","Components/NewLongtermLiability.jsx","Components/CapitalAndFixedAssets.jsx","Components/FixedAsset.jsx","Components/Shareholder.jsx","Components/Liability.jsx","Components/Reports.jsx","Components/RiviewsPage.jsx","Components/DebitNote.jsx","Components/SalesAndPurchaseOptionItem.jsx","Components/SalesOptions.jsx","Components/SinglePay.jsx","Components/Invoices.jsx","Components/InvoiceTemplate.jsx","Components/InvoiceDetails.jsx","Components/Receipts.jsx","Components/ReceiptTemplate.jsx","Components/ReceiptDetails.jsx","Components/CreditNotes.jsx","Components/CreditNoteDetails.jsx","Components/Quotes.jsx","Components/QuotationTemplate.jsx","Components/QuoteDetails.jsx","Components/PurchaseInvoices.jsx","Components/PurchaseInvoiceDetails.jsx","Components/PurchaseReceipts.jsx","Components/PurchaseReceiptDetails.jsx","Components/ConfirmMessageBox.jsx","Components/PurchaseOrders.jsx","Components/PurchaseOrderDetails.jsx","Components/PurchaseReturnsPage.jsx","Components/PurchaseReturnDetails.jsx","Components/LineChart.jsx","Components/Doughnut.jsx","Components/SingleBarChart.jsx","Components/Dashboard.jsx","App.js","index.js"],"names":["Nav","click","useState","visibleNav","setVisibleNav","viewIncomeTabs","setViewIncomeTabs","viewExpenditureTabs","setViewExpenditureTabs","viewCustTabs","setViewCustTabs","wrapperRef","useRef","handleClickOutside","e","window","outerWidth","wrap","current","contains","target","useEffect","document","addEventListener","removeEventListener","width","innerWidth","navStyler","setNavStyler","styles","transition","handle_Click_Outside","className","style","onClick","ref","to","class","baseURL","process","PORT","axios","create","Barchart","labels","data1","data2","data3","tooltip1","data4","tooltip2","tooltip3","tooltip4","height","data","datasets","label","backgroundColor","options","maintainAspectRatio","productName","description","qty","up","amount","Number","toFixed","expStructure","expName","receiver","category","meansOfPayment","shareHolderFixedAssetTemplate","assetName","cost","residualValue","depRate","Alert","alert","message","NewCustomerForm","refetch","setAlert","alertMessage","setAlertMessage","name","email","country","city","street","tel","mobile","fax","newCustomer","setNewCustomer","handleChange","value","prevValue","handleSubmit","preventDefault","setTimeout","post","then","res","console","log","action","htmlFor","type","onChange","id","Loader","Invoice","active","setActive","collapseAdditions","setCollapseAdditions","collapseDeductions","setCollapseDeductions","fetching","setfetching","customers","setCustomers","products","setProducts","invoices","setInvoices","rebate","tradeDiscount","cashDiscount","valueAddedTax","additionsAndSubtractions","setAdditionsAndSubtractions","setData","setValue","date","Date","day","getDate","month","getMonth","year","getFullYear","invoiceDate","toDateString","selectInvoiceTerm","setSelectInvoiceTerm","a","unMounted","source","CancelToken","request1","get","request2","all","cancelToken","token","result1","result2","catch","err","isCancel","cancel","billingAddress","contact","telephone","customerDetails","setCustomerDetails","setHeight","realVal","updateFieldChanged","index","event","newArr","map","item","i","otherAdditions","setOtherAdditions","otherAdditionsChange","handleAdditionsAndSubtractions","invoiceNumber","length","customerName","dueDate","today","setDate","quoteInput","setQuoteInput","sumTotal","reduce","b","rebateValue","commercialNet1","tradeDiscountValue","commercialNet2","cashDiscountValue","financialNet","totalOtherAdditions","filter","cust","elements","ele","additions","invoiceData","invoiceInput","discountsAndVat","grossAmount","netPayable","totalPaid","balanceDue","responseType","pdfBlob","Blob","saveAs","method","contentEditable","readOnly","hidden","placeholder","toLowerCase","includes","tabIndex","cols","rows","additonalInfo","toString","replace","overflow","product","prev","Receipt","receipts","setReceipts","receiptDate","request3","result3","receiptNumber","receiptInput","setReceiptInput","receiptData","borderRadius","marginLeft","ReceivePayment","receivePaytInput","setReceivePaytInput","template","setTemplate","invoiceTemplate","inv","amountToPay","totalToPay","temp","receivePaymentData","margin","invoice","_id","Quotation","quotes","setQuotes","getData","quoteNumber","quoteData","expDate","CreditNote","creditNotes","setCreditNotes","noteNumber","noteInput","setNoteInput","noteData","Sales","setInvoice","receipt","setReceipt","receivePayment","setReceivePayment","quotation","setQuotation","creditNote","setCreditNote","setFetching","history","useHistory","salesData","setSalesData","graphInfo","setGraphInfo","creditSalesGraph","setCreditSalesGraph","cashSalesGraph","setCashSalesGraph","returns","setReturns","sales","graph","creditSales","cashSales","salesReturns","values","months","saleType","cashSaleElements","push","wrapper_Ref","transform","visibility","styler","setStyler","position","color","fontWeight","padding","data-text","CustomersPage","marginTop","textAlign","customer","CustomerDetails","viewInvoices","setViewInvoices","viewReceipts","setViewReceipts","viewQuotations","setViewQuotations","viewCreditNotes","setViewCreditNotes","overview","setOverview","quotations","setQuotations","setSales","debtors","setDebtors","invoiceAdditions","setinvoiceAdditions","receiptAdditions","setReceiptAdditions","creditNoteAdditions","setCreditNoteAdditions","buttonClicked","setButtonClicked","params","useParams","element","jan","feb","mar","apr","may","jun","jul","aug","sept","oct","nov","dec","sale","debtorList","credit1","cash1","credit2","cash2","credit3","cash3","credit4","cash4","credit5","cash5","credit6","cash6","credit7","cash7","credit8","cash8","credit9","cash9","credit10","cash10","credit11","cash11","credit12","cash12","janCash1","janCash2","janCash3","janCash4","janCash5","janCash6","janCash7","janCash8","janCash9","janCash10","janCash11","janCash12","janCredit1","janCredit2","janCredit3","janCredit4","janCredit5","janCredit6","janCredit7","janCredit8","janCredit9","janCredit10","janCredit11","janCredit12","debt","toLocaleDateString","note","returnNumber","quote","NewSupplierForm","newSupplier","setNewSupplier","PurchaseInvoice","suppliers","setSuppliers","supplierDetails","setSupplierDetails","CashPurchase","supplierName","sup","setPurchaseInvoices","creditors","setCreditors","makePaymentInput","setMakePaymentInput","response1","response2","makePaymentData","totalDebt","PurchaseOrder","orders","orderDate","orderNumber","orderInput","setOrderInput","orderData","PurchaseReturns","purchaseReturns","setPurchaseReturns","returnsNumber","returnsInput","setReturnsInput","returnsData","Purchases","purchaseInvoice","setPurchaseInvoice","cashPurchase","setCashPurchase","makePayment","setMakePayment","purchaseOrder","setPurchaseOrder","purchaseData","setPurchaseData","creditPurchasesGraph","setCreditPurchasesGraph","cashPurchasesGraph","setCashPurchasesGraph","getPurchase","purchases","creditPurchases","cashPurchases","purchasesReturns","purchaseType","cashPurchaseElements","MakePayment","aler","SuppliersPage","supplier","SupplierDetails","purchaseReturn","setPurchaseReturn","viewPurchaseInvoices","setViewPurchaseInvoices","viewCashPurchases","setViewCashPurchases","viewPurchaseOrders","setViewPurchaseOrders","viewPurchaseReturns","setViewPurchaseReturns","purchaseInvoices","setCashPurchases","purchaseOrders","setPurchaseOrders","setPurchases","creditorList","purchase","credit","order","NewExpense","expenseInput","setExpenseInput","expData","d","UpdateExpense","handleUpdate","handleClickOutSide","DeleteBox","handleDelete","ExpensesPage","newExpense","setNewExpense","updateExpense","setUpdateExpense","deleteBox","setDeleteBox","expenses","setExpenses","updateData","setUpdateData","filterOption","setFilterOption","exp","sort","slice","dataset","put","status","patch","AddProductForm","sellingPrice","newProduct","setNewProduct","productData","handleProductSubmit","UpdateProductForm","InventoryPage","productId","purchaseReceipt","setPurchaseReceipt","entriesAndExits","setEntriesAndExits","totalEntriesAmount","exitOrEntry","totalExitsAmount","totalEntriesQty","totalExitsQty","averageExitPrice","unitSp","wac","grossProfit","entries","exits","janEx1","janEx2","janEx3","janEx4","janEx5","janEx6","janEx7","janEx8","janEx9","janEx10","janEx11","janEx12","janEntry1","janEntry2","janEntry3","janEntry4","janEntry5","janEntry6","janEntry7","janEntry8","janEntry9","janEntry10","janEntry11","janEntry12","janExit1","janExit2","janExit3","janExit4","janExit5","janExit6","janExit7","janExit8","janExit9","janExit10","janExit11","janExit12","InventoriesPage","updateProduct","setUpdateProduct","setTransactionOptions","updateProductData","setUpdateProductData","search","useLocation","query","queryString","parse","s","m","v","mostSold","k","n","mostBought","handleDeleteItem","pdt","UpdateProduct","Contra","sendingAccount","receivingAccount","submitData","LiquidityPage","newInvoice","setNewInvoice","newReceipt","setNewReceipt","newMakePayment","setNewMakePayment","newReceivePayment","setNewReceivePayment","newPurchaseInvoice","setNewPurchaseInvoice","newPurchaseReceipt","setNewPurchaseReceipt","selected","setSelected","interAccount","setInterAccount","totalOut","inOrOut","totalIn","accountBalance","janIn","janOut","febIn","febOut","marIn","marOut","aprIn","aprOut","mayIn","mayOut","junIn","junOut","julIn","julOut","augIn","augOut","septIn","septOut","octIn","octOut","novIn","novOut","decIn","decOut","chart","janBal","febBal","marBal","aprBal","mayBal","junBal","julBal","augBal","septBal","octBal","novBal","decBal","reason","NewFixedAsset","purchaseDate","serialNumber","asset","valueOf","match","join","toUpperCase","concat","cash","mobileMoney","bank","vat","totalTE","setAsset","NewShareholder","address","shareholder","shareholderInput","setShareholderInput","totalContribution","fixedAssets","holder","NewLongtermLiability","liabilityName","liability","duration","interestRate","receivedBy","setLiability","prevValues","CapitalAndFixedAssets","newAsset","setNewAsset","newLongtermLiability","setNewLongtermLiability","newShareholder","setNewShareholder","viewAssets","setViewAssets","viewLiab","setViewLiab","assets","setAssets","shareholders","setShareholders","liabilities","setLiabilities","fetchAssets","thisYear","thisMonth","depInfos","forEach","serialNumbers","handleRedeem","handleRedeemLiability","monthlyDep","endOfYearDep","previousAccDep","accDep","nbv","href","FixedAsset","assetInfos","setAssetInfos","Shareholder","Liability","newLiability","setNewLiability","amortizationInfos","amortizationData","ov","liabilityDetail","balanceAtEndofPeriod","balanceAtEnd","constantMonthlyAmortization","interest","annuity","Reports","incomeStatement","setIncomeStatement","fetchData","purchaseExpenses","closingStock","inventory","costOfSales","netSales","discountsReceived","discounts","typeOfDiscount","rebatesReceived","cashDiscountsReceived","tradeDiscountsReceived","totalDiscountsAllowed","acc","totalOtherIncome","otherIncome","totalDiscountsReceived","totalExp","fixedAssetsDep","totalFixedAssetCost","totalNBV","totalDep","netResult","ebdit","totalDebtors","totalCreditors","cashIn","cashOut","bankIn","bankOut","mobileMoneyIn","mobileMoneyOut","totalCapital","capital","totalLongtermLiab","longtermLiabilities","vatInvoiced","vatType","vatRecoverable","netVat","expense","RiviewsPage","reviews","setReviews","fetchReviews","whatsApp","substring","DebitNote","debitNotes","SalesAndPurchaseOptionItem","fontawesome","title","SalesOptions","newQuotation","newCreditNote","newDebitNote","newPurchaseReturns","newPurchaseOrder","newCashPurchase","SinglePay","balance","inputValue","submit","Invoices","loader","setLoader","receivePay","setReceivePay","setFilter","payData","setPayData","setInputValue","fetchInvoices","overDueInvoices","dueInDaysInvoices","thisDay","totalCreditSales","averageDays","futureDate","futureYear","futureMonth","futureDay","totalOverDueDebts","totalDueInDays","handlePush","route","handleSendInvoice","nameFilter","amountFilter","display","handleSingleChange","InvoiceTemplate","totalDiscounts","marginRight","InvoiceDetails","setInvoiceData","statusStyles","getInvoice","fetch","dueDay","dueMonth","dueYear","handleClick_Outside","print","printable","targetStyles","maxWidth","documentTitle","Receipts","ReceiptTemplate","ReceiptDetails","setReceipteData","getReceipt","CreditNotes","setNewCreditNote","fetchCreditNotes","CreditNoteDetails","setNoteData","additionalInfo","additionalInfos","Quotes","setNewQuotation","setQuoteData","upDateToInvoice","setUpdateToInvoice","setDiscountsAndVat","fetchQuotes","number","handle_Change","handleSendEmail","QuotationTemplate","QuoteDetails","quotationData","setQuotationData","getQuotation","PurchaseInvoices","makePay","setMakePay","totalCreditPurchases","daysTimeDate","daysTimeYear","daysTimeMonth","daysTimeDay","PurchaseInvoiceDetails","invoiceTemplateData","PurchaseReceipts","fetchReceipts","PurchaseReceiptDetails","receiptTemplateData","ConfirmMessageBox","PurchaseOrders","newOrder","setNewOrder","setOrderData","fetchOrder","__id","PurchaseOrderDetails","getOrder","PurchaseReturnsPage","newReturn","setNewReturn","fetchReturns","returnInput","PurchaseReturnDetails","returnData","setReturnData","getReturn","LineChart","DoughnutChart","tooltip","SingleBarChart","backgroundColors","Dashboard","janSales","febSales","marSales","aprSales","maySales","junSales","julSales","augSales","sepSales","octSales","novSales","decSales","janSalesReturns","febSalesReturns","marSalesReturns","aprSalesReturns","maySalesReturns","junSalesReturns","julSalesReturns","augSalesReturns","sepSalesReturns","octSalesReturns","novSalesReturns","decSalesReturns","janPurchases","febPurchases","marPurchases","aprPurchases","mayPurchases","junPurchases","julPurchases","augPurchases","sepPurchases","octPurchases","novPurchases","decPurchases","janPurchaseReturns","febPurchaseReturns","marPurchaseReturns","aprPurchaseReturns","mayPurchaseReturns","junPurchaseReturns","julPurchaseReturns","augPurchaseReturns","sepPurchaseReturns","octPurchaseReturns","novPurchaseReturns","decPurchaseReturns","janPurchaseExp","febPurchaseExp","marPurchaseExp","aprPurchaseExp","mayPurchaseExp","junPurchaseExp","julPurchaseExp","augPurchaseExp","sepPurchaseExp","octPurchaseExp","novPurchaseExp","decPurchaseExp","janEntries","febEntries","marEntries","aprEntries","mayEntries","junEntries","julEntries","augEntries","sepEntries","octEntries","novEntries","decEntries","janExits","febExits","marExits","aprExits","mayExits","junExits","julExits","augExits","sepExits","octExits","novExits","decExits","switcher","key","sep","reducer","janSale","febSale","marSale","aprSale","maySale","junSale","julSale","augSale","sepSale","octSale","novSale","decSale","janPurchase","febPurchase","marPurchase","aprPurchase","mayPurchase","junPurchase","julPurchase","augPurchase","sepPurchase","octPurchase","novPurchase","decPurchase","janPurchaseExpVal","febPurchaseExpVal","marPurchaseExpVal","aprPurchaseExpVal","mayPurchaseExpVal","junPurchaseExpVal","julPurchaseExpVal","augPurchaseExpVal","sepPurchaseExpVal","octPurchaseExpVal","novPurchaseExpVal","decPurchaseExpVal","janEntry","febEntry","marEntry","aprEntry","mayEntry","junEntry","julEntry","augEntry","sepEntry","octEntry","novEntry","decEntry","janCOGS","febCOGS","marCOGS","aprCOGS","mayCOGS","junCOGS","julCOGS","augCOGS","sepCOGS","octCOGS","novCOGS","decCOGS","janGP","febGP","marGP","aprGP","mayGP","junGP","julGP","augGP","sepGP","octGP","novGP","decGP","totalAdminExp","totalDistExp","totalOtherExp","grossProfitMargin","netProfitMargin","debtorsDays","creditorsDays","unpaidInvoices","salesInvoices","unpaidPurchaseInvoices","dueThisMonthInvoices","notDueInvoices","purchaseInvoicesDueThisMonth","totalOverDueInvoices","totalDueThisMonthInvoices","totalNotDueInvoices","Doughnut","App","newTran","setNewTran","setNewPurchaseOrder","setNewCashPurchase","setNewPurchaseReturns","setNewDebitNote","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d4308a5.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef} from 'react'\r\nimport './Nav.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction Nav({click}) {\r\n    \r\n    const [visibleNav, setVisibleNav] = useState(true)\r\n    const [viewIncomeTabs, setViewIncomeTabs] = useState(false)\r\n    const [viewExpenditureTabs, setViewExpenditureTabs] = useState(false)\r\n    const [viewCustTabs, setViewCustTabs] = useState(false)\r\n    const wrapperRef = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        if (window.outerWidth < 1050) {\r\n            setVisibleNav(false)\r\n        }\r\n        return window.outerWidth > 1050 && setVisibleNav(true)\r\n    }, visibleNav)\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n            if (window.outerWidth < 1050) {\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setVisibleNav(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        const [navStyler, setNavStyler] = useState({\r\n            width: window.innerWidth < 1050 ? '0rem' : window.innerWidth <= 900 ? '20rem' : '40rem'\r\n        })\r\n        const styles = {\r\n            transition : 'width 1s ease',\r\n            width : navStyler.width\r\n        }\r\n\r\n        const handleNavStyle = () => {\r\n            if (navStyler.width === '0rem') { \r\n                setNavStyler({\r\n                    width : window.innerWidth <= 900 ? '50%' : '40rem'\r\n                })\r\n            }else{\r\n                setNavStyler({width : '0rem'})\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n            if (window.outerWidth < 807) {\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setNavStyler({width : '0rem'})\r\n                }\r\n            }\r\n        }\r\n    \r\n    return (\r\n        <div className=\"NavBarElement\" style={{...styles}}>\r\n            <div className=\"hamburger\">\r\n                <i className=\"fas fa-bars fa-lg\" onClick={handleNavStyle}></i>\r\n            </div>\r\n                <div className='NavBar' ref={wrapperRef}>\r\n                    <header className='header'>\r\n                        \r\n                    </header>\r\n                    <nav className='nav'>\r\n                        <div className=\"buttonCont\">\r\n                            <button className=\"addNew\" onClick={click}>Add New</button>\r\n                        </div>\r\n                        <ul className='nav-list'>\r\n                        <li className=\"nav-item\"><Link to='/'>Dashboard</Link></li>\r\n                                <li className='nav-item income'>\r\n                                <span onClick={() =>{setViewIncomeTabs(!viewIncomeTabs)}}>Income:</span>\r\n                                {\r\n                                    !viewIncomeTabs ? <i class=\"fas fa-chevron-right\" onClick={() =>{setViewIncomeTabs(true)}}></i> : <i class=\"fas fa-chevron-down\" onClick={() =>{setViewIncomeTabs(false)}}></i>\r\n                                }\r\n                                <ul className={viewIncomeTabs ? 'options' : 'navOptions'}>\r\n                                    <li className='option'>\r\n                                        <Link to='/sales'>Sales Dashboard</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/invoices'>Sales Invoices</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/receipts'>Sales Receipts</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/credit-notes'>Sales Returns</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/quotes'>Quotes</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n\r\n                            <li className='nav-item'>\r\n                                <span onClick={() =>{setViewExpenditureTabs(!viewExpenditureTabs)}}>Expenditure:</span>\r\n                                {\r\n                                    !viewExpenditureTabs ? <i class=\"fas fa-chevron-right\" onClick={() =>{setViewExpenditureTabs(true)}}></i> : <i class=\"fas fa-chevron-down\" onClick={() =>{setViewExpenditureTabs(false)}}></i>\r\n                                }\r\n                                <ul className={viewExpenditureTabs ? 'options' : 'navOptions'}>\r\n                                    <li className='option'>\r\n                                        <Link to='/purchases'>Purchases Dashboard</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/purchase-invoices'>Purchase Invoices</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/purchase-receipts'>Purchase Receipts</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/purchase-orders'>Purchase Orders</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/purchase-returns'>Purchase Returns</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/expenses'>Other Expenses</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n\r\n                            <li className='nav-item'>\r\n                                <span onClick={() =>{setViewCustTabs(!viewCustTabs)}}>Third Party:</span>\r\n                                {\r\n                                    !viewCustTabs ? <i class=\"fas fa-chevron-right\" onClick={() =>{setViewCustTabs(true)}}></i> : <i class=\"fas fa-chevron-down\" onClick={() =>{setViewCustTabs(false)}}></i>\r\n                                }\r\n                                <ul className={viewCustTabs ? 'options' : 'navOptions'}>\r\n                                    <li className='option'>\r\n                                        <Link to='/suppliers'>Suppliers</Link>\r\n                                    </li>\r\n                                    <li className='option'>\r\n                                        <Link to='/customers'>Customers</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n\r\n                            <li className='nav-item'>\r\n                                <Link to='/inventories'>Inventory</Link>\r\n                            </li>\r\n\r\n                            <li className='nav-item'>\r\n                                <Link to='/treasury'>Treasury</Link>\r\n                            </li>\r\n\r\n                            <li className='nav-item'>\r\n                                <Link to='/capital-and-fixed-assets'>Fixed Assets & Capital</Link>\r\n                            </li>\r\n\r\n                            <li className='nav-item'>\r\n                                <Link to='/reports'>\r\n                                    Reports\r\n                                </Link>\r\n                                \r\n                            </li>\r\n                        </ul>\r\n                        \r\n                    </nav>\r\n                    \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import axios from 'axios'\r\n\r\nconst PORT = process.env.PORT || 'https://hk-solutions-accounting-app.herokuapp.com/'\r\n\r\nexport const baseURL = axios.create({\r\n    baseURL: 'http://localhost:5000' \r\n})","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\nfunction Barchart({labels, data1, data2, data3, data4, tooltip1, tooltip2, tooltip3, tooltip4}) {\r\n    return (\r\n        <div className='Barchart'>\r\n            <Bar\r\n                width= {200}\r\n                height= '70%'\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: tooltip1,\r\n                            data: data1,\r\n                            backgroundColor: '#B336D6'\r\n                        },\r\n                        {\r\n                            label: tooltip2,\r\n                            data: data2,\r\n                            backgroundColor: '#37D636'\r\n                        },\r\n                        {\r\n                            label: tooltip3,\r\n                            data: data3,\r\n                            backgroundColor: '#598A07'\r\n                        },\r\n                    ]\r\n                }}\r\n                options={\r\n                    {\r\n                        scales: {\r\n                            xAxes: [\r\n                                {\r\n                                    grideLines: {\r\n                                        display: false\r\n                                    }\r\n                                }\r\n                            ],\r\n                            yAxes: [\r\n                                {\r\n                                    grideLines: {\r\n                                        display: false\r\n                                    },\r\n                                    ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        maintainAspectRatio: true\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barchart\r\n","export const data1 = [\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n        up: \"\",\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        },\r\n        {\r\n        productName: \"\",\r\n        description: \"\",\r\n        qty: '',\r\n        up: '',\r\n        amount: (qty, up) => {\r\n            return (Number(qty) * Number(up)).toFixed(2);\r\n        }\r\n        }\r\n    ];\r\n\r\n\r\nexport const expStructure = [\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n    {\r\n        expName: '',\r\n        receiver: '',\r\n        category: '',\r\n        meansOfPayment: '',\r\n        amount : ''\r\n    },\r\n]\r\n\r\nexport const shareHolderFixedAssetTemplate = [\r\n    {\r\n        assetName: '',\r\n        cost: '',\r\n        residualValue: '',\r\n        depRate: '',\r\n    },\r\n    {\r\n        assetName: '',\r\n        cost: '',\r\n        residualValue: '',\r\n        depRate: '',\r\n    },\r\n    {\r\n        assetName: '',\r\n        cost: '',\r\n        residualValue: '',\r\n        depRate: '',\r\n    },\r\n    {\r\n        assetName: '',\r\n        cost: '',\r\n        residualValue: '',\r\n        depRate: '',\r\n    },\r\n    {\r\n        assetName: '',\r\n        cost: '',\r\n        residualValue: '',\r\n        depRate: '',\r\n    }\r\n]","import React, { useState } from 'react'\r\nimport './Alert.css'\r\n\r\nfunction Alert({alert, message}) {\r\n    \r\n    return (\r\n        <div className={alert ? 'Alert displayAlert' : 'Alert'}>\r\n            <p className='content'>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\r\nimport Alert from './Alert';\r\nimport {baseURL as axios} from './axios'\r\nimport './NewCustomerForm.css'\r\n\r\nfunction NewCustomerForm({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [newCustomer, setNewCustomer] = useState({\r\n        name: '',\r\n        email : '',\r\n        country : '',\r\n        city : '',\r\n        street : '',\r\n        tel : '',\r\n        mobile : '',\r\n        fax : '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n\r\n        setNewCustomer(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (newCustomer.name === '' || newCustomer.email === '' || newCustomer.tel === '') {\r\n            setAlertMessage('Please add an amount to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            axios.post('/customers', newCustomer)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                onClick()\r\n                refetch()\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"newCustomerForm\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>Add New Customer</h3>\r\n            <form action=\"\" className=\"form\">\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"name\">Customer Name*</label>\r\n                        <input type=\"text\" name=\"name\" value={newCustomer.name} onChange={handleChange} id=\"name\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"email\">Email Address*</label>\r\n                        <input type=\"email\" name=\"email\" value={newCustomer.email} onChange={handleChange} id=\"email\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"country\">Country</label>\r\n                        <input type=\"text\" name=\"country\" value={newCustomer.country} onChange={handleChange} id=\"country\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"city\">Town/City</label>\r\n                        <input type=\"text\" name=\"city\" value={newCustomer.city} onChange={handleChange} id=\"city\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"street\">Street Address</label>\r\n                        <input type=\"text\" name=\"street\" value={newCustomer.street} onChange={handleChange} id=\"street\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"tel\">Telephone*</label>\r\n                        <input type=\"number\" name=\"tel\" value={newCustomer.tel} onChange={handleChange} id=\"tel\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"mobile\">Mobile</label>\r\n                        <input type=\"number\" name=\"mobile\" value={newCustomer.mobile} onChange={handleChange} id=\"mobile\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"fax\">Fax</label>\r\n                        <input type=\"text\" name=\"fax\" value={newCustomer.fax} onChange={handleChange} id=\"fax\"/>\r\n                    </div>\r\n\r\n                    <div></div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <button type='button' onClick={onClick} className='btn'>Cancel</button>\r\n                        <button type='button' onClick={(e)=>{\r\n                            handleSubmit(e);\r\n                        }} className='btn'>Save</button>\r\n                    </div>\r\n            </form>\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewCustomerForm\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className='loaderContainer'>\r\n            <div class=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\nimport {data1} from './data'\r\nimport {baseURL} from './axios'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport {saveAs} from 'file-saver'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert';\r\n\r\n\r\nfunction Invoice({onClick, refetch}) {\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [customers, setCustomers] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [invoices, setInvoices] = useState([])\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const invoiceDate = new Date(`${month +1}/${day}/${year}`).toDateString();\r\n    const [selectInvoiceTerm, setSelectInvoiceTerm] = useState('15')\r\n\r\n    const handleSelectInvoiceTerm = (e) => {\r\n        setSelectInvoiceTerm(Number(e.target.value));\r\n    };\r\n\r\n    useEffect(async() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/customers')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2] = res\r\n            setProducts(result1.data)\r\n            setCustomers(result2.data.customers)\r\n            setInvoices(result2.data.invoices)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    \r\n\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n\r\n    const handleAdditionsAndSubtractions = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue =>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [quoteInput, setQuoteInput] = useState({\r\n        date: invoiceDate,\r\n        invoiceNumber: `00${(invoices?.length) + 1}`,\r\n        customerName: '',\r\n        dueDate: (value)=>{\r\n            \r\n            const today = new Date(`${month + 1}/${day}/${year}`);\r\n            const futureDate = new Date(today.setDate(today.getDate()+ Number(value)))\r\n            return futureDate.toDateString();\r\n            }\r\n        });\r\n\r\n    const sumTotal = data.map(data => {return(data.amount((data.qty), (data.up)))}).reduce((a, b)=>{return Number(a) + Number(b)}, 0);\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate)/100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount)/100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount)/100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax)/100)).toFixed(2)\r\n    const totalOtherAdditions = (otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b))))\r\n\r\n    useEffect(() => {\r\n        customers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setCustomerDetails({...value})\r\n        ))\r\n        \r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n\r\n        setQuoteInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n    const invoiceData = {\r\n        invoiceInput: {\r\n            date : quoteInput.date,\r\n            invoiceNumber : quoteInput.invoiceNumber,\r\n            customerName : quoteInput.customerName,\r\n            dueDate : quoteInput.dueDate(selectInvoiceTerm)\r\n        },\r\n        selectInvoiceTerm,\r\n        customerDetails,\r\n        data : elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        totalPaid: 0,\r\n        balanceDue: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        dueDate: quoteInput.dueDate(selectInvoiceTerm)\r\n    }\r\n\r\n    const handleSubmit = async ()=>{\r\n        if (customerDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(()=>{\r\n                    setfetching(true)\r\n                }, 500)\r\n                \r\n                baseURL.post('/invoices', invoiceData)\r\n                .then(() => baseURL.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n                .then(res => {\r\n                    \r\n                    const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                    saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n                    baseURL.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n                    \r\n                    .then(()=>{\r\n                        onClick();\r\n                        refetch()\r\n                        setfetching(false)\r\n                    })\r\n                })\r\n            } else {\r\n                setAlertMessage('Please select a customer and add at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        } else {\r\n            setAlertMessage('Please select a customer and add at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n        <div className=\"close\">\r\n            <i className=\"fas fa-times fa-lg\" onClick={onClick}></i>\r\n        </div>\r\n            <h3>New Invoice</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                        <input type=\"text\" name='date' value={quoteInput.date} id='date' contentEditable={false} readOnly={true}/>\r\n                        </div>\r\n\r\n                        <div className=\"select\">\r\n                                <label htmlFor=\"invoiceDuration\">Terms</label>\r\n                            <select\r\n                                name=\"invoiceDuration\"\r\n                                id=\"invoiceDuration\"\r\n                                onChange={handleSelectInvoiceTerm}\r\n                                value={selectInvoiceTerm}\r\n                            >\r\n                                <option value=\"\" hidden={true}>Select(default: 15)</option>\r\n                                <option value={15}>15 days</option>\r\n                                <option value={30}>30 days</option>\r\n                                <option value={45}>45 days</option>\r\n                                <option value={60}>60 days</option>\r\n                                <option value={75}>75 days</option>\r\n                                <option value={90}>90 days</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"dueDate\">\r\n                            <label htmlFor=\"dueDate\">\r\n                                Due Date:\r\n                            </label>\r\n                            <input type=\"text\" id=\"dueDate\" name=\"dueDate\" value={quoteInput.dueDate(selectInvoiceTerm)} readOnly={true}/>\r\n                        </div>\r\n                        \r\n                        <div className=\"invoiceNumber\">\r\n                            <label htmlFor='InvoiceNumber'>\r\n                                Invoice Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"invoiceNumber\" id=\"invoiceNumber\" value={quoteInput.invoiceNumber} readOnly={true}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={value} \r\n                                onChange={(e)=>{setValue(e.target.value)}}\r\n                                onClick={()=>{setActive(!active)}}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={()=>{setNewCustomer(true)}}\r\n                                >Add New Customer</button>\r\n                                    {\r\n                                        customers\r\n                                        .filter(item => {\r\n                                            if (!value) return true\r\n                                            if (item.name?.toLowerCase().includes(value?.toLowerCase())) {\r\n                                            return true\r\n                                            }\r\n                                        })\r\n                                        .map((item, i) => (\r\n                                            <div\r\n                                                className='autoListItem'\r\n                                                onClick={()=>{setValue(item.name); setActive(false);}}\r\n                                                key={i}\r\n                                                tabIndex='0'\r\n                                            >\r\n                                                <p>{item.name}</p>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{customerDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{customerDetails?.country}</p>\r\n                                <p><b>City: </b>{customerDetails?.city}</p>\r\n                                <p><b>Street: </b>{customerDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{customerDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{customerDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{customerDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={quoteInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net Payable: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContaainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                    <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n                            \r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\", index)}\r\n                                    >\r\n                                    <option value=\"\"></option>\r\n                                    \r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                            <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 7.3;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                alert('Cannot add more rows.')\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n                        \r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n\r\n                        <div className=\"deductionsAndAdditions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Deductions</h5>\r\n                            <button onClick={()=>{setCollapseDeductions(!collapseDeductions)}} type='button'>{collapseDeductions ? 'Hide' : 'Show'}</button>\r\n                            </div>\r\n                            <div className=\"deductions\">\r\n                                \r\n                                {\r\n                                    collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate   \r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.rebate}/>\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.tradeDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.cashDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                                }\r\n                                <ul className=\"deductions\">\r\n                                    <li className='deductItem additionItem'>\r\n                                        <span>\r\n                                            Tax (VAT) Rate\r\n                                        </span>\r\n                                            \r\n                                        <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.valueAddedTax}/>\r\n\r\n                                        <span>\r\n                                                {\r\n                                                    valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            \r\n                            <div className=\"additions\">\r\n                                <div className=\"hideAndShow\">\r\n                                    <h5>Additions</h5>\r\n                                    <button onClick={()=>{setCollapseAdditions(!collapseAdditions)}} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                                </div>\r\n                                {\r\n                                        collapseAdditions && <ul className='otherAdditions'>\r\n                                        <div className=\"otherAdditions\">\r\n                                            <li className='additionItem'>\r\n                                            <b><span>Element</span></b>\r\n                                            <b><span>Amount</span></b>\r\n                                        </li>\r\n                                        </div>\r\n                                        <div className=\"otherAdditions\">\r\n                                            \r\n                                        </div>\r\n                                            \r\n                                    \r\n                                    <div className=\"otherAdditions\"\r\n                                        >\r\n                                        {\r\n                                            otherAdditions.map((data, index)=>(\r\n                                                <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name'/>\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount'/>\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"otherAdditions\">\r\n                                            <div className=\"additionItem\">\r\n                                            <h5>Total Additions</h5>\r\n                                        <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                        </div>\r\n                                        </div>\r\n                                    \r\n                                </ul>}\r\n                            </div>\r\n                            <div className=\"netPay\">\r\n                                <h3>Net Payable</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"saveOptions\">\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={handleSubmit}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={handleSubmit}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save and Send\r\n                            </button>\r\n                        </div>\r\n\r\n                </form>\r\n\r\n                \r\n\r\n                {\r\n                    newCustomer && <NewCustomerForm onClick={()=>{setNewCustomer(false)}}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                    fetching &&\r\n\r\n                        <Loader />\r\n                }\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Invoice\r\n\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\nimport { data1 } from './data'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport Alert from './Alert'\r\n\r\n\r\nfunction Receipt({ onClick, refetch }) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n\r\n    const [customers, setCustomers] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [receipts, setReceipts] = useState([])\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const receiptDate = new Date(`${month + 1}/${day}/${year}`).toDateString();\r\n\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/customers')\r\n        const request3 = baseURL.get('/receipts')\r\n        await axios.all([request1, request2, request3], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2, result3] = res\r\n                setProducts(result1.data)\r\n                setCustomers(result2.data.customers)\r\n                setReceipts(result3.data)\r\n                setfetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n\r\n    const handleAdditionsAndSubtractions = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [receiptInput, setReceiptInput] = useState({\r\n        date: receiptDate,\r\n        receiptNumber: `00${receipts.length + 1}`,\r\n        customerName: '',\r\n        meansOfPayment: 'cash'\r\n    });\r\n\r\n\r\n\r\n\r\n    const sumTotal = data.map(data => { return (data.amount((data.qty), (data.up))) }).reduce((a, b) => { return Number(a) + Number(b) }, 0);\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate) / 100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount) / 100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount) / 100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax) / 100)).toFixed(2)\r\n    const totalOtherAdditions = otherAdditions.map(item => item.amount).reduce((a, b) => (Number(a) + Number(b)))\r\n\r\n    useEffect(() => {\r\n        customers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setCustomerDetails({ ...value })\r\n        ))\r\n\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setReceiptInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n\r\n    const receiptData = {\r\n        source: 'cash sales',\r\n        receiptInput,\r\n        customerDetails,\r\n        data: elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        meansOfPayment: receiptInput.meansOfPayment,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        if (customerDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(() => {\r\n                    setfetching(true)\r\n                }, 500)\r\n\r\n                baseURL.post('/receipts', receiptData)\r\n                    // .then(() => axios.get(`/receipts/${receiptInput.invoiceNumber}`, {responseType: 'blob'}))\r\n                    // .then(res => {\r\n\r\n                    //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                    //     saveAs(pdfBlob, `invoiceNumber${receiptInput.invoiceNumber}`)\r\n                    //     axios.post(`/sendReceipt/${receiptInput.invoiceNumber}`, {customerDetails})\r\n\r\n                    .then(() => {\r\n                        onClick();\r\n                        refetch();\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            } else {\r\n                setAlertMessage('Please select a customer and add at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        } else {\r\n            setAlertMessage('Please select a customer and add at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>New Receipt</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={receiptInput.date} id='date' contentEditable={false} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"meansOfPayment\">\r\n                            <label htmlFor=\"meansOfPayment\">Means of Payment</label>\r\n                            <select name=\"meansOfPayment\" id=\"meansOfPayment\" value={receiptInput.meansOfPayment} onChange={handleChange} style={{ borderRadius: '5px', marginLeft: '0.3rem' }}>\r\n                                <option value=\"cash\">Default (Cash)</option>\r\n                                <option value=\"bank\">Bank</option>\r\n                                <option value=\"mobileMoney\">Mobile Money</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"receiptNumber\">\r\n                            <label htmlFor='receiptNumber'>\r\n                                Receipt Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"receiptNumber\" id=\"receiptNumber\" value={receiptInput.receiptNumber} readOnly={true} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={(e) => { setValue(e.target.value) }}\r\n                                onClick={() => { setActive(!active) }}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => { setNewCustomer(true) }}\r\n                                    >Add New Customer</button>\r\n                                    {\r\n                                        customers\r\n                                            .filter(item => {\r\n                                                if (!value) return true\r\n                                                if (item.name?.toLowerCase().includes(value?.toLowerCase())) {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .map((item, i) => (\r\n                                                <div\r\n                                                    className='autoListItem'\r\n                                                    onClick={() => { setValue(item.name); setActive(false); }}\r\n                                                    key={i}\r\n                                                    tabIndex='0'\r\n                                                >\r\n                                                    <p>{item.name}</p>\r\n                                                </div>\r\n                                            ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{customerDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{customerDetails?.country}</p>\r\n                                <p><b>City: </b>{customerDetails?.city}</p>\r\n                                <p><b>Street: </b>{customerDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{customerDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{customerDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{customerDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={receiptInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net Payable: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                                height: `${realVal}`,\r\n                                overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n\r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" id=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\", index)}\r\n                                    >\r\n                                        <option> </option>\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                        <button\r\n                            onClick={() => {\r\n                                setHeight((prev) => {\r\n                                    return prev + 7.3;\r\n                                });\r\n                                if (realVal === '100%') {\r\n                                    setAlertMessage('Cannot Add more rows')\r\n                                    setAlert(true)\r\n                                    setTimeout(()=>{\r\n                                        setAlert(false)\r\n                                    }, 3000)\r\n                                }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n\r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"deductionsAndAdditions\">\r\n                        <div className=\"hideAndShow\">\r\n                            <h5>Deductions</h5>\r\n                            <button onClick={() => { setCollapseDeductions(!collapseDeductions) }} type='button'>{collapseDeductions ? 'Hide' : 'Show'}</button>\r\n                        </div>\r\n                        <div className=\"deductions\">\r\n                            \r\n                            {\r\n                                collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.rebate} />\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.tradeDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.cashDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                            }\r\n                        </div>\r\n\r\n                        <ul className=\"deductions\">\r\n                            <div className=\"otherAdditions\">\r\n                                <li className='deductItem additionItem'>\r\n                                    <span>\r\n                                        Tax (VAT) Rate\r\n                                    </span>\r\n\r\n                                    <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.valueAddedTax} />\r\n\r\n                                    <span>\r\n                                        {\r\n                                            valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                        }\r\n                                    </span>\r\n                                </li>\r\n                            </div>\r\n                        </ul>\r\n\r\n                        <div className=\"additions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Additions</h5>\r\n                                <button onClick={() => { setCollapseAdditions(!collapseAdditions) }} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                            </div>\r\n                            {\r\n                                collapseAdditions && \r\n                            <ul className='otherAdditions'>\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='additionItem'>\r\n                                        <b><span>Element</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n                                </div>\r\n\r\n                                <div className=\"otherAdditions\">\r\n                                    {\r\n                                        otherAdditions.map((data, index) => (\r\n                                    <li key={index} className='additionItem'>\r\n                                        <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name' />\r\n\r\n                                        <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount' />\r\n                                    </li>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                                \r\n                                <div className=\"otherAdditions\">\r\n                                    <div className=\"additionItem\">\r\n                                        <h5>Total Additions</h5>\r\n                                        <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </ul>\r\n                            }\r\n                        </div>\r\n                        <div className=\"netPay\">\r\n                            <h3>Net Payable</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"saveOptions\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Cancel\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                                console.log('Save Button Clicked')\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                                console.log('Save and send Button Clicked')\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save and Send\r\n                            </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newCustomer && <NewCustomerForm onClick={() => { setNewCustomer(false) }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receipt\r\n\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\n// import { saveAs } from 'file-saver'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport Alert from './Alert';\r\n\r\n\r\nfunction ReceivePayment({ onClick, refetch }) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [active, setActive] = useState(false);\r\n    const [newCustomer, setNewCustomer] = useState(false);\r\n    const [fetching, setfetching] = useState(true);\r\n\r\n    const [value, setValue] = useState('')\r\n    const [customers, setCustomers] = useState([])\r\n    const [invoices, setInvoices] = useState([])\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const receiptDate = new Date(`${month}/${day}/${year}`).toDateString();\r\n\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    const [receivePaytInput, setReceivePaytInput] = useState({\r\n        date: receiptDate,\r\n    });\r\n\r\n    const [template, setTemplate] = useState([])\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/customers');\r\n        const request2 = baseURL.get('/invoices')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2] = res\r\n                setCustomers(result1.data.customers)\r\n                setInvoices(result2.data)\r\n                setfetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        customers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setCustomerDetails({ ...value })\r\n        ))\r\n\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setReceivePaytInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const invoiceTemplate = invoices.invoices?.filter(inv => (\r\n            inv.customerDetails.name === value\r\n        )).map(inv => (\r\n            {\r\n                ...inv,\r\n                date: receiptDate,\r\n                amountToPay: '',\r\n                meansOfPayment: 'cash'\r\n            }\r\n        ))\r\n        if (value !== '') {\r\n            setTemplate(invoiceTemplate)\r\n        }\r\n    }, [value])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = template.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setTemplate(newArr);\r\n    };\r\n\r\n\r\n    const totalToPay = template.map(temp => temp.amountToPay).reduce((a, b) => Number(a) + Number(b), 0);\r\n\r\n    const receivePaymentData = {\r\n        source: 'receive payment',\r\n        // customerDetails,\r\n        // receivePaytInput,\r\n        template,\r\n        totalToPay\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        if (totalToPay === 0) {\r\n            setAlertMessage('Please add at least one item to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        } else {\r\n            setTimeout(() => {\r\n                setfetching(true)\r\n            }, 500)\r\n\r\n            baseURL.post('/receivePayment', receivePaymentData)\r\n                // .then(() => axios.get(`/payments/${receivePaytInput.paymentNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n\r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `paymentNumber${receivePaytInput.paymentNumber}`)\r\n                //     axios.post(`/sendInvoice/${receivePaytInput.paymentNumber}`, {customerDetails})\r\n\r\n                .then(() => {\r\n                    onClick();\r\n                    refetch()\r\n                    setfetching(false)\r\n                })\r\n            // })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>Receive Payment</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\" style={{\r\n                        width: '70%',\r\n                        margin: '0 auto'\r\n                    }}>\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={receivePaytInput.date} id='date' contentEditable={false} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"meansOfPayment\">\r\n                            <label htmlFor=\"meansOfPayment\">Means of Payment</label>\r\n                            <select name=\"meansOfPayment\" id=\"meansOfPayment\" value={receivePaytInput.meansOfPayment} onChange={handleChange} style={{ borderRadius: '5px', marginLeft: '0.3rem' }}>\r\n                                <option value=\"Cash\">Default (Cash)</option>\r\n                                <option value=\"bank\">Bank</option>\r\n                                <option value=\"mobileMoney\">Mobile Money</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\" style={{\r\n                        width: '70%',\r\n                        margin: '0 auto'\r\n                    }}>\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={(e) => { setValue(e.target.value) }}\r\n                                onClick={() => { setActive(!active) }}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => { setNewCustomer(true) }}\r\n                                        className='selectCustomer'>Add New Customer</button>\r\n                                    {\r\n                                        customers\r\n                                            .filter(item => {\r\n                                                if (!value) return true\r\n                                                if (item.name?.toLowerCase().includes(value?.toLowerCase())) {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .map((item, i) => (\r\n                                                <div\r\n                                                    className='autoListItem'\r\n                                                    onClick={() => { setValue(item.name); setActive(false); }}\r\n                                                    key={i}\r\n                                                    tabIndex='0'\r\n                                                >\r\n                                                    <p className='selectCustomer'>{item.name}</p>\r\n                                                </div>\r\n                                            ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{customerDetails?.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"amount\">\r\n                        <h3 className='totalToPay'>Total: {totalToPay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}  </h3>\r\n                    </div>\r\n\r\n                    <div className=\"allDebtorsContainer\">\r\n                        <table className=\"allDebtorsTable\">\r\n                            <thead>\r\n                            {\r\n                                value === '' ? null : <tr>\r\n                                    <th>Invoice Number</th>\r\n                                    <th>Net Amount</th>\r\n                                    <th>Total Paid</th>\r\n                                    <th>Balance Owing</th>\r\n                                    <th>Amount To Pay</th>\r\n                                    <th>Means Of Payment</th>\r\n                                </tr>\r\n                            }\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {\r\n                                template?.filter(invoice => invoice.netPayable - invoice.totalPaid > 0).map((cust, index) => {\r\n                                    const value = cust.amountToPay\r\n                                    return (\r\n                                        <tr key={cust._id}>\r\n\r\n                                            <td>{cust.invoiceInput.invoiceNumber}</td>\r\n\r\n                                            <td>{(Number(cust.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n\r\n                                            <td>{(Number(cust.totalPaid || 0).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n\r\n                                            <td>{(Number(cust.balanceDue || 0).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td>\r\n                                                    <input type=\"number\" name='amountToPay' id='amountToPay' value={cust.amountToPay} onChange={\r\n                                                    updateFieldChanged('amountToPay', index)\r\n                                                }/>\r\n                                            </td>\r\n                                            <td>\r\n                                                <select name=\"meansOfPayment\" value={cust.meansOfPayment} onChange={updateFieldChanged('meansOfPayment', index)} style={{ borderRadius: '5px', marginLeft: '0.3rem' }}>\r\n                                                    <option value=\"Cash\">Default (Cash)</option>\r\n                                                    <option value=\"bank\">Bank</option>\r\n                                                    <option value=\"mobileMoney\">Mobile Money</option>\r\n                                                </select>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"totalToPay\">\r\n                        <h3 className='totalToPay'>Total: {totalToPay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </h3>\r\n                    </div>\r\n\r\n                    <div className=\"saveOptions\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Cancel\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                                console.log('Save Button Clicked')\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                                console.log('Save and send Button Clicked')\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save and Send\r\n                            </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newCustomer && <NewCustomerForm onClick={() => { setNewCustomer(false) }}\r\n                />\r\n            }\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePayment\r\n\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\nimport {data1} from './data'\r\nimport {baseURL} from './axios'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert';\r\n\r\n\r\nfunction Quotation({onClick, refetch}) {\r\n    const [active, setActive] = useState(false);\r\n    const [fetching, setfetching] = useState(true)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState(data1)\r\n    const [customers, setCustomers] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [quotes, setQuotes] = useState([])\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const today = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    const getData = async(source, unMounted)=>{\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/customers')\r\n        const request3 = baseURL.get('/quotations')\r\n        await axios.all([request1, request2, request3], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2, result3] = res\r\n            setProducts(result1.data)\r\n            setCustomers(result2.data.customers)\r\n            setQuotes(result3.data)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        getData(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n    const wrapperRef = useRef(null)\r\n\r\n    const [quoteInput, setQuoteInput] = useState({\r\n        date: `${today}/${month + 1}/${year}`,\r\n        quoteNumber: `00${quotes.length + 1}`,\r\n        customerName: ''\r\n    })\r\n\r\n    const sumTotal = data.map(data => {return(data.amount((data.qty), (data.up)))}).reduce((a, b)=>{return Number(a) + Number(b)}, 0)\r\n\r\n    useEffect(() => {\r\n        customers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setCustomerDetails({...value})\r\n        ))\r\n        \r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n\r\n        setQuoteInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n\r\n    const quoteData = {\r\n        quoteInput,\r\n        customerDetails,\r\n        data: elements,\r\n        grossAmount: sumTotal\r\n    }\r\n\r\n    const handleSubmit = async ()=>{\r\n        if (customerDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(()=>{\r\n                    setfetching(true)\r\n                }, 500)\r\n                \r\n                baseURL.post('/quotation', quoteData)\r\n                // .then(() => axios.get(`/quotations/${quoteInput.quoteNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n                    \r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `qoutationNumber${quoteInput.quoteNumber}`)\r\n                //     axios.post(`/sendQuote/${quoteInput.quoteNumber}`, {customerDetails})\r\n                    \r\n                    .then(()=>{\r\n                        onClick();\r\n                        refetch()\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            } else {\r\n                setAlertMessage('Please select a customer and add at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        } else {\r\n            setAlertMessage('Please select a customer and add at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n        <div className=\"close\" onClick={onClick}>\r\n            <i className=\"fas fa-times fa-lg\"></i>\r\n        </div>\r\n            <h3>New Quotation</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={quoteInput.date} id='date' contentEditable={false} readOnly={true}/>\r\n                        </div>\r\n                        <div className=\"expDate\">\r\n                            <label htmlFor=\"expDate\">\r\n                                Expiration Date:\r\n                            </label>\r\n                        <input type=\"date\" id=\"expDate\" name=\"expDate\" value={quoteInput.expDate} onChange={handleChange}/>\r\n                        </div>\r\n                        <div className=\"quoteNumber\">\r\n                            <label htmlFor='quoteNumber'>\r\n                            Quote Number:\r\n                        </label>\r\n                        <input type=\"text\" name=\"quoteNumber\" id=\"quoteNumber\" value={quoteInput.quoteNumber} readOnly={true}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={value} \r\n                                onChange={(e)=>{setValue(e.target.value)}}\r\n                                onClick={()=>{setActive(!active)}}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={()=>{setNewCustomer(true)}}\r\n                                    className='selectCustomer'>Add New Customer</button>\r\n                                    {\r\n                                        customers\r\n                                        .filter(item => {\r\n                                            if (!value) return true\r\n                                            if (item.name?.toLowerCase().includes(value?.toLowerCase())) {\r\n                                            return true\r\n                                            }\r\n                                        })\r\n                                        .map((item, i) => (\r\n                                            <div\r\n                                                className='autoListItem'\r\n                                                onClick={()=>{setValue(item.name); setActive(false);}}\r\n                                                key={i}\r\n                                                tabIndex='0'\r\n                                            >\r\n                                                <p className='selectCustomer'>{item.name}</p>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{customerDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{customerDetails?.country}</p>\r\n                                <p><b>City: </b>{customerDetails?.city}</p>\r\n                                <p><b>Street: </b>{customerDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{customerDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{customerDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{customerDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={quoteInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Total: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                    <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n                            \r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" id=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\")} onChange={updateFieldChanged(\"productName\", index)}>\r\n                                    <option> </option>\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                            <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 7.3;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                setAlertMessage('Cannot Add more rows')\r\n                                setAlert(true)\r\n                                setTimeout(()=>{\r\n                                    setAlert(false)\r\n                                }, 3000)\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                console.log('Save Button Clicked')\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                console.log('Save and send Button Clicked')\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save and Send\r\n                            </button>\r\n\r\n                        <h3 className='amount'>Grand Total: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    \r\n                </form>\r\n\r\n            </div>\r\n\r\n            {\r\n                newCustomer && <NewCustomerForm onClick={()=>{setNewCustomer(false)}}\r\n                />\r\n            }\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quotation\r\n\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport './Quotation.css';\r\nimport {data1} from './data'\r\n// import {saveAs} from 'file-saver'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport Alert from './Alert';\r\n\r\n\r\nfunction CreditNote({onClick, refetch}) {\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [products, setProducts] = useState([])\r\n    const [customers, setCustomers] = useState([])\r\n    const [creditNotes, setCreditNotes] = useState([])\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const today = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    useEffect(async() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/customers')\r\n        const request3 = baseURL.get('/creditNotes')\r\n        await axios.all([request1, request2, request3], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2, result3] = res\r\n            setProducts(result1.data)\r\n            setCustomers(result2.data.customers)\r\n            setCreditNotes(result3.data)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    const handleAdditionsAndSubtractions = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue =>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [noteInput, setNoteInput] = useState({\r\n        date: `${today}/${month + 1}/${year}`,\r\n        noteNumber: `00${creditNotes.length + 1}`,\r\n        customerName: ''\r\n    })\r\n\r\n    const sumTotal = data.map(data => {return(data.amount((data.qty), (data.up)))}).reduce((a, b)=>{return Number(a) + Number(b)}, 0)\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate)/100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount)/100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount)/100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax)/100)).toFixed(2)\r\n    const totalOtherAdditions = otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b)))\r\n\r\n    useEffect(() => {\r\n        customers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setCustomerDetails({...value})\r\n        ))\r\n        \r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n\r\n        setNoteInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n\r\n    const noteData = {\r\n        noteInput,\r\n        customerDetails,\r\n        data : elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: ((financialNet + Number(valueAddedTax) + totalOtherAdditions)).toFixed(2),\r\n    }\r\n\r\n    const handleSubmit = async ()=>{\r\n        if (customerDetails.name !== ''){\r\n            if (elements.length > 0) {\r\n                setTimeout(()=>{\r\n                    setfetching(true)\r\n                }, 500)\r\n                \r\n                baseURL.post('/creditNote', noteData)\r\n                // .then(() => axios.get(`/invoices/${noteInput.noteNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n                    \r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `creditNoteNumber${noteInput.noteNumber}`)\r\n                //     axios.post(`/sendCreditNote/${noteInput.noteNumber}`, {customerDetails})\r\n                    \r\n                    .then((res)=>{\r\n                        console.log(res.data);\r\n                        onClick();\r\n                        refetch();\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            }else{\r\n                setAlertMessage('Please select a customer and add at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        }else{\r\n            setAlertMessage('Please select a customer and add at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n        <div className=\"close\" onClick={onClick}>\r\n            <i className=\"fas fa-times fa-lg\"></i>\r\n        </div>\r\n            <h3>New Credit Note</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={noteInput.date} id='date' contentEditable={false} readOnly={true}/>\r\n                        </div>\r\n                        <div className=\"noteNumber\">\r\n                            <label htmlFor='quoteNumber'>\r\n                                Note Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"noteNumber\" id=\"quoteNumber\" value={noteInput.noteNumber} readOnly={true}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={value} \r\n                                onChange={(e)=>{setValue(e.target.value)}}\r\n                                onClick={()=>{setActive(!active)}}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={()=>{setNewCustomer(true)}}\r\n                                >Add New Customer</button>\r\n                                    {\r\n                                        customers\r\n                                        .filter(item => {\r\n                                            if (!value) return true\r\n                                            if (item.name?.toLowerCase().includes(value?.toLowerCase())) {\r\n                                            return true\r\n                                            }\r\n                                        })\r\n                                        .map((item, i) => (\r\n                                            <div\r\n                                                className='autoListItem'\r\n                                                onClick={()=>{setValue(item.name); setActive(false);}}\r\n                                                key={i}\r\n                                                tabIndex='0'\r\n                                            >\r\n                                                <p>{item.name}</p>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{customerDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{customerDetails?.country}</p>\r\n                                <p><b>City: </b>{customerDetails?.city}</p>\r\n                                <p><b>Street: </b>{customerDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{customerDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{customerDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{customerDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={noteInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net to your credit: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                    <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n                            \r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" id=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\")} onChange={updateFieldChanged(\"productName\", index)}>\r\n                                    <option> </option>\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                            <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 7.3;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                setAlertMessage('Cannot Add more rows')\r\n                                setAlert(true)\r\n                                setTimeout(()=>{\r\n                                    setAlert(false)\r\n                                }, 3000)\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n                        \r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n\r\n                        <div className=\"deductionsAndAdditions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Deductions</h5>\r\n                                <button onClick={()=>{\r\n                                    setCollapseDeductions(!collapseDeductions)\r\n                                    }} \r\n                                    type='button'\r\n                                >\r\n                                    {collapseDeductions ? 'Hide' : 'Show'}\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"deductions\">\r\n                                {\r\n                                    collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate   \r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.rebate}/>\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.tradeDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.cashDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                                }\r\n                            </div>\r\n\r\n                            <ul className=\"deductions\">\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='deductItem additionItem'>\r\n                                        <span>\r\n                                            Tax (VAT) Rate\r\n                                        </span>\r\n                                            \r\n                                        <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.valueAddedTax}/>\r\n\r\n                                        <span>\r\n                                        {\r\n                                            valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                        }\r\n                                        </span>\r\n                                    </li>\r\n                                </div>\r\n                            </ul>\r\n                            \r\n                            <div className=\"additions\">\r\n                                <div className=\"hideAndShow\">\r\n                                    <h5>Additions</h5>\r\n                                    <button onClick={()=>{setCollapseAdditions(!collapseAdditions)}} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                                </div>\r\n                                {\r\n                                collapseAdditions && \r\n                                <ul className='otherAdditions'>\r\n                                    <div className=\"otherAdditions\">\r\n                                        <li className='additionItem'>\r\n                                            <b><span>Element</span></b>\r\n                                            <b><span>Amount</span></b>\r\n                                        </li>\r\n                                    </div>\r\n                                        \r\n                                            \r\n                                    \r\n                                    <div className=\"otherAdditions\">\r\n                                        {\r\n                                        otherAdditions.map((data, index)=> (\r\n                                        <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name'/>\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount'/>\r\n                                        </li>\r\n                                        ))\r\n                                        }\r\n                                    </div>\r\n                                        \r\n                                    <div className=\"otherAdditions\">\r\n                                        <div className=\"additionItem\">\r\n                                            <h5>Total Additions</h5>\r\n                                            <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </ul>\r\n                                }\r\n                            </div>\r\n                            <div className=\"netPay\">\r\n                                <h3>Net To Your Credit</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"saveOptions\">\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                console.log('Save Button Clicked')\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                console.log('Save and send Button Clicked')\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save and Send\r\n                            </button>\r\n                        </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newCustomer && <NewCustomerForm onClick={()=>{setNewCustomer(false)}}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreditNote\r\n\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport './Sales.css'\r\nimport {baseURL} from './axios'\r\nimport axios from 'axios'\r\nimport Barchart from './Barchart'\r\nimport Invoice from './Invoice'\r\nimport Receipt from './Receipt'\r\nimport ReceivePayment from './ReceivePayment'\r\nimport Quotation from './Quotation'\r\nimport CreditNote from './CreditNote'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction Sales() {\r\n\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [invoice, setInvoice] = useState(false)\r\n    const [receipt, setReceipt] = useState(false)\r\n    const [receivePayment, setReceivePayment] = useState(false)\r\n    const [quotation, setQuotation] = useState(false)\r\n    const [creditNote, setCreditNote] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const [salesData, setSalesData] = useState([])\r\n    const [graphInfo, setGraphInfo] = useState([])\r\n    const [creditSalesGraph, setCreditSalesGraph] = useState([])\r\n    const [cashSalesGraph, setCashSalesGraph] = useState([])\r\n    const [returns, setReturns] = useState([])\r\n\r\n    useEffect(async() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        await baseURL.get('/sales', {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            console.log(res.data);\r\n            const sales = res.data.sales\r\n            setSalesData(res.data.sales)\r\n            setGraphInfo(res.data.graph)\r\n            setCreditSalesGraph(res.data.creditSales)\r\n            setCashSalesGraph(res.data.cashSales)\r\n            setReturns(res.data.salesReturns)\r\n            setFetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const values = graphInfo?.map(a => a.value)\r\n    const months = graphInfo?.map(a => a.month)\r\n\r\n    const salesReturns = returns.map(a => a.netPayable).reduce((a,b) => a + b, 0)\r\n\r\n        const creditSales = salesData?.filter(a => {\r\n            return (a.saleType === 'credit')\r\n        }).map(a => a.amount). reduce((a,b)=> a + b,0)\r\n\r\n        const cashSaleElements = []\r\n\r\n    salesData?.filter(a => {\r\n        if(a.saleType === 'cash'){\r\n            cashSaleElements.push(a)\r\n        }\r\n        if(a.saleType === 'bank'){\r\n            cashSaleElements.push(a)\r\n        }\r\n        if(a.saleType === 'mobileMoney'){\r\n            cashSaleElements.push(a)\r\n        }\r\n    })\r\n\r\n    const cashSales = cashSaleElements?.map(a => a.amount).reduce((a, b) => a + b, 0)\r\n    \r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        \r\n\r\n\r\n    return (\r\n        <div className='Sales Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                <h1>Sales Dashboard</h1>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>New Transaction<i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                        <p className=\"option\" onClick={()=>{setInvoice(true)}}>New Invoice</p>\r\n                            <p className=\"option\" onClick={()=>{setReceipt(true)}}>New Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setCreditNote(true)}}>Sales Returns</p>\r\n                            <p className=\"option\" onClick={()=>{setReceivePayment(true)}}>Receive Payment</p>\r\n                            <p className=\"option\" onClick={()=>{setQuotation(true)}}>Quotation</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"salesMiddle\">\r\n                <div className=\"salesTotals\">\r\n                    <div className=\"cashSales\" data-text='go to receipts' onClick={()=>{history.push('/receipts')}}>\r\n                        <h5>Total Sales Receipts</h5>\r\n                        <p><b>{(Number(cashSales)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"creditSales\" data-text='go to invoices' onClick={()=>{history.push('/invoices')}}>\r\n                        <h5>Total Credit Sales</h5>\r\n                        <p><b>{(Number(creditSales)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></p>\r\n                    </div>\r\n\r\n                        <div className=\"salesReturns\" data-text='go to credit notes' onClick={()=>{history.push('/credit-notes')}}>\r\n                            <h5>Total Sales Returns</h5>\r\n                            <p style={{color: 'red'}}><b>{(Number(salesReturns)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></p>\r\n                        </div>\r\n                </div>\r\n\r\n                <Barchart\r\n                    labels={months}\r\n                    data3={values}\r\n                    tooltip3='Total Sales Per Month'\r\n                    data1={creditSalesGraph?.map(item => item.value)}\r\n                    tooltip1='Credit Sales'\r\n                    data2={cashSalesGraph?.map(item => item.value)}\r\n                    tooltip2='Sales Receipts'\r\n                />\r\n            </div>\r\n\r\n            {\r\n                invoice && <Invoice\r\n                    onClick={()=>{setInvoice(false)}}\r\n                    refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Invoice Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                receipt && <Receipt\r\n                    onClick={()=>{\r\n                        setReceipt(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Receipt Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                receivePayment && <ReceivePayment\r\n                    onClick={()=>{\r\n                        setReceivePayment(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Payment Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                quotation && <Quotation\r\n                    onClick={()=>{\r\n                        setQuotation(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Quotation Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                creditNote && <CreditNote\r\n                    onClick={()=>{\r\n                        setCreditNote(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Credit Note Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            {\r\n                alert &&\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sales\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport Alert from './Alert'\r\n\r\nfunction CustomersPage() {\r\n\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const [salesData, setSalesData] = useState([])\r\n    const [customers, setCustomers] = useState([])\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        getData(source, unMounted)\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const getData = async(source, unMounted)=>{\r\n        const request1 = baseURL.get('/sales')\r\n        const request2 = baseURL.get('/customers')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2] = res\r\n                const sales = result1.data.sales\r\n                setSalesData(result1.data.sales)\r\n                setCustomers(result2.data.customers)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n    }\r\n    const wrapperRef = useRef(null)\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setNewCustomer(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Sales'>\r\n            <div className=\"Invoices\">\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Customers</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewCustomer(true)}}>New Customer</button>\r\n                </div>\r\n                <div className=\"allDebtorsContainer\">\r\n                    {\r\n                        customers.length === 0 ? <div style={{marginTop: '1rem'}}>\r\n                            <h3>No Data to display. Please Add Customers</h3>\r\n                            <button className=\"btn\" onClick={() =>{setNewCustomer(true) }}>Add Customer</button>\r\n                        </div> :\r\n                            <h3 style={{textAlign:'left'}}>All Customers</h3>\r\n                    }\r\n                    <table className='allDebtorsTable'>\r\n                        <thead>\r\n                            {\r\n                                customers.length === 0 ? '' :\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Customer Name</th>\r\n                                        <th>Email Address</th>\r\n                                        <th>City </th>\r\n                                        <th>Telephone</th>\r\n                                    </tr>\r\n                            }\r\n                        </thead>\r\n\r\n                        <tbody className='tableBody'>\r\n                            {\r\n                                customers?.map(customer => (\r\n                                    <tr className='invoiceListbody invoiceDetail' onClick={() =>{history.push(`/customers/${customer.name}`)}}>\r\n                                        <td>{customer.name}</td>\r\n                                        <td>{customer.email}</td>\r\n                                        <td>{customer.city}</td>\r\n                                        <td>{customer.telephone?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"-\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newCustomer && <div ref={wrapperRef}>\r\n                    <NewCustomerForm\r\n                    onClick={() => {\r\n                        setNewCustomer(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Customer Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                    />\r\n                </div>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                alertMessage={alertMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomersPage\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport './CustomerDetails.css'\r\nimport Barchart from './Barchart'\r\nimport Invoice from './Invoice';\r\nimport Receipt from './Receipt';\r\nimport ReceivePayment from './ReceivePayment';\r\nimport Quotation from './Quotation';\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport CreditNote from './CreditNote'\r\nimport Alert from './Alert'\r\n\r\nfunction CustomerDetails() {\r\n    const [fetching, setFetching] = useState(true)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [invoice, setInvoice] = useState(false)\r\n    const [receipt, setReceipt] = useState(false)\r\n    const [quotation, setQuotation] = useState(false)\r\n    const [receivePayment, setReceivePayment] = useState(false)\r\n    const [creditNote, setCreditNote] = useState(false)\r\n    const [viewInvoices, setViewInvoices] = useState(false)\r\n    const [viewReceipts, setViewReceipts] = useState(false)\r\n    const [viewQuotations, setViewQuotations] = useState(false)\r\n    const [viewCreditNotes, setViewCreditNotes] = useState(false)\r\n    const [overview, setOverview] = useState(true)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n\r\n    const [invoices, setInvoices] = useState([])\r\n    const [receipts, setReceipts] = useState([])\r\n    const [quotations, setQuotations] = useState([])\r\n    const [creditNotes, setCreditNotes] = useState([])\r\n    const [sales, setSales] = useState([])\r\n    const [debtors, setDebtors] = useState([])\r\n    const [invoiceAdditions, setinvoiceAdditions] = useState([])\r\n    const [receiptAdditions, setReceiptAdditions] = useState([])\r\n    const [creditNoteAdditions, setCreditNoteAdditions] = useState([])\r\n    const [customers, setCustomers] = useState([])\r\n    const [buttonClicked, setButtonClicked] = useState('overview')\r\n\r\n    const wrapperRef = useRef(null)\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const element = customers?.filter(a => a.name === params.customerName)\r\n\r\n    let jan = []\r\n    let feb = []\r\n    let mar = []\r\n    let apr = []\r\n    let may = []\r\n    let jun = []\r\n    let jul = []\r\n    let aug = []\r\n    let sept = []\r\n    let oct = []\r\n    let nov = []\r\n    let dec = []\r\n\r\n    sales?.filter(item => item.saleType !== 'sales returns').filter( sale => {\r\n        const month = new Date(sale.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                jan.push(sale.amount)\r\n                break;\r\n            \r\n            case 1:\r\n                feb.push(sale.amount)\r\n                break;\r\n\r\n            case 2:\r\n                mar.push(sale.amount)\r\n                break;\r\n\r\n            case 3:\r\n                apr.push(sale.amount)\r\n                break;\r\n\r\n            case 4:\r\n                may.push(sale.amount)\r\n                break;\r\n\r\n            case 5:\r\n                jun.push(sale.amount)\r\n                break;\r\n\r\n            case 6:\r\n                jul.push(sale.amount)\r\n                break;\r\n\r\n            case 7:\r\n                aug.push(sale.amount)\r\n                break;\r\n\r\n            case 8:\r\n                sept.push(sale.amount)\r\n                break;\r\n\r\n            case 9:\r\n                oct.push(sale.amount)\r\n                break;\r\n\r\n            case 10:\r\n                nov.push(sale.amount)\r\n                break;\r\n        \r\n            case 11:\r\n                dec.push(sale.amount)\r\n                break;\r\n\r\n            \r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    jan = jan.reduce((a, b) => a + b, 0)\r\n    feb = feb.reduce((a, b) => a + b, 0)\r\n    mar = mar.reduce((a, b) => a + b, 0)\r\n    apr = apr.reduce((a, b) => a + b, 0)\r\n    may = may.reduce((a, b) => a + b, 0)\r\n    jun = jun.reduce((a, b) => a + b, 0)\r\n    jul = jul.reduce((a, b) => a + b, 0)\r\n    aug = aug.reduce((a, b) => a + b, 0)\r\n    sept = sept.reduce((a, b) => a + b, 0)\r\n    oct = oct.reduce((a, b) => a + b, 0)\r\n    nov = nov.reduce((a, b) => a + b, 0)\r\n    dec = dec.reduce((a, b) => a + b, 0)\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n            const {current : wrap} = wrapperRef;\r\n            if(wrap && !wrap.contains(e.target)){\r\n                setNewCustomer(false);\r\n            }\r\n        }\r\n\r\n    useEffect(async ()=>{\r\n        const request1 = baseURL.get(`/customers/${params.customerName}`);\r\n        const request2 = baseURL.get('/customers')\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2] = res\r\n            setInvoices(result1.data.invoices)\r\n            setReceipts(result1.data.receipts)\r\n            setQuotations(result1.data.quotations)\r\n            setCreditNotes(result1.data.creditNotes)\r\n            setSales(result1.data.sales)\r\n            setDebtors(result1.data.debtorList)\r\n            setinvoiceAdditions(result1.data.invoices.map(a => a.otherAdditions.map(b => b.amount).reduce((a, b) => a + b, 0)));\r\n            setReceiptAdditions(result1.data.receipts.map(a => a.otherAdditions.map(b => b.amount).reduce((a, b) => a + b, 0)));\r\n            setCreditNoteAdditions(result1.data.creditNotes.map(a => a.otherAdditions.map(b => b.amount).reduce((a, b) => a + b, 0)))\r\n            setCustomers(result2.data.customers)\r\n            setFetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    let credit1 = []; let cash1 = [];\r\nlet credit2 = []; let cash2 = [];\r\nlet credit3 = []; let cash3 = [];\r\nlet credit4 = []; let cash4 = [];\r\nlet credit5 = []; let cash5 = [];\r\nlet credit6 = []; let cash6 = [];\r\nlet credit7 = []; let cash7 = [];\r\nlet credit8 = []; let cash8 = [];\r\nlet credit9 = []; let cash9 = [];\r\nlet credit10 = []; let cash10 = [];\r\nlet credit11 = []; let cash11 = [];\r\nlet credit12 = []; let cash12 = [];\r\n\r\n    invoices?.filter(invoice => {\r\n        const month = new Date(invoice.invoiceInput?.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                credit1.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 1:\r\n                credit2.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 2:\r\n                credit3.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 3:\r\n                credit4.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 4:\r\n                credit5.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 5:\r\n                credit6.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 6:\r\n                credit7.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 7:\r\n                credit8.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 8:\r\n                credit9.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 9:\r\n                credit10.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 10:\r\n                credit11.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 11:\r\n                credit12.push(invoice.netPayable)\r\n                break;\r\n\r\n\r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    receipts?.filter(invoice => {\r\n        const month = new Date(invoice.receiptInput?.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                cash1.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 1:\r\n                cash2.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 2:\r\n                cash3.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 3:\r\n                cash4.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 4:\r\n                cash5.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 5:\r\n                \r\n                cash6.push(invoice.netPayable)\r\n                break;\r\n                \r\n\r\n            case 6:\r\n                cash7.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 7:\r\n                cash8.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 8:\r\n                cash9.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 9:\r\n                cash10.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 10:\r\n                cash11.push(invoice.netPayable)\r\n                break;\r\n\r\n            case 11:\r\n                cash12.push(invoice.netPayable)\r\n                break;\r\n\r\n\r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\nconst janCash1 = cash1.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash2 = cash2.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash3 = cash3.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash4 = cash4.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash5 = cash5.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash6 = cash6.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash7 = cash7.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash8 = cash8.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash9 = cash9.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash10 = cash10.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash11 = cash11.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash12 = cash12.reduce((a,b) => Number(a) + Number(b), 0)\r\n\r\nconst janCredit1 = credit1.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit2 = credit2.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit3 = credit3.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit4 = credit4.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit5 = credit5.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit6 = credit6.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit7 = credit7.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit8 = credit8.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit9 = credit9.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit10 = credit10.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit11 = credit11.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit12 = credit12.reduce((a,b) => Number(a) + Number(b), 0)\r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n    \r\n    \r\n    return (\r\n        <div className='CustomerDetails Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                <h1>Customer: {params.customerName}</h1>\r\n                <div className=\"moreOptions\">\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>New Transaction<i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                        <p className=\"option\" onClick={()=>{setInvoice(true)}}>Invoice</p>\r\n                            <p className=\"option\" onClick={()=>{setReceipt(true)}}>Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setReceivePayment(true)}}>Receive Payment</p>\r\n                            <p className=\"option\" onClick={()=>{setCreditNote(true)}}>Credit Note</p>\r\n                            <p className=\"option\" onClick={()=>{setQuotation(true)}}>Quotation</p>\r\n                            <p className=\"option\" onClick={()=>{setNewCustomer(true)}}>New Customer</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"filterContainer\">\r\n                <div className='filter'>\r\n                        <button\r\n                            className={buttonClicked === 'overview' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('overview')\r\n                                setViewInvoices(false)\r\n                                setViewReceipts(false)\r\n                                setViewQuotations(false)\r\n                                setViewCreditNotes(false)\r\n                                setOverview(true)\r\n                            }}\r\n                        >\r\n                            Overview\r\n                                </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View Invoices' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View Invoices')\r\n                                setViewReceipts(false)\r\n                                setViewQuotations(false)\r\n                                setViewCreditNotes(false)\r\n                                setOverview(false)\r\n                                setViewInvoices(true)\r\n                            }}\r\n                        >\r\n                            All Invoices\r\n                                </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View Receipts' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View Receipts')\r\n                                setViewQuotations(false)\r\n                                setViewCreditNotes(false)\r\n                                setOverview(false)\r\n                                setViewInvoices(false)\r\n                                setViewReceipts(true)\r\n                            }}\r\n                        >\r\n                            Receipts\r\n                                </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View Quotation' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View Quotation')\r\n                                setViewCreditNotes(false)\r\n                                setOverview(false)\r\n                                setViewInvoices(false)\r\n                                setViewReceipts(false)\r\n                                setViewQuotations(true)\r\n                            }}\r\n                        >\r\n                            Quotations\r\n                        </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View CreditNote' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View CreditNote');\r\n                                setOverview(false)\r\n                                setViewInvoices(false)\r\n                                setViewReceipts(false)\r\n                                setViewQuotations(false)\r\n                                setViewCreditNotes(true)\r\n                            }}\r\n                        >\r\n                            Credit Notes\r\n                        </button>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                overview &&\r\n                <div className=\"customerBodyELements\">\r\n                {\r\n                    element?.map(e => (\r\n                        <div className=\"customerDetailsInfo\">\r\n                            <i class=\"fas fa-user-circle fa-5x\"></i>\r\n                            <div className=\"customerName group\">\r\n                                <h2>Name: {e.name}</h2>\r\n                                {\r\n                                    debtors?.map(debt => (\r\n                                        <p className=\"balanceDue\">\r\n                                            Total Debt: {debt.balanceDue}\r\n                                        </p>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className=\"contactInfos group\">\r\n                                <h3 className='customerDetail'><u>Contact Info</u></h3>\r\n                                <p className='customerDetail'><span>Email:</span>{e.email}</p>\r\n                                <p className='customerDetail'><span>Tel:</span>{e.telephone}</p>\r\n                                <p className='customerDetail'><span>Mobile:</span>{e.mobile}</p>\r\n                                <p className='customerDetail'><span>P.O Box: </span>{e.fax}</p>\r\n                            </div>\r\n\r\n                            <div className=\"addressInfos group\">\r\n                                <h3 className='customerDetail'><u>Address Info</u></h3>\r\n                                <p className='customerDetail'><span>Country:</span> {e.country}</p>\r\n                                <p className='customerDetail'><span>City:</span> {e.city}</p>\r\n                                <p className='customerDetail'><span>Street:</span> {e.street}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    sales.length > 0 ? <div className=\"recentAndBarChart\">\r\n                        <div className=\"recentTransactions\">\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Credits</b></p>\r\n                                <p>{((invoices?.map(item => item.netPayable).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Cash</b></p>\r\n                                <p>{((receipts?.map(item => item.netPayable).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Received</b></p>\r\n                                <p>{((debtors?.map(item => item.totalPaid).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Balance Owed</b></p>\r\n                                <p>{((debtors?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"barChartChart\">\r\n                            <Barchart\r\n                            labels={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']}\r\n                            data3={\r\n                                [jan, feb, mar, apr, may, jun, jul, aug, sept, oct, nov, dec]\r\n                            }\r\n                            tooltip3={`Total Sales`}\r\n                            data1={\r\n                                [janCredit1, janCredit2, janCredit3, janCredit4, janCredit5, janCredit6, janCredit7, janCredit8, janCredit9, janCredit10, janCredit11, janCredit12]\r\n                            }\r\n                            tooltip1={`Credit Sales`}\r\n                            data2={\r\n                                [janCash1, janCash2, janCash3, janCash4, janCash5, janCash6, janCash7, janCash8, janCash9, janCash10, janCash11, janCash12]\r\n                            }\r\n                            tooltip2={`Cash Sales`}\r\n                            />\r\n                        </div>\r\n\r\n                    </div> : <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n            </div>\r\n            }\r\n\r\n            <div className='allDebtorsContainer'>\r\n                    {\r\n                        viewInvoices &&\r\n                            invoices.length > 0 ? <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n                                        <th>Invoice Term</th>\r\n                                        <th>Due Date</th>\r\n\r\n                                        <th>Invoice Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                        <th>Total Discounts</th>\r\n                                        <th>VAT</th>\r\n                                        <th>Other Additions</th>\r\n                                        <th>Net Payable</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        invoices?.map((invoice, index) => (\r\n                                            <tr className='invoiceListbody invoiceDetail' onClick={()=>{history.push(`/invoices/${invoice._id}`)}}>\r\n                                                <td>{new Date(invoice.invoiceInput.date).toLocaleDateString()}</td>\r\n                                                <td>{invoice.selectInvoiceTerm} days</td>\r\n                                                <td>{new Date(invoice.dueDate).toLocaleDateString()}</td>\r\n                                                <td>{invoice.invoiceInput.invoiceNumber}</td>\r\n                                                <td>{(invoice.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(invoice.discountsAndVat.rebateValue) + Number(invoice.discountsAndVat.tradeDiscountValue) + Number(invoice.discountsAndVat.cashDiscountValue)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(invoice.discountsAndVat.valueAddedTax).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(invoiceAdditions[index])?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{((invoice.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewInvoices && <h2 className='noData'>No Invoices To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                    {\r\n                        viewReceipts &&\r\n                            receipts.length > 0 ?\r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n                                        <th>Receipt Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                        <th>Total Discounts</th>\r\n                                        <th>VAT</th>\r\n                                        <th>Other Additions</th>\r\n                                        <th>Net Payable</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        receipts?.map((receipt, index) => (\r\n                                            <tr className='receiptListbody invoiceDetail' onClick={()=>{history.push(`/receipts/${receipt._id}`)}}>\r\n                                                <td>{receipt.receiptInput.date}</td>\r\n                                                <td>{receipt.receiptInput.receiptNumber}</td>\r\n                                                <td>{(receipt.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(receipt.discountsAndVat.rebateValue) + Number(receipt.discountsAndVat.tradeDiscountValue) + Number(receipt.discountsAndVat.cashDiscountValue)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(receipt.discountsAndVat.valueAddedTax).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(receiptAdditions[index])?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(receipt.netPayable).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewReceipts && <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                    {\r\n                        viewCreditNotes &&\r\n                            creditNotes.length > 0 ?\r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n\r\n                                        <th>Return Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                        <th>Total Discounts</th>\r\n                                        <th>VAT</th>\r\n                                        <th>Other Additions</th>\r\n                                        <th>Net Payable</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        creditNotes.map((note, index) => (\r\n                                            <tr className='noteListbody invoiceDetail' onClick={()=>{history.push(`/credit-notes/${note._id}`)}}>\r\n                                                <td>{note.noteInput.date}</td>\r\n                                                <td>{note.noteInput.returnNumber}</td>\r\n                                                <td>{(note.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(note.discountsAndVat.rebateValue) + Number(note.discountsAndVat.tradeDiscountValue) + Number(note.discountsAndVat.cashDiscountValue)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(note.discountsAndVat.valueAddedTax).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(creditNoteAdditions[index])?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{((note.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewCreditNotes && <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                    {\r\n                        viewQuotations &&\r\n                            quotations.length > 0 ?\r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n\r\n                                        <th>Quote Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        quotations.map((quote, index) => (\r\n                                            <tr className='quoteListbody' onClick={()=>{history.push(`/quotes/${quote._id}`)}}>\r\n                                                <td>{quote.quoteInput.date}</td>\r\n                                                <td>{quote.quoteInput.quoteNumber}</td>\r\n                                                <td>{(quote.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewQuotations && <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n            {\r\n                invoice && <Invoice\r\n                    onClick={() => { setInvoice(false) }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Invoice Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                receipt && <Receipt\r\n                    onClick={() => {\r\n                        setReceipt(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Receipt Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                receivePayment && <ReceivePayment\r\n                    onClick={() => {\r\n                        setReceivePayment(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Customer Payment Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                quotation && <Quotation\r\n                    onClick={() => {\r\n                        setQuotation(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Quotation Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                creditNote && <CreditNote\r\n                    onClick={() => {\r\n                        setCreditNote(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Returns Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newCustomer && <div ref={wrapperRef}>\r\n                    <NewCustomerForm\r\n                    onClick={() => {\r\n                        setNewCustomer(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Customer Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerDetails\r\n","import React, {useState} from 'react'\r\nimport Alert from './Alert';\r\nimport {baseURL as axios} from './axios'\r\nimport './NewCustomerForm.css'\r\n\r\nfunction NewSupplierForm({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [newSupplier, setNewSupplier] = useState({\r\n        name: '',\r\n        email: '',\r\n        tel : '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n\r\n        setNewSupplier(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault();\r\n        if (newSupplier.name == '' || newSupplier.email === '' || newSupplier.tel === '') {\r\n            setAlertMessage(\"Please add supplier's name, email and telephone number\")\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        } else {\r\n            await axios.post('/suppliers', newSupplier)\r\n            .then(res => {\r\n                onClick();\r\n                refetch()\r\n            })\r\n            .catch(err => console.log(err))\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className=\"newCustomerForm\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>Add New Supplier</h3>\r\n            <form action=\"\" className=\"form\">\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"name\">Supplier's Name</label>\r\n                        <input type=\"text\" name=\"name\" value={newSupplier.name} onChange={handleChange} id=\"name\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input type=\"email\" name=\"email\" value={newSupplier.email} onChange={handleChange} id=\"email\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"country\">Country</label>\r\n                        <input type=\"text\" name=\"country\" value={newSupplier.country} onChange={handleChange} id=\"country\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"city\">Town/City</label>\r\n                        <input type=\"text\" name=\"city\" value={newSupplier.city} onChange={handleChange} id=\"city\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"street\">Street Address</label>\r\n                        <input type=\"text\" name=\"street\" value={newSupplier.street} onChange={handleChange} id=\"street\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"tel\">Telephone</label>\r\n                        <input type=\"number\" name=\"tel\" value={newSupplier.tel} onChange={handleChange} id=\"tel\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"mobile\">Mobile</label>\r\n                        <input type=\"number\" name=\"mobile\" value={newSupplier.mobile} onChange={handleChange} id=\"mobile\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <label htmlFor=\"fax\">Fax</label>\r\n                        <input type=\"text\" name=\"fax\" value={newSupplier.fax} onChange={handleChange} id=\"fax\"/>\r\n                    </div>\r\n\r\n                    <div></div>\r\n\r\n                    <div className=\"formGroup\">\r\n                        <button type='button' onClick={onClick} className='btn'>Cancel</button>\r\n                        <button type='button' onClick={(e)=>{\r\n                            handleSubmit(e);\r\n                        }} className='btn'>Save</button>\r\n                    </div>\r\n            </form>\r\n            <Alert\r\n                message={alertMessage}\r\n                alert={alert}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewSupplierForm\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\nimport { data1 } from './data'\r\nimport { baseURL } from './axios'\r\nimport NewSupplierForm from './NewSupplierForm'\r\n// import { saveAs } from 'file-saver'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\n\r\nfunction PurchaseInvoice({ onClick, refetch }) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [products, setProducts] = useState([])\r\n    const [suppliers, setSuppliers] = useState([])\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const invoiceDate = new Date(`${month + 1}/${day}/${year}`).toDateString();\r\n    const [selectInvoiceTerm, setSelectInvoiceTerm] = useState('15')\r\n\r\n    const handleSelectInvoiceTerm = (e) => {\r\n        setSelectInvoiceTerm(Number(e.target.value));\r\n    };\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/suppliers')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2] = res\r\n                setProducts(result1.data)\r\n                setSuppliers(result2.data.suppliers)\r\n                setfetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const [supplierDetails, setSupplierDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n            if (index === i) { \r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        return setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n\r\n    const handleAdditionsAndSubtractions = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [quoteInput, setQuoteInput] = useState({\r\n        date: invoiceDate,\r\n        customerName: '',\r\n        dueDate: (value) => {\r\n\r\n            const today = new Date(`${month}/${day}/${year}`);\r\n            const futureDate = new Date(today.setDate(today.getDate() + Number(value)))\r\n            return futureDate.toDateString();\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    const sumTotal = data.map(data => { return (data.amount((data.qty), (data.up))) }).reduce((a, b) => { return Number(a) + Number(b) }, 0);\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate) / 100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount) / 100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount) / 100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax) / 100)).toFixed(2)\r\n    const totalOtherAdditions = (otherAdditions.map(item => item.amount).reduce((a, b) => (Number(a) + Number(b))))\r\n\r\n    useEffect(() => {\r\n        suppliers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setSupplierDetails({ ...value })\r\n        ))\r\n\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setQuoteInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n    const invoiceData = {\r\n        invoiceInput: quoteInput,\r\n        selectInvoiceTerm,\r\n        supplierDetails,\r\n        data: elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        dueDate: quoteInput.dueDate(selectInvoiceTerm)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (supplierDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(() => {\r\n                    setfetching(true)\r\n                }, 500)\r\n\r\n                baseURL.post('/purchaseInvoice', invoiceData)\r\n                    // .then(() => axios.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n                    // .then(res => {\r\n\r\n                    //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                    //     saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n                    //     axios.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n\r\n                    .then(() => {\r\n                        onClick();\r\n                        refetch()\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            }else{\r\n                setAlertMessage('Please add a supplier and at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        } else {\r\n            setAlertMessage('Please add a supplier and at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>New Purchase Invoice</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={quoteInput.date} id='date' contentEditable={false} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"select\">\r\n                            <label htmlFor=\"invoiceDuration\">Terms</label>\r\n                            <select\r\n                                name=\"invoiceDuration\"\r\n                                id=\"invoiceDuration\"\r\n                                onChange={handleSelectInvoiceTerm}\r\n                                value={selectInvoiceTerm}\r\n                            >\r\n                                <option value=\"\" hidden={true}>Select(default: 15)</option>\r\n                                <option value={15}>15 days</option>\r\n                                <option value={30}>30 days</option>\r\n                                <option value={45}>45 days</option>\r\n                                <option value={60}>60 days</option>\r\n                                <option value={75}>75 days</option>\r\n                                <option value={90}>90 days</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"dueDate\">\r\n                            <label htmlFor=\"dueDate\">\r\n                                Due Date:\r\n                            </label>\r\n                            <input type=\"text\" id=\"dueDate\" name=\"dueDate\" value={quoteInput.dueDate(selectInvoiceTerm)} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"invoiceNumber\">\r\n                            <label htmlFor='InvoiceNumber'>\r\n                                Invoice Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"invoiceNumber\" id=\"invoiceNumber\" value={quoteInput.invoiceNumber} onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">From: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={(e) => { setValue(e.target.value) }}\r\n                                onClick={() => { setActive(!active) }}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Supplier'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => { setNewSupplier(true) }}\r\n                                    >Add New Supplier</button>\r\n                                    {\r\n                                        suppliers\r\n                                            .filter(item => {\r\n                                                if (!value) return true\r\n                                                if (item.name.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .map((item, i) => (\r\n                                                <div\r\n                                                    className='autoListItem'\r\n                                                    onClick={() => { setValue(item.name); setActive(false); }}\r\n                                                    key={i}\r\n                                                    tabIndex='0'\r\n                                                >\r\n                                                    <p>{item.name}</p>\r\n                                                </div>\r\n                                            ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{supplierDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{supplierDetails?.country}</p>\r\n                                <p><b>City: </b>{supplierDetails?.city}</p>\r\n                                <p><b>Street: </b>{supplierDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{supplierDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{supplierDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{supplierDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={quoteInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net Payable: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                                height: `${realVal}`,\r\n                                overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n\r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\", index)}\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                        <button\r\n                            onClick={() => {\r\n                                setHeight((prev) => {\r\n                                    return prev + 7.3;\r\n                                });\r\n                                if (realVal === '100%') {\r\n                                    setAlertMessage('Cannot Add more rows')\r\n                                    setAlert(true)\r\n                                    setTimeout(()=>{\r\n                                        setAlert(false)\r\n                                    }, 3000)\r\n                                }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n\r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"deductionsAndAdditions\">\r\n                        <div className=\"hideAndShow\">\r\n                            <h5>Deductions</h5>\r\n                            <button onClick={() => { setCollapseDeductions(!collapseDeductions) }} type='button'>{collapseDeductions ? 'Hide' : 'Show'}</button>\r\n                        </div>\r\n                        <div className=\"deductions\">\r\n                            \r\n                            {\r\n                                collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.rebate} />\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.tradeDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.cashDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                            }\r\n                        </div>\r\n\r\n                        <ul className=\"deductions\">\r\n                            <div className=\"otherAdditions\">\r\n                                    <li className='deductItem additionItem'>\r\n                                        <span>\r\n                                            Tax (VAT) Rate\r\n                                            </span>\r\n\r\n                                        <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.valueAddedTax} />\r\n\r\n                                        <span>\r\n                                            {\r\n                                            valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                    </li>\r\n                                </div>\r\n                        </ul>\r\n\r\n                        <div className=\"additions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Additions</h5>\r\n                                <button onClick={() => { setCollapseAdditions(!collapseAdditions) }} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                            </div>\r\n                            {\r\n                                collapseAdditions &&\r\n                            <ul className='otherAdditions'>\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='additionItem'>\r\n                                        <b><span>Element</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n                                </div>\r\n\r\n                                <div className=\"otherAdditions\"\r\n                                    >\r\n                                        {\r\n                                            otherAdditions.map((data, index) => (\r\n                                                <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name' />\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount' />\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                \r\n                                <div className=\"otherAdditions\">\r\n                                    <div className=\"additionItem\">\r\n                                        <h5>Total Additions</h5>\r\n                                        <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </ul>\r\n                            }\r\n                        </div>\r\n                        <div className=\"netPay\">\r\n                            <h3>Net Payable</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"saveOptions\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Cancel\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={handleSubmit}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={handleSubmit}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save and Send\r\n                            </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n\r\n\r\n                {\r\n                    newSupplier && <NewSupplierForm onClick={() => { setNewSupplier(false) }}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                fetching &&\r\n\r\n                <Loader />\r\n            }\r\n            <Alert\r\n                message={alertMessage}\r\n                alert={alert}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoice\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\nimport { data1 } from './data'\r\nimport { baseURL } from './axios'\r\n// import { saveAs } from 'file-saver'\r\nimport Loader from './Loader'\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport Alert from './Alert';\r\n\r\nfunction CashPurchase({ onClick, refetch }) {\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [suppliers, setSuppliers] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [receipts, setReceipts] = useState([])\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const receiptDate = new Date(`${month + 1}/${day}/${year}`).toDateString();\r\n\r\n    const [supplierDetails, setSupplierDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/suppliers')\r\n        const request3 = baseURL.get('/receipts')\r\n        await axios.all([request1, request2, request3], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2, result3] = res\r\n                setProducts(result1.data)\r\n                setSuppliers(result2.data.suppliers)\r\n                setfetching(false)\r\n                setReceipts(result3.data)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n\r\n    const handleAdditionsAndSubtractions = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [receiptInput, setReceiptInput] = useState({\r\n        date: receiptDate,\r\n        receiptNumber: `00${receipts.length + 1}`,\r\n        supplierName: '',\r\n        meansOfPayment: 'cash'\r\n    });\r\n\r\n\r\n\r\n\r\n    const sumTotal = data.map(data => { return (data.amount((data.qty), (data.up))) }).reduce((a, b) => { return Number(a) + Number(b) }, 0);\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate) / 100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount) / 100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount) / 100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax) / 100)).toFixed(2)\r\n    const totalOtherAdditions = otherAdditions.map(item => item.amount).reduce((a, b) => (Number(a) + Number(b)))\r\n\r\n    useEffect(() => {\r\n        suppliers.filter(sup => (\r\n            sup.name === value\r\n        )).map(value => (\r\n            setSupplierDetails({ ...value })\r\n        ))\r\n\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setReceiptInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n\r\n    const receiptData = {\r\n        source: 'cash purchase',\r\n        receiptInput,\r\n        supplierDetails,\r\n        data: elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        meansOfPayment: receiptInput.meansOfPayment,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        \r\n        if (supplierDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(() => {\r\n                    setfetching(true)\r\n                }, 500)\r\n\r\n                baseURL.post('/receipts', receiptData)\r\n                    // .then(() => axios.get(`/receipts/${receiptInput.invoiceNumber}`, {responseType: 'blob'}))\r\n                    // .then(res => {\r\n\r\n                    //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                    //     saveAs(pdfBlob, `invoiceNumber${receiptInput.invoiceNumber}`)\r\n                    //     axios.post(`/sendReceipt/${receiptInput.invoiceNumber}`, {customerDetails})\r\n\r\n                    .then(() => {\r\n                        onClick();\r\n                        refetch()\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            } else {\r\n                setAlertMessage('Please add at least one product and a supplier')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n            \r\n        } else{\r\n            setAlertMessage('Please add at least one product and a supplier')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n            <div className=\"close\">\r\n                <i className=\"fas fa-times fa-lg\" onClick={onClick}></i>\r\n            </div>\r\n            <h3>New Purchase Receipt</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={receiptInput.date} id='date' readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"meansOfPayment\">\r\n                            <label htmlFor=\"meansOfPayment\">Means of Payment</label>\r\n                            <select name=\"meansOfPayment\" id=\"meansOfPayment\" value={receiptInput.meansOfPayment} onChange={handleChange} style={{ borderRadius: '5px', marginLeft: '0.3rem' }}>\r\n                                <option value=\"cash\">Default (Cash)</option>\r\n                                <option value=\"bank\">Bank</option>\r\n                                <option value=\"mobileMoney\">Mobile Money</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"receiptNumber\">\r\n                            <label htmlFor='receiptNumber'>\r\n                                Receipt Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"receiptNumber\" id=\"receiptNumber\" value={receiptInput.receiptNumber} readOnly={true} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"supplierName\">Supplier:* </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={(e) => { setValue(e.target.value) }}\r\n                                onClick={() => { setActive(!active) }}\r\n                                name='supplierName'\r\n                                className='autoListItemInput'\r\n                                id='supplierName'\r\n                                placeholder='Select Supplier'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => { setNewSupplier(true) }}\r\n                                    >Add New Supplier</button>\r\n                                    {\r\n                                        suppliers?.filter(item => {\r\n                                                if (!value) return true\r\n                                                if (item.name.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .map((item, i) => (\r\n                                                <div\r\n                                                    className='autoListItem'\r\n                                                    onClick={() => { setValue(item.name); setActive(false); }}\r\n                                                    key={i}\r\n                                                    tabIndex='0'\r\n                                                >\r\n                                                    <p>{item.name}</p>\r\n                                                </div>\r\n                                            ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{supplierDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{supplierDetails?.country}</p>\r\n                                <p><b>City: </b>{supplierDetails?.city}</p>\r\n                                <p><b>Street: </b>{supplierDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{supplierDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{supplierDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{supplierDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={receiptInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net Payable: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                                height: `${realVal}`,\r\n                                overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n\r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" id=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\", index)}\r\n                                    >\r\n                                        <option> </option>\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                        <button\r\n                            onClick={() => {\r\n                                setHeight((prev) => {\r\n                                    return prev + 7.3;\r\n                                });\r\n                                if (realVal === '100%') {\r\n                                    alert('Cannot add more rows.')\r\n                                }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n\r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"deductionsAndAdditions\">\r\n                        <div className=\"hideAndShow\">\r\n                            <h5>Deductions</h5>\r\n                            <button onClick={() => { setCollapseDeductions(!collapseDeductions) }} type='button'>{collapseDeductions ? 'Hide' : 'Show'}</button>\r\n                        </div>\r\n                        <div className=\"deductions\">\r\n                            {\r\n                                collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.rebate} />\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.tradeDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.cashDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                            }\r\n                        </div>\r\n\r\n                        <ul className=\"deductions\">\r\n                            <div className=\"otherAdditions\">\r\n                                    <li className='deductItem additionItem'>\r\n                                        <span>\r\n                                            Tax (VAT) Rate\r\n                                            </span>\r\n\r\n                                        <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.valueAddedTax} />\r\n\r\n                                        <span>\r\n                                            {\r\n                                                valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                    </li>\r\n                                </div>\r\n                        </ul>\r\n\r\n                        <div className=\"additions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Additions</h5>\r\n                                <button onClick={() => { setCollapseAdditions(!collapseAdditions) }} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                            </div>\r\n                            {\r\n                                collapseAdditions && \r\n                            <ul className='otherAdditions'>\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='additionItem'>\r\n                                        <b><span>Element</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n                                </div>\r\n                                <div className=\"otherAdditions\"\r\n                                    >\r\n                                        {\r\n                                            otherAdditions.map((data, index) => (\r\n                                                <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name' />\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount' />\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                \r\n                                <div className=\"otherAdditions\">\r\n                                    <div className=\"additionItem\">\r\n                                        <h5>Total Additions</h5>\r\n                                        <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </ul>\r\n                            }\r\n                        </div>\r\n                        <div className=\"netPay\">\r\n                            <h3>Net Payable</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"saveOptions\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Cancel\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                                console.log('Save Button Clicked')\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                                console.log('Save and send Button Clicked')\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save and Send\r\n                            </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newSupplier && <NewSupplierForm onClick={() => { setNewSupplier(false) }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashPurchase\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\n// import { saveAs } from 'file-saver'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport Alert from './Alert';\r\n\r\n\r\nfunction ReceivePayment({ onClick, refetch }) {\r\n    const [active, setActive] = useState(false);\r\n    const [newSupplier, setNewSupplier] = useState(false);\r\n    const [fetching, setfetching] = useState(true);\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [value, setValue] = useState('')\r\n    const [suppliers, setSuppliers] = useState([])\r\n    const [purchaseInvoices, setPurchaseInvoices] = useState([])\r\n    const [creditors, setCreditors] = useState([])\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const receiptDate = new Date(`${month}/${day}/${year}`).toDateString();\r\n\r\n    const [supplierDetails, setSupplierDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    const [makePaymentInput, setMakePaymentInput] = useState({\r\n        date: receiptDate,\r\n        meansOfPayment: 'cash'\r\n    });\r\n\r\n    const [template, setTemplate] = useState([])\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/suppliers')\r\n        const request2 = baseURL.get('/purchaseInvoices')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [response1, response2] = res;\r\n                setSuppliers(response1.data.suppliers)\r\n                setPurchaseInvoices(response2.data)\r\n                setCreditors(response1.data.creditors)\r\n                setfetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        suppliers.filter(sup => (\r\n            sup.name === value\r\n        )).map(value => (\r\n            setSupplierDetails({ ...value })\r\n        ))\r\n\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setMakePaymentInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const invoiceTemplate = creditors?.filter(inv => (\r\n            inv.supplierName === value\r\n        )).map(inv => (\r\n            {\r\n                ...inv,\r\n                amountToPay: ''\r\n            }\r\n        ))\r\n        if (value !== '') {\r\n            setTemplate(invoiceTemplate)\r\n        }\r\n    }, [value])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = template.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setTemplate(newArr);\r\n    };\r\n\r\n    const totalToPay = template.map(temp => temp.amountToPay).reduce((a, b) => Number(a) + Number(b), 0);\r\n\r\n    const makePaymentData = {\r\n        source: 'make payment',\r\n        supplierDetails,\r\n        makePaymentInput,\r\n        template,\r\n        totalToPay\r\n    }\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        if (totalToPay === 0) {\r\n            setAlertMessage('Please add an amount to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        } else {\r\n            setTimeout(() => {\r\n                setfetching(true)\r\n            }, 500)\r\n\r\n            baseURL.post('/receivePayment', makePaymentData)\r\n                // .then(() => axios.get(`/payments/${receivePaytInput.paymentNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n\r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `paymentNumber${receivePaytInput.paymentNumber}`)\r\n                //     axios.post(`/sendInvoice/${receivePaytInput.paymentNumber}`, {customerDetails})\r\n\r\n                .then(() => {\r\n                    onClick();\r\n                    refetch()\r\n                    setfetching(false)\r\n                })\r\n            // })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>Make Payment To Supplier</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\" style={{\r\n                        width: '70%',\r\n                        margin: '0 auto'\r\n                    }}>\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={makePaymentInput.date} id='date' contentEditable={false} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"meansOfPayment\">\r\n                            <label htmlFor=\"meansOfPayment\">Means of Payment</label>\r\n                            <select name=\"meansOfPayment\" id=\"meansOfPayment\" value={makePaymentInput.meansOfPayment} onChange={handleChange} style={{ borderRadius: '5px', marginLeft: '0.3rem' }}>\r\n                                <option value=\"Cash\">Default (Cash)</option>\r\n                                <option value=\"bank\">Bank</option>\r\n                                <option value=\"mobileMoney\">Mobile Money</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\" style={{\r\n                        width: '70%',\r\n                        margin: '0 auto'\r\n                    }}>\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">To (Supplier): </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={(e) => { setValue(e.target.value) }}\r\n                                onClick={() => { setActive(!active) }}\r\n                                name='supplierName'\r\n                                className='autoListItemInput'\r\n                                id='supplierName'\r\n                                placeholder='Select Supplier'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => { setNewSupplier(true) }}\r\n                                    >Add New Supplier</button>\r\n                                    {\r\n                                        suppliers\r\n                                            .filter(item => {\r\n                                                if (!value) return true\r\n                                                if (item.name.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .map((item, i) => (\r\n                                                <div\r\n                                                    className='autoListItem'\r\n                                                    onClick={() => { setValue(item.name); setActive(false); }}\r\n                                                    key={i}\r\n                                                    tabIndex='0'\r\n                                                >\r\n                                                    <p>{item.name}</p>\r\n                                                </div>\r\n                                            ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{supplierDetails?.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"amount\" style={{\r\n                        width: '70%',\r\n                        textAlign: 'right',\r\n                        margin: '0 auto',\r\n                        backgroundColor: 'rgba(211, 211, 211, 0.5)'\r\n                    }}>\r\n                        <h3 className='totalToPay'>Total: {totalToPay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}  </h3>\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        {\r\n                            value === '' ? null : <div className=\"allDebtorsContainer\">\r\n                                <table className='allDebtorsTable'>\r\n                                    <thead>\r\n                                        <tr className='invoiceListHead'>\r\n                                            <th>Total Debt</th>\r\n                                            <th>Total Paid</th>\r\n                                            <th>Balance Owed To</th>\r\n                                            <th>Amount To Pay</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            template.map((sup, index) => {\r\n                                                return (\r\n                                                    <tr className='invoiceListbody' key={index}>\r\n                                                        <td>{(Number(sup.totalDebt)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                        <td>{(Number(sup.totalPaid)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                        <td>{(Number(sup.balanceDue)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                        <td>\r\n                                                            <input type=\"number\" name='amountToPay' id='amountToPay' value={makePaymentInput.invoiceNumber} onChange={\r\n                                                            updateFieldChanged('amountToPay', index)\r\n                                                            }  />\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"totalToPay\" style={{\r\n                        width: '70%',\r\n                        textAlign: 'right',\r\n                        margin: '0 auto',\r\n                        backgroundColor: 'rgba(211, 211, 211, 0.5)'\r\n                    }}>\r\n                        <h3 className='totalToPay'>Total: {totalToPay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </h3>\r\n                    </div>\r\n\r\n                    <div className=\"saveOptions\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Cancel\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={() => {\r\n                                handleSubmit()\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save and Send\r\n                            </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newSupplier && <NewSupplierForm onClick={() => { setNewSupplier(false) }}\r\n                />\r\n            }\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePayment\r\n\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Quotation.css';\r\nimport { data1 } from './data'\r\nimport { baseURL } from './axios'\r\nimport NewSupplierForm from './NewSupplierForm'\r\n// import { saveAs } from 'file-saver'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\n\r\nfunction PurchaseOrder({ onClick, refetch }) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [suppliers, setSuppliers] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const orderDate = new Date(`${month + 1}/${day}/${year}`).toDateString();\r\n    const [selectInvoiceTerm, setSelectInvoiceTerm] = useState('15')\r\n\r\n    const handleSelectInvoiceTerm = (e) => {\r\n        setSelectInvoiceTerm(Number(e.target.value));\r\n    };\r\n\r\n    useEffect(async () => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/suppliers')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2] = res\r\n                setProducts(result1.data)\r\n                setSuppliers(result2.data.suppliers)\r\n                setfetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n\r\n    const [supplierDetails, setSupplierDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n            if (index === i) {\r\n                return { ...item, [name]: event.target.value };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n\r\n    const handleAdditionsAndSubtractions = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [orderInput, setOrderInput] = useState({\r\n        date: orderDate,\r\n        orderNumber: `00${orders.length + 1}`,\r\n        supplierName: '',\r\n        dueDate: (value) => {\r\n\r\n            const today = new Date(`${month}/${day}/${year}`);\r\n            const futureDate = new Date(today.setDate(today.getDate() + Number(value)))\r\n            return futureDate.toDateString();\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    const sumTotal = data.map(data => { return (data.amount((data.qty), (data.up))) }).reduce((a, b) => { return Number(a) + Number(b) }, 0);\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate) / 100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount) / 100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount) / 100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax) / 100)).toFixed(2)\r\n    const totalOtherAdditions = (otherAdditions.map(item => item.amount).reduce((a, b) => (Number(a) + Number(b))))\r\n\r\n    useEffect(() => {\r\n        suppliers.filter(sup => (\r\n            sup.name === value\r\n        )).map(value => (\r\n            setSupplierDetails({ ...value })\r\n        ))\r\n\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setOrderInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n    const orderData = {\r\n        orderInput: orderInput,\r\n        selectInvoiceTerm,\r\n        supplierDetails,\r\n        data: elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        dueDate: orderInput.dueDate(selectInvoiceTerm)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (supplierDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(() => {\r\n                    setfetching(true)\r\n                }, 500)\r\n\r\n                baseURL.post('/purchaseOrders', orderData)\r\n                    // .then(() => axios.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n                    // .then(res => {\r\n\r\n                    //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                    //     saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n                    //     axios.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n\r\n                    .then((res) => {\r\n                        console.log(res.data);\r\n                        onClick();\r\n                        refetch();\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            } else {\r\n                setAlertMessage('Please add a supplier and at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        } else {\r\n            setAlertMessage('Please add a supplier and at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n            <div className=\"close\" onClick={onClick}>\r\n                <i className=\"fas fa-times fa-lg\"></i>\r\n            </div>\r\n            <h3>New Purchase Order</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={orderInput.date} id='date' contentEditable={false} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"select\">\r\n                            <label htmlFor=\"invoiceDuration\">Terms</label>\r\n                            <select\r\n                                name=\"invoiceDuration\"\r\n                                id=\"invoiceDuration\"\r\n                                onChange={handleSelectInvoiceTerm}\r\n                                value={selectInvoiceTerm}\r\n                            >\r\n                                <option value=\"\" hidden={true}>Select(default: 15)</option>\r\n                                <option value={15}>15 days</option>\r\n                                <option value={30}>30 days</option>\r\n                                <option value={45}>45 days</option>\r\n                                <option value={60}>60 days</option>\r\n                                <option value={75}>75 days</option>\r\n                                <option value={90}>90 days</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"dueDate\">\r\n                            <label htmlFor=\"dueDate\">\r\n                                Due Date:\r\n                            </label>\r\n                            <input type=\"text\" id=\"dueDate\" name=\"dueDate\" value={orderInput.dueDate(selectInvoiceTerm)} readOnly={true} />\r\n                        </div>\r\n\r\n                        <div className=\"invoiceNumber\">\r\n                            <label htmlFor='InvoiceNumber'>\r\n                                Order Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"orderNumber\" id=\"invoiceNumber\" value={orderInput.orderNumber} readOnly={true} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={(e) => { setValue(e.target.value) }}\r\n                                onClick={() => { setActive(!active) }}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => { setNewSupplier(true) }}\r\n                                    >Add New Supplier</button>\r\n                                    {\r\n                                        suppliers?.filter(item => {\r\n                                                if (!value) return true\r\n                                                if (item.name.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                }\r\n                                            })\r\n                                            .map((item, i) => (\r\n                                                <div\r\n                                                    className='autoListItem'\r\n                                                    onClick={() => { setValue(item.name); setActive(false); }}\r\n                                                    key={i}\r\n                                                    tabIndex='0'\r\n                                                >\r\n                                                    <p>{item.name}</p>\r\n                                                </div>\r\n                                            ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{supplierDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{supplierDetails?.country}</p>\r\n                                <p><b>City: </b>{supplierDetails?.city}</p>\r\n                                <p><b>Street: </b>{supplierDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{supplierDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{supplierDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{supplierDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={orderInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net Payable: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                                height: `${realVal}`,\r\n                                overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n\r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\", index)}\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                        <button\r\n                            onClick={() => {\r\n                                setHeight((prev) => {\r\n                                    return prev + 7.3;\r\n                                });\r\n                                if (realVal === '100%') {\r\n                                    setAlertMessage('Cannot Add more rows')\r\n                                    setAlert(true)\r\n                                    setTimeout(()=>{\r\n                                        setAlert(false)\r\n                                    }, 3000)\r\n                                }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n\r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"deductionsAndAdditions\">\r\n                        <div className=\"hideAndShow\">\r\n                            <h5>Deductions</h5>\r\n                            <button onClick={() => { setCollapseDeductions(!collapseDeductions) }} type='button'>{collapseDeductions ? 'Hide' : 'Show'}</button>\r\n                        </div>\r\n                        <div className=\"deductions\">\r\n                            {\r\n                                collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.rebate} />\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.tradeDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.cashDiscount} />\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                                {\r\n                                                    cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                            }\r\n                        </div>\r\n\r\n                        <ul className=\"deductions\">\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='deductItem additionItem'>\r\n                                        <span>\r\n                                            Tax (VAT) Rate\r\n                                            </span>\r\n\r\n                                        <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e) => { handleAdditionsAndSubtractions(e) }} value={additionsAndSubtractions.valueAddedTax} />\r\n\r\n                                        <span>\r\n                                            {\r\n                                                valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                    </li>\r\n                                </div>\r\n                            </ul>\r\n\r\n                        <div className=\"additions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Additions</h5>\r\n                                <button onClick={() => { setCollapseAdditions(!collapseAdditions) }} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                            </div>\r\n                            \r\n                            {\r\n                                collapseAdditions && \r\n                            <ul className='otherAdditions'>\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='additionItem'>\r\n                                        <b><span>Element</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n                                </div>\r\n\r\n                                <div className=\"otherAdditions\"\r\n                                    >\r\n                                        {\r\n                                            otherAdditions.map((data, index) => (\r\n                                                <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name' />\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount' />\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                <div className=\"otherAdditions\">\r\n                                    <div className=\"additionItem\">\r\n                                        <h5>Total Additions</h5>\r\n                                        <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </ul>\r\n                            }\r\n                        </div>\r\n                        <div className=\"netPay\">\r\n                            <h3>Net Payable</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"saveOptions\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Cancel\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={handleSubmit}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={handleSubmit}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Save and Send\r\n                            </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n\r\n\r\n                {\r\n                    newSupplier && <NewSupplierForm onClick={() => { setNewSupplier(false) }}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                fetching &&\r\n\r\n                <Loader />\r\n            }\r\n            <Alert\r\n                message={alertMessage}\r\n                alert={alert}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrder\r\n\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport './Quotation.css';\r\nimport {data1} from './data'\r\n// import {saveAs} from 'file-saver'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport Alert from './Alert'\r\n\r\n\r\nfunction PurchaseReturns({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [products, setProducts] = useState([])\r\n    const [suppliers, setSuppliers] = useState([])\r\n    const [purchaseReturns, setPurchaseReturns] = useState([])\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const today = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const invoiceDate = new Date(`${month + 1}/${today}/${year}`).toDateString()\r\n\r\n    const [supplierDetails, setSupplierDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    useEffect(async() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/suppliers')\r\n        const request3 = baseURL.get('/returns')\r\n        await axios.all([request1, request2, request3], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2, result3] = res\r\n            setProducts(result1.data)\r\n            setSuppliers(result2.data.suppliers)\r\n            setPurchaseReturns(result3.data.purchaseReturns)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    const handleAdditionsAndSubtractions = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue =>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const [returnsInput, setReturnsInput] = useState({\r\n        date: invoiceDate,\r\n        returnsNumber: `00${purchaseReturns.length + 1}`,\r\n        supplierName: ''\r\n    })\r\n\r\n    const sumTotal = data.map(data => {return(data.amount((data.qty), (data.up)))}).reduce((a, b)=>{return Number(a) + Number(b)}, 0)\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate)/100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount)/100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount)/100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax)/100)).toFixed(2)\r\n    const totalOtherAdditions = otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b)))\r\n\r\n    useEffect(() => {\r\n        suppliers.filter(sup => (\r\n            sup.name === value\r\n        )).map(value => (\r\n            setSupplierDetails({...value})\r\n        ))\r\n        \r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n\r\n        setReturnsInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n\r\n    const returnsData = {\r\n        returnsInput,\r\n        supplierDetails,\r\n        data : elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: ((financialNet + Number(valueAddedTax) + totalOtherAdditions)).toFixed(2),\r\n    }\r\n\r\n    const handleSubmit = async ()=>{\r\n        if (supplierDetails.name === '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(()=>{\r\n                    setfetching(true)\r\n                }, 500)\r\n                \r\n                baseURL.post('/purchaseReturns', returnsData)\r\n                // .then(() => axios.get(`/invoices/${noteInput.noteNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n                    \r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `creditNoteNumber${noteInput.noteNumber}`)\r\n                //     axios.post(`/sendCreditNote/${noteInput.noteNumber}`, {customerDetails})\r\n                    \r\n                    .then((res)=>{\r\n                        console.log(res.data);\r\n                        onClick();\r\n                        refetch()\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            } else {\r\n                setAlertMessage('Please add a supplier and at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n        } else {\r\n            setAlertMessage('Please add a supplier and at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n        <div className=\"close\" onClick={onClick}>\r\n            <i className=\"fas fa-times fa-lg\"></i>\r\n        </div>\r\n            <h3>New Purchase Returns</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={returnsInput.date} id='date' contentEditable={false} readOnly={true}/>\r\n                        </div>\r\n                        <div className=\"noteNumber\">\r\n                            <label htmlFor='quoteNumber'>\r\n                                Purchase Returns No:\r\n                            </label>\r\n                            <input type=\"text\" name=\"quoteNumber\" id=\"quoteNumber\" value={returnsInput.returnsNumber} readOnly={true}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={value} \r\n                                onChange={(e)=>{setValue(e.target.value)}}\r\n                                onClick={()=>{setActive(!active)}}\r\n                                name='supplierName'\r\n                                className='autoListItemInput'\r\n                                id='supplierName'\r\n                                placeholder='Select Supplier'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={()=>{setNewSupplier(true)}}\r\n                                >Add New Supplier</button>\r\n                                    {\r\n                                        suppliers\r\n                                        .filter(item => {\r\n                                            if (!value) return true\r\n                                            if (item.name.toLowerCase().includes(value.toLowerCase())) {\r\n                                            return true\r\n                                            }\r\n                                        })\r\n                                        .map((item, i) => (\r\n                                            <div\r\n                                                className='autoListItem'\r\n                                                onClick={()=>{setValue(item.name); setActive(false);}}\r\n                                                key={i}\r\n                                                tabIndex='0'\r\n                                            >\r\n                                                <p>{item.name}</p>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{supplierDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{supplierDetails?.country}</p>\r\n                                <p><b>City: </b>{supplierDetails?.city}</p>\r\n                                <p><b>Street: </b>{supplierDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{supplierDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{supplierDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{supplierDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={returnsInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                    <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n                            \r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" id=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\")} onChange={updateFieldChanged(\"productName\", index)}>\r\n                                    <option> </option>\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                            <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 7.3;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                setAlertMessage('Cannot Add more rows')\r\n                                setAlert(true)\r\n                                setTimeout(()=>{\r\n                                    setAlert(false)\r\n                                }, 3000)\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n                        \r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n\r\n                        <div className=\"deductionsAndAdditions\">\r\n                            <div className=\"hideAndShow\">\r\n                                <h5>Deductions</h5>\r\n                            <button onClick={()=>{setCollapseDeductions(!collapseDeductions)}} type='button'>{collapseDeductions ? 'Hide' : 'Show'}</button>\r\n                            </div>\r\n                            <div className=\"deductions\">\r\n                                \r\n                                {\r\n                                    collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate   \r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.rebate}/>\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.tradeDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.cashDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                                }\r\n                            </div>\r\n\r\n                            <ul className=\"deductions\">\r\n                                <div className=\"otherAdditions\">\r\n                                    <li className='deductItem additionItem'>\r\n                                        <span>\r\n                                                Tax (VAT) Rate\r\n                                        </span>\r\n                                            \r\n                                        <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.valueAddedTax}/>\r\n\r\n                                        <span>\r\n                                            {\r\n                                                valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                    </li>\r\n                                </div>\r\n                            </ul>\r\n                            \r\n                            <div className=\"additions\">\r\n                                <div className=\"hideAndShow\">\r\n                                    <h5>Additions</h5>\r\n                                    <button onClick={()=>{setCollapseAdditions(!collapseAdditions)}} type='button'>{collapseAdditions ? 'Hide' : 'Show'}</button>\r\n                                </div>\r\n                                {\r\n                                    collapseAdditions && \r\n                                <ul className='otherAdditions'>\r\n                                        <div className=\"otherAdditions\">\r\n                                            <li className='additionItem'>\r\n                                            <b><span>Element</span></b>\r\n                                            <b><span>Amount</span></b>\r\n                                        </li>\r\n                                        </div>\r\n                                    \r\n                                    <div className=\"otherAdditions\"\r\n                                        >\r\n                                        {\r\n                                            otherAdditions.map((data, index)=>(\r\n                                                <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name'/>\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount'/>\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"otherAdditions\">\r\n                                            <div className=\"additionItem\">\r\n                                            <h5>Total Additions</h5>\r\n                                        <h5>{(totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                        </div>\r\n                                        </div>\r\n                                </ul>\r\n                                }\r\n                            </div>\r\n                            <div className=\"netPay\">\r\n                                <h3>Net </h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"saveOptions\">\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save and Send\r\n                            </button>\r\n                        </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newSupplier && <NewSupplierForm onClick={()=>{setNewSupplier(false)}}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                message={alertMessage}\r\n                alert={alert}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseReturns\r\n\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Sales.css'\r\nimport { baseURL } from './axios'\r\nimport axios from 'axios'\r\nimport Barchart from './Barchart'\r\nimport PurchaseInvoice from './PurchaseInvoice'\r\nimport CashPurchase from './CashPurchase'\r\nimport MakePayment from './MakePayment'\r\nimport PurchaseOrder from './PurchaseOrder'\r\nimport PurchaseReturns from './PurchaseReturns'\r\nimport Loader from './Loader'\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport Alert from './Alert'\r\n\r\nfunction Purchases() {\r\n\r\n    const history = useHistory()\r\n    const [purchaseInvoice, setPurchaseInvoice] = useState(false)\r\n    const [cashPurchase, setCashPurchase] = useState(false)\r\n    const [makePayment, setMakePayment] = useState(false)\r\n    const [purchaseOrder, setPurchaseOrder] = useState(false)\r\n    const [purchaseReturns, setPurchaseReturns] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [purchaseData, setPurchaseData] = useState([])\r\n    const [graphInfo, setGraphInfo] = useState([])\r\n    const [creditPurchasesGraph, setCreditPurchasesGraph] = useState([])\r\n    const [cashPurchasesGraph, setCashPurchasesGraph] = useState([])\r\n    const [returns, setReturns] = useState([])\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        getPurchase(source, unMounted)\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const getPurchase = async(source, unMounted) =>{\r\n        \r\n        await baseURL.get('/purchases', {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                setPurchaseData(res.data.purchases)\r\n                setGraphInfo(res.data.graph)\r\n                setCreditPurchasesGraph(res.data.creditPurchases)\r\n                setCashPurchasesGraph(res.data.cashPurchases)\r\n                setReturns(res.data.returns)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n    }\r\n    \r\n    const values = graphInfo?.map(a => a.value)\r\n    const months = graphInfo?.map(a => a.month)\r\n\r\n    const purchasesReturns = returns?.map(a => a.netPayable).reduce((a, b) => a + b, 0)\r\n\r\n\r\n    const creditPurchases = purchaseData?.filter(a => {\r\n        return (a.purchaseType === 'credit')\r\n    }).map(a => a.amount).reduce((a, b) => a + b, 0)\r\n\r\n    const cashPurchaseElements = []\r\n\r\n    purchaseData?.filter(a => {\r\n        if(a.purchaseType === 'cash'){\r\n            cashPurchaseElements.push(a)\r\n        }\r\n        if(a.purchaseType === 'bank'){\r\n            cashPurchaseElements.push(a)\r\n        }\r\n        if(a.purchaseType === 'mobileMoney'){\r\n            cashPurchaseElements.push(a)\r\n        }\r\n    })\r\n\r\n    const cashPurchases = cashPurchaseElements?.map(a => a.amount).reduce((a, b) => a + b, 0)\r\n\r\n    // CODE BELOW SHOULD BE COPIED TO INVENTORY PAGE IN ORDER TO SHOW FREQUENTLY BOUGHT ITEMS\r\n\r\n    // var allTypesArray = elements;\r\n    // var s = allTypesArray.reduce(function(m,v){\r\n    // m[v] = (m[v]||0)+1; return m;\r\n    // }, {}); // builds {2: 4, 4: 2, 6: 3} \r\n    // var a = [];\r\n    // for (let k in s) a.push({k:k,n:s[k]});\r\n    // // now we have [{\"k\":\"2\",\"n\":4},{\"k\":\"4\",\"n\":2},{\"k\":\"6\",\"n\":3}] \r\n    // a.sort(function(a,b){ return b.n-a.n });\r\n    // a = a.map(function(a) { return a.k });\r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Sales Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                <h1>Purchases Dashboard</h1>\r\n                <div className=\"moreOptions\">\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>New Transaction<i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                        <p className=\"option\" onClick={()=>{setPurchaseInvoice(true)}}>Purchase Invoice</p>\r\n                            <p className=\"option\" onClick={()=>{setCashPurchase(true)}}>Purchase Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setPurchaseReturns(true)}}>Purchase Returns</p>\r\n                            <p className=\"option\" onClick={()=>{setPurchaseOrder(true)}}>Purchase Order</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"salesMiddle\">\r\n                <div className=\"salesTotals\">\r\n                    <div className=\"cashSales\" data-text='purchase receipts' onClick={()=>{history.push('/purchase-receipts')}}>\r\n                        <h5>Total Purchase Receipts</h5>\r\n                        <p><b>{cashPurchases?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"creditSales\" data-text='purchase invoices' onClick={() => { history.push('/purchase-invoices') }}>\r\n                        <h5>Total Credit Purchases</h5>\r\n                        <p><b>{creditPurchases?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></p>\r\n                    </div>\r\n\r\n                        <div className=\"salesReturns\" data-text='purchase returns' onClick={()=>{history.push('/purchase-returns')}}>\r\n                            <h5>Total Purchase Returns</h5>\r\n                            <p style={{ color: 'red' }}><b>{purchasesReturns?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></p>\r\n                        </div>\r\n                </div>\r\n\r\n                <Barchart\r\n                    labels={months}\r\n                    data3={values}\r\n                    tooltip3='Total Monthly Purchases'\r\n                    data1={creditPurchasesGraph?.map(item => item.value)}\r\n                    tooltip1='Credit Purchases'\r\n                    data2={cashPurchasesGraph?.map(item => item.value)}\r\n                    tooltip2='Purchase Receipts'\r\n                />\r\n            </div>\r\n\r\n            {\r\n                purchaseInvoice && <PurchaseInvoice\r\n                    onClick={() => { setPurchaseInvoice(false) }}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Invoice Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('')\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                cashPurchase && <CashPurchase\r\n                    onClick={() => {\r\n                        setCashPurchase(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Receipt Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                makePayment && <MakePayment\r\n                    onClick={() => {\r\n                        setMakePayment(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Payment Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                purchaseOrder && <PurchaseOrder\r\n                    onClick={() => {\r\n                        setPurchaseOrder(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Order Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                purchaseReturns && <PurchaseReturns\r\n                    onClick={() => {\r\n                        setPurchaseReturns(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Puirchase Returns Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newSupplier && <NewSupplierForm\r\n                    onClick={() => {\r\n                        setNewSupplier(false)\r\n                    }}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Supplier Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            <Alert\r\n                aler={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Purchases\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport Alert from './Alert'\r\n\r\nfunction SuppliersPage() {\r\n\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [suppliers, setSuppliers] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        \r\n        getData(source, unMounted)\r\n\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const getData = async(source, unMounted)=>{\r\n        const request1 = baseURL.get('/purchases')\r\n        const request2 = baseURL.get('/suppliers')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2] = res\r\n                setSuppliers(result2.data.suppliers)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    const wrapperRef = useRef(null)\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setNewSupplier(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Sales'>\r\n            <div className=\"Invoices\">\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Suppliers</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewSupplier(true)}}>New Supplier</button>\r\n                </div>\r\n                <div className=\"allDebtorsContainer\">\r\n                    {\r\n                        suppliers.length === 0 ? <div style={{marginTop: '1rem'}}>\r\n                            <h3>No Data to display. Please Add Suppliers</h3>\r\n                            <button className=\"btn\" onClick={() =>{setNewSupplier(true) }}>Add Supplier</button>\r\n                        </div> :\r\n                            <h3 style={{textAlign:'left'}}>All Suppliers</h3>\r\n                    }\r\n                    <table className='allDebtorsTable'>\r\n                        <thead>\r\n                            {\r\n                                suppliers.length === 0 ? '' :\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Supplier Name</th>\r\n                                        <th>Email Address</th>\r\n                                        <th>City </th>\r\n                                        <th>Telephone</th>\r\n                                    </tr>\r\n                            }\r\n                        </thead>\r\n\r\n                        <tbody className='tableBody'>\r\n                            {\r\n                                suppliers?.map(supplier => (\r\n                                    <tr className='invoiceListbody invoiceDetail' onClick={() =>{history.push(`/suppliers/${supplier.name}`)}}>\r\n                                        <td>{supplier.name}</td>\r\n                                        <td>{supplier.email}</td>\r\n                                        <td>{supplier.city}</td>\r\n                                        <td>{supplier.telephone?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"-\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newSupplier && <div ref={wrapperRef}>\r\n                    <NewSupplierForm\r\n                    onClick={() => {\r\n                        setNewSupplier(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Supplier Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                    />\r\n                </div>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuppliersPage\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport './CustomerDetails.css'\r\nimport Barchart from './Barchart'\r\nimport PurchaseInvoice from './PurchaseInvoice';\r\nimport CashPurchase from './CashPurchase';\r\nimport MakePayment from './MakePayment';\r\nimport PurchaseOrder from './PurchaseOrder';\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport PurchaseReturns from './PurchaseReturns'\r\nimport Alert from './Alert'\r\n\r\nfunction SupplierDetails() {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [fetching, setFetching] = useState(true)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [purchaseInvoice, setPurchaseInvoice] = useState(false)\r\n    const [cashPurchase, setCashPurchase] = useState(false)\r\n    const [purchaseOrder, setPurchaseOrder] = useState(false)\r\n    const [makePayment, setMakePayment] = useState(false)\r\n    const [purchaseReturn, setPurchaseReturn] = useState(false)\r\n    const [viewPurchaseInvoices, setViewPurchaseInvoices] = useState(false)\r\n    const [viewCashPurchases, setViewCashPurchases] = useState(false)\r\n    const [viewPurchaseOrders, setViewPurchaseOrders] = useState(false)\r\n    const [viewPurchaseReturns, setViewPurchaseReturns] = useState(false)\r\n    const [overview, setOverview] = useState(true)\r\n\r\n\r\n    const [purchaseInvoices, setPurchaseInvoices] = useState([])\r\n    const [cashPurchases, setCashPurchases] = useState([])\r\n    const [purchaseOrders, setPurchaseOrders] = useState([])\r\n    const [purchaseReturns, setPurchaseReturns] = useState([])\r\n    const [purchases, setPurchases] = useState([])\r\n    const [creditors, setCreditors] = useState([])\r\n    const [invoiceAdditions, setinvoiceAdditions] = useState([])\r\n    const [receiptAdditions, setReceiptAdditions] = useState([])\r\n    const [creditNoteAdditions, setCreditNoteAdditions] = useState([])\r\n    const [suppliers, setSuppliers] = useState([])\r\n    const [buttonClicked, setButtonClicked] = useState('overview')\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const element = suppliers?.filter(a => a.name === params.supplierName)\r\n\r\n    useEffect(async () => {\r\n        const request1 = baseURL.get(`/suppliers/${params.supplierName}`);\r\n        const request2 = baseURL.get('/suppliers')\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n            .then(res => {\r\n                const [result1, result2] = res\r\n                setPurchaseInvoices(result1.data.purchaseInvoices)\r\n                setCashPurchases(result1.data.cashPurchases)\r\n                setPurchaseOrders(result1.data.purchaseOrders)\r\n                setPurchaseReturns(result1.data.purchaseReturns)\r\n                setPurchases(result1.data.purchases)\r\n                setCreditors(result1.data.creditorList)\r\n                setinvoiceAdditions(result1.data.purchaseInvoices.map(a => a.otherAdditions.map(b => b.amount).reduce((a, b) => a + b, 0)));\r\n                setReceiptAdditions(result1.data.cashPurchases.map(a => a.otherAdditions.map(b => b.amount).reduce((a, b) => a + b, 0)));\r\n                setCreditNoteAdditions(result1.data.purchaseReturns.map(a => a.otherAdditions.map(b => b.amount).reduce((a, b) => a + b, 0)))\r\n                setSuppliers(result2.data.suppliers)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    let jan = []\r\n    let feb = []\r\n    let mar = []\r\n    let apr = []\r\n    let may = []\r\n    let jun = []\r\n    let jul = []\r\n    let aug = []\r\n    let sept = []\r\n    let oct = []\r\n    let nov = []\r\n    let dec = []\r\n\r\n    purchases.filter(purchase => {\r\n        const month = new Date(purchase.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                jan.push(purchase.amount)\r\n                break;\r\n\r\n            case 1:\r\n                feb.push(purchase.amount)\r\n                break;\r\n\r\n            case 2:\r\n                mar.push(purchase.amount)\r\n                break;\r\n\r\n            case 3:\r\n                apr.push(purchase.amount)\r\n                break;\r\n\r\n            case 4:\r\n                may.push(purchase.amount)\r\n                break;\r\n\r\n            case 5:\r\n                jun.push(purchase.amount)\r\n                break;\r\n\r\n            case 6:\r\n                jul.push(purchase.amount)\r\n                break;\r\n\r\n            case 7:\r\n                aug.push(purchase.amount)\r\n                break;\r\n\r\n            case 8:\r\n                sept.push(purchase.amount)\r\n                break;\r\n\r\n            case 9:\r\n                oct.push(purchase.amount)\r\n                break;\r\n\r\n            case 10:\r\n                nov.push(purchase.amount)\r\n                break;\r\n\r\n            case 11:\r\n                dec.push(purchase.amount)\r\n                break;\r\n\r\n\r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    jan = jan.reduce((a, b) => a + b, 0)\r\n    feb = feb.reduce((a, b) => a + b, 0)\r\n    mar = mar.reduce((a, b) => a + b, 0)\r\n    apr = apr.reduce((a, b) => a + b, 0)\r\n    may = may.reduce((a, b) => a + b, 0)\r\n    jun = jun.reduce((a, b) => a + b, 0)\r\n    jul = jul.reduce((a, b) => a + b, 0)\r\n    aug = aug.reduce((a, b) => a + b, 0)\r\n    sept = sept.reduce((a, b) => a + b, 0)\r\n    oct = oct.reduce((a, b) => a + b, 0)\r\n    nov = nov.reduce((a, b) => a + b, 0)\r\n    dec = dec.reduce((a, b) => a + b, 0)\r\n\r\nlet credit1 = []; let cash1 = [];\r\nlet credit2 = []; let cash2 = [];\r\nlet credit3 = []; let cash3 = [];\r\nlet credit4 = []; let cash4 = [];\r\nlet credit5 = []; let cash5 = [];\r\nlet credit6 = []; let cash6 = [];\r\nlet credit7 = []; let cash7 = [];\r\nlet credit8 = []; let cash8 = [];\r\nlet credit9 = []; let cash9 = [];\r\nlet credit10 = []; let cash10 = [];\r\nlet credit11 = []; let cash11 = [];\r\nlet credit12 = []; let cash12 = [];\r\n\r\npurchaseInvoices?.filter(purchase => {\r\n        const month = new Date(purchase.invoiceInput?.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                credit1.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 1:\r\n                credit2.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 2:\r\n                credit3.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 3:\r\n                credit4.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 4:\r\n                credit5.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 5:\r\n                credit6.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 6:\r\n                credit7.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 7:\r\n                credit8.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 8:\r\n                credit9.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 9:\r\n                credit10.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 10:\r\n                credit11.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 11:\r\n                credit12.push(purchase.netPayable)\r\n                break;\r\n\r\n\r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    cashPurchases?.filter(purchase => {\r\n        const month = new Date(purchase.receiptInput?.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                cash1.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 1:\r\n                cash2.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 2:\r\n                cash3.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 3:\r\n                cash4.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 4:\r\n                cash5.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 5:\r\n                \r\n                cash6.push(purchase.netPayable)\r\n                break;\r\n                \r\n\r\n            case 6:\r\n                cash7.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 7:\r\n                cash8.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 8:\r\n                cash9.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 9:\r\n                cash10.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 10:\r\n                cash11.push(purchase.netPayable)\r\n                break;\r\n\r\n            case 11:\r\n                cash12.push(purchase.netPayable)\r\n                break;\r\n\r\n\r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\nconst janCash1 = cash1.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash2 = cash2.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash3 = cash3.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash4 = cash4.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash5 = cash5.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash6 = cash6.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash7 = cash7.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash8 = cash8.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash9 = cash9.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash10 = cash10.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash11 = cash11.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCash12 = cash12.reduce((a,b) => Number(a) + Number(b), 0)\r\n\r\nconst janCredit1 = credit1.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit2 = credit2.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit3 = credit3.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit4 = credit4.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit5 = credit5.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit6 = credit6.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit7 = credit7.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit8 = credit8.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit9 = credit9.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit10 = credit10.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit11 = credit11.reduce((a,b) => Number(a) + Number(b), 0)\r\nconst janCredit12 = credit12.reduce((a,b) => Number(a) + Number(b), 0)\r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='CustomerDetails Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                <h1>Supplier: {params.supplierName}</h1>\r\n                <div className=\"moreOptions\">\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>New Transaction<i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                        <p className=\"option\" onClick={()=>{setPurchaseInvoice(true)}}>Purchase Invoice</p>\r\n                            <p className=\"option\" onClick={()=>{setCashPurchase(true)}}>Purchase Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setMakePayment(true)}}>Make Payment</p>\r\n                            <p className=\"option\" onClick={()=>{setPurchaseOrder(true)}}>Purchase Order</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"filterContainer\">\r\n                <div className='filter'>\r\n                        <button\r\n                            className={buttonClicked === 'overview' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('overview')\r\n                                setViewPurchaseInvoices(false)\r\n                                setViewCashPurchases(false)\r\n                                setViewPurchaseOrders(false)\r\n                                setViewPurchaseReturns(false)\r\n                                setOverview(true)\r\n                            }}\r\n                        >\r\n                            Overview\r\n                                </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View Invoices' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View Invoices')\r\n                                setViewCashPurchases(false)\r\n                                setViewPurchaseOrders(false)\r\n                                setViewPurchaseReturns(false)\r\n                                setOverview(false)\r\n                                setViewPurchaseInvoices(true)\r\n                            }}\r\n                        >\r\n                            All Invoices\r\n                                </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View Receipts' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View Receipts')\r\n                                setViewPurchaseOrders(false)\r\n                                setViewPurchaseReturns(false)\r\n                                setOverview(false)\r\n                                setViewPurchaseInvoices(false)\r\n                                setViewCashPurchases(true)\r\n                            }}\r\n                        >\r\n                            Cash Purchases\r\n                                </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View Quotation' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View Quotation')\r\n                                setViewPurchaseReturns(false)\r\n                                setOverview(false)\r\n                                setViewPurchaseInvoices(false)\r\n                                setViewCashPurchases(false)\r\n                                setViewPurchaseOrders(true)\r\n                            }}\r\n                        >\r\n                            Purchase Orders\r\n                        </button>\r\n\r\n                        <button\r\n                            className={buttonClicked === 'View CreditNote' ? 'button' : 'btn'}\r\n                            onClick={() => {\r\n                                setButtonClicked('View CreditNote');\r\n                                setOverview(false)\r\n                                setViewPurchaseInvoices(false)\r\n                                setViewCashPurchases(false)\r\n                                setViewPurchaseOrders(false)\r\n                                setViewPurchaseReturns(true)\r\n                            }}\r\n                        >\r\n                            Purchase Returns\r\n                        </button>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                overview &&\r\n                <div className=\"customerBodyELements\">\r\n                {\r\n                    element?.map(e => (\r\n                        <div className=\"customerDetailsInfo\">\r\n                            <i class=\"fas fa-user-circle fa-5x\"></i>\r\n                            <div className=\"customerName group\">\r\n                                <h2>Name: {e.name}</h2>\r\n                                {\r\n                                    creditors.map(credit => (\r\n                                        <p className=\"balanceDue\">\r\n                                            Total Credit: {credit.balanceDue}\r\n                                        </p>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className=\"contactInfos group\">\r\n                                <h3 className='customerDetail'><u>Contact Info</u></h3>\r\n                                <p className='customerDetail'><span>Email:</span>{e.email}</p>\r\n                                <p className='customerDetail'><span>Tel:</span>{e.telephone}</p>\r\n                                <p className='customerDetail'><span>Mobile:</span>{e.mobile}</p>\r\n                                <p className='customerDetail'><span>P.O Box: </span>{e.fax}</p>\r\n                            </div>\r\n\r\n                            <div className=\"addressInfos group\">\r\n                                <h3 className='customerDetail'><u>Address Info</u></h3>\r\n                                <p className='customerDetail'><span>Country:</span> {e.country}</p>\r\n                                <p className='customerDetail'><span>City:</span> {e.city}</p>\r\n                                <p className='customerDetail'><span>Street:</span> {e.street}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    purchases.length > 0 ? <div className=\"recentAndBarChart\">\r\n                        <div className=\"recentTransactions\">\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Credits</b></p>\r\n                                <p>{((purchaseInvoices?.map(item => item.netPayable).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Cash</b></p>\r\n                                <p>{((cashPurchases?.map(item => item.netPayable).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Paid To</b></p>\r\n                                <p>{((creditors?.map(item => item.totalPaid).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Balance Owed To</b></p>\r\n                                <p>{((creditors?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"barChartChart\">\r\n                            <Barchart\r\n                            labels={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']}\r\n                            data3={\r\n                                [jan, feb, mar, apr, may, jun, jul, aug, sept, oct, nov, dec]\r\n                            }\r\n                            tooltip3={`Total Purchases`}\r\n                            data1={\r\n                                [janCredit1, janCredit2, janCredit3, janCredit4, janCredit5, janCredit6, janCredit7, janCredit8, janCredit9, janCredit10, janCredit11, janCredit12]\r\n                            }\r\n                            tooltip1={`Credit Purchases`}\r\n                            data2={\r\n                                [janCash1, janCash2, janCash3, janCash4, janCash5, janCash6, janCash7, janCash8, janCash9, janCash10, janCash11, janCash12]\r\n                            }\r\n                            tooltip2={`Cash Purchases`}\r\n                            />\r\n                        </div>\r\n\r\n                    </div> : <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n            </div>\r\n            }\r\n\r\n            <div className='allDebtorsContainer'>\r\n                    {\r\n                        viewPurchaseInvoices &&\r\n                            purchaseInvoices.length > 0 ? <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n                                        <th>Invoice Term</th>\r\n                                        <th>Due Date</th>\r\n\r\n                                        <th>Invoice Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                        <th>Total Discounts</th>\r\n                                        <th>VAT</th>\r\n                                        <th>Other Additions</th>\r\n                                        <th>Net Payable</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        purchaseInvoices.map((invoice, index) => (\r\n                                            <tr className='invoiceListbody invoiceDetail' onClick={()=>{history.push(`/purchase-invoices/${invoice._id}`)}}>\r\n                                                <td>{new Date(invoice.invoiceInput.date).toLocaleDateString()}</td>\r\n                                                <td>{invoice.selectInvoiceTerm} days</td>\r\n                                                <td>{new Date(invoice.dueDate).toLocaleDateString()}</td>\r\n                                                <td>{invoice.invoiceInput.invoiceNumber}</td>\r\n                                                <td>{(invoice.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(invoice.discountsAndVat.rebateValue) + Number(invoice.discountsAndVat.tradeDiscountValue) + Number(invoice.discountsAndVat.cashDiscountValue)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(invoice.discountsAndVat.valueAddedTax).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(invoiceAdditions[index])?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{((invoice.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewPurchaseInvoices && <h2 className='noData'>No Invoices To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                    {\r\n                        viewCashPurchases &&\r\n                            cashPurchases.length > 0 ?\r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n                                        <th>Receipt Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                        <th>Total Discounts</th>\r\n                                        <th>VAT</th>\r\n                                        <th>Other Additions</th>\r\n                                        <th>Net Payable</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        cashPurchases.map((receipt, index) => (\r\n                                            <tr className='receiptListbody invoiceDetail' onClick={()=>{history.push(`/purchase-receipts/${receipt._id}`)}}>\r\n                                                <td>{receipt.receiptInput.date}</td>\r\n                                                <td>{receipt.receiptInput.receiptNumber}</td>\r\n                                                <td>{(receipt.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(receipt.discountsAndVat.rebateValue) + Number(receipt.discountsAndVat.tradeDiscountValue) + Number(receipt.discountsAndVat.cashDiscountValue)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(receipt.discountsAndVat.valueAddedTax).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(receiptAdditions[index])?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(receipt.netPayable).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewCashPurchases && <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                    {\r\n                        viewPurchaseReturns &&\r\n                            purchaseReturns.length > 0 ?\r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n\r\n                                        <th>Return Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                        <th>Total Discounts</th>\r\n                                        <th>VAT</th>\r\n                                        <th>Other Additions</th>\r\n                                        <th>Net Payable</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        purchaseReturns.map((returns, index) => (\r\n                                            <tr className='noteListbody invoiceDetail' onClick={()=>{history.push(`/purchase-returns/${returns._id}`)}}>\r\n                                                <td>{returns.returnsInput.date}</td>\r\n                                                <td>{returns.returnsInput.returnNumber}</td>\r\n                                                <td>{(returns.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(returns.discountsAndVat.rebateValue) + Number(returns.discountsAndVat.tradeDiscountValue) + Number(returns.discountsAndVat.cashDiscountValue)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(returns.discountsAndVat.valueAddedTax).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(creditNoteAdditions[index])?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{((returns.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewPurchaseReturns && <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                    {\r\n                        viewPurchaseOrders &&\r\n                            purchaseOrders.length > 0 ?\r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n\r\n                                        <th>Order Number</th>\r\n                                        <th>Gross Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        purchaseOrders.map((order, index) => (\r\n                                            <tr className='quoteListbody invoiceDetail' onClick={()=>{history.push(`/purchase-orders/${order._id}`)}}>\r\n                                                <td>{order.orderInput.date}</td>\r\n                                                <td>{order.orderInput.orderNumber}</td>\r\n                                                <td>{(order.grossAmount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : viewPurchaseOrders && <h2 className='noData'>No Data To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n            {\r\n                purchaseInvoice && <PurchaseInvoice\r\n                    onClick={() => { setPurchaseInvoice(false) }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchase Invoice Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                cashPurchase && <CashPurchase\r\n                    onClick={() => {\r\n                        setCashPurchase(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchase Receipt Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                makePayment && <MakePayment\r\n                    onClick={() => {\r\n                        setMakePayment(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Supplier Payment Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                purchaseOrder && <PurchaseOrder\r\n                    onClick={() => {\r\n                        setPurchaseOrder(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchase Order Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                purchaseReturn && <PurchaseReturns\r\n                    onClick={() => {\r\n                        setPurchaseReturn(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchase Returns Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newSupplier && <NewSupplierForm\r\n                    onClick={() => {\r\n                        setNewSupplier(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Supplier Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SupplierDetails\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { baseURL } from './axios'\r\nimport {expStructure} from './data'\r\nimport './NewExpense.css'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\n\r\n\r\nfunction NewExpense({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [expenseInput, setExpenseInput] = useState({})\r\n    const [data, setData] = useState(expStructure)\r\n    const [height, setHeight] = useState(17);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n    const [fetching, setfetching] = useState(false)\r\n    const wrapperRef = useRef()\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setExpenseInput((prevValue)=>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const elements = data.filter(ele => ele.expName !== '' && ele.receiver !== '' && ele.category !== '' && ele.meansOfPayment !== '' && ele.amount !== '')\r\n\r\n    const expData = {\r\n        elements,\r\n        date: expenseInput.date\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            onClick()\r\n        }\r\n    }\r\n\r\n    const handleSubmit = ()=>{\r\n        if (elements.length === 0) {\r\n            setAlertMessage(\"Please add at least one expense\")\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        } else {\r\n            setfetching(true)\r\n            baseURL.post('/expenses', expData)\r\n            .then(res => {\r\n                onClick()\r\n                refetch()\r\n                setfetching(false)\r\n            })\r\n            .catch(err => console.log(err))\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"NewExpense\" ref={wrapperRef}>\r\n            <div className=\"close\">\r\n                <i className=\"fas fa-times fa-lg\" onClick={onClick}></i>\r\n            </div>\r\n            <div className=\"mainContainer\">\r\n                <div className=\"expTop\">\r\n                    <div className=\"date\">\r\n                        <label htmlFor=\"date\">Date: </label>\r\n                    <input type=\"date\" name=\"date\" id=\"date\" value={expenseInput.date} onChange={handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"receiveer\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}\r\n                            className='expenseTable'\r\n                >\r\n                    <table>\r\n                    <thead>\r\n                        <tr className='invoiceListHead'>\r\n                            <th>Expense Name</th>\r\n                            <th>Receiver</th>\r\n                            <th>Category</th>\r\n                            <th>Means of Payment</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((d,i) =>(\r\n                                <tr className='invoiceLisBody' key={i}>\r\n                                    <td>\r\n                                        <input type=\"text\" name='expName' value={d.expName} onChange={updateFieldChanged(\"expName\", i)} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" name=\"receiver\" onChange={updateFieldChanged('receiver', i)}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select name=\"category\" value={d.category} onChange={updateFieldChanged(\"category\", i)}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"administration\">Administration</option>\r\n                                            <option value=\"distribution\">Selling and Distribution</option>\r\n                                            <option value=\"other\">Other</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <select name=\"meansOfPayment\" value={d.meansOfPayment} onChange={updateFieldChanged(\"meansOfPayment\", i)}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"cash\">Cash</option>\r\n                                            <option value=\"bank\">Bank</option>\r\n                                            <option value=\"mobile money\">Mobile Money</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input type=\"number\" name=\"amount\" value={d.amount} onChange={updateFieldChanged(\"amount\", i)}/>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n                        \r\n                <div className=\"expButtons\">\r\n                    <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 8;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                setAlertMessage('Cannot Add more rows')\r\n                                setAlert(true)\r\n                                setTimeout(()=>{\r\n                                    setAlert(false)\r\n                                }, 3000)\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n                        <div className=\"saveOptions\">\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={handleSubmit}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={handleSubmit}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save and Send\r\n                            </button>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            <Alert\r\n                message={alertMessage}\r\n                alert={alert}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense\r\n","import React, {useRef, useEffect} from 'react'\r\nimport './UpdateExpense.css'\r\n\r\nfunction UpdateExpense({date, expName, receiver, category, meansOfPayment, amount, handleChange,onClick, handleUpdate}) {\r\n\r\n    const wrapperRef = useRef()\r\n\r\n    const handleClickOutSide = (e)=>{\r\n        const {current: wrap} = wrapperRef\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            onClick()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutSide)\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutSide)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='UpdateExpense'>\r\n        \r\n            <div className=\"updateExpenseInput\" ref={wrapperRef}>\r\n            <h3>Update Expense</h3>\r\n                <div className=\"dateUpdate\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input type=\"date\" name=\"date\" id=\"date\" value={date} onChange={handleChange} className='date' />\r\n                </div>\r\n\r\n                <div className=\"expNameUpdate\">\r\n                    <label htmlFor=\"expName\">Expense Name</label>\r\n                    <input type=\"text\" name=\"expName\" id=\"expName\" value={expName} onChange={handleChange} className='expName'/>\r\n                </div>\r\n\r\n                <div className=\"receiverUpdate\">\r\n                    <label htmlFor=\"receiver\">Receiver</label>\r\n                    <input type=\"text\" name=\"receiver\" id=\"receiver\" value={receiver} onChange={handleChange} className='receiver' />\r\n                </div>\r\n\r\n                <div className=\"categoryUpdate\">\r\n                    <label htmlFor=\"category\">Category</label>\r\n                    <select className='category' name=\"category\" id=\"category\" value={category} onChange={handleChange} >\r\n                        <option value=\"administration\">Administration</option>\r\n                        <option value=\"distribution\">Distribution</option>\r\n                        <option value=\"other\">Other</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"meansUpdate\">\r\n                    <label htmlFor=\"meansOfPayment\">Means of Payment</label>\r\n                    <select className='meansOfPayment' name=\"meansOfPayment\" id=\"meansOfPayment\" value={meansOfPayment} onChange={handleChange}>\r\n                        <option value=\"cash\">Cash</option>\r\n                        <option value=\"bank\">Bank</option>\r\n                        <option value=\"mobileMoney\">Mobile Money</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"amountUpdate\">\r\n                    <label htmlFor=\"amount\">Amount</label>\r\n                    <input type=\"text\" name=\"amount\" id=\"amount\" value={amount} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"updateButtons\">\r\n                <button className='btn' onClick={onClick}>\r\n                    Cancel\r\n                </button>\r\n                <button className='btn' onClick={handleUpdate}>\r\n                    Update\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateExpense\r\n","import React, {useRef, useEffect} from 'react'\r\nimport './DeleteBox.css'\r\n\r\nfunction DeleteBox({onClick, handleDelete}) {\r\n\r\n    const wrapperRef = useRef()\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener('mousedown', handleClickOutside)\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    const handleClickOutside = (e)=>{\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            onClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='DeleteBox'>\r\n            <div className=\"deleteContainer\" ref={wrapperRef}>\r\n                <p className='deleteText'>Click <b>OK</b> to confirm <span>delete</span></p>\r\n                <div className=\"deleteOptions\">\r\n                    <button className=\"btn\" onClick={onClick}>Cancel</button>\r\n                    <button className=\"btn\" onClick={()=>{\r\n                        handleDelete()\r\n                        onClick()\r\n                    }}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteBox\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport './Expenses.css'\r\nimport NewExpense from './NewExpense'\r\nimport UpdateExpense from './UpdateExpense'\r\nimport DeleteBox from './DeleteBox'\r\nimport Alert from './Alert'\r\n\r\nfunction ExpensesPage() {\r\n\r\n    const [overview, setOverview] = useState(true)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [newExpense, setNewExpense] = useState(false)\r\n    const [updateExpense, setUpdateExpense] = useState(false)\r\n    const [deleteBox, setDeleteBox] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [expenses, setExpenses] = useState([])\r\n    const [updateData, setUpdateData] = useState({})\r\n    const [value, setValue] = useState('')\r\n    const [filterOption, setFilterOption] = useState('detail')\r\n\r\n    useEffect(async() => {\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        await baseURL.get('/expenses', {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res =>{\r\n            setfetching(false)\r\n            setExpenses(res.data)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    let jan = []\r\n    let feb = []\r\n    let mar = []\r\n    let apr = []\r\n    let may = []\r\n    let jun = []\r\n    let jul = []\r\n    let aug = []\r\n    let sept = []\r\n    let oct = []\r\n    let nov = []\r\n    let dec = []\r\n\r\n    expenses.filter( exp => {\r\n        const month = new Date(exp.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                jan.push(exp.amount)\r\n                break;\r\n            \r\n            case 1:\r\n                feb.push(exp.amount)\r\n                break;\r\n\r\n            case 2:\r\n                mar.push(exp.amount)\r\n                break;\r\n\r\n            case 3:\r\n                apr.push(exp.amount)\r\n                break;\r\n\r\n            case 4:\r\n                may.push(exp.amount)\r\n                break;\r\n\r\n            case 5:\r\n                jun.push(exp.amount)\r\n                break;\r\n\r\n            case 6:\r\n                jul.push(exp.amount)\r\n                break;\r\n\r\n            case 7:\r\n                aug.push(exp.amount)\r\n                break;\r\n\r\n            case 8:\r\n                sept.push(exp.amount)\r\n                break;\r\n\r\n            case 9:\r\n                oct.push(exp.amount)\r\n                break;\r\n\r\n            case 10:\r\n                nov.push(exp.amount)\r\n                break;\r\n        \r\n            case 11:\r\n                dec.push(exp.amount)\r\n                break;\r\n\r\n            \r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    jan = jan.reduce((a, b) => a + b, 0)\r\n    feb = feb.reduce((a, b) => a + b, 0)\r\n    mar = mar.reduce((a, b) => a + b, 0)\r\n    apr = apr.reduce((a, b) => a + b, 0)\r\n    may = may.reduce((a, b) => a + b, 0)\r\n    jun = jun.reduce((a, b) => a + b, 0)\r\n    jul = jul.reduce((a, b) => a + b, 0)\r\n    aug = aug.reduce((a, b) => a + b, 0)\r\n    sept = sept.reduce((a, b) => a + b, 0)\r\n    oct = oct.reduce((a, b) => a + b, 0)\r\n    nov = nov.reduce((a, b) => a + b, 0)\r\n    dec = dec.reduce((a, b) => a + b, 0)\r\n    \r\n    const handleChange = (e)=>{\r\n        const {value} = e.target\r\n        setValue(value)\r\n    }\r\n\r\n    const handleFilterOption = (e)=>{\r\n        const {value} = e.target\r\n        setFilterOption(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Expense Invoices\">\r\n            <div className=\"invoicesHeading\">\r\n                <div style={{textAlign: 'left'}}>\r\n                    <h1>Expenses</h1>\r\n                    <h3>Total Spent On Expenses: <span style={{color: 'red'}}>{\r\n                    expenses.map(exp => exp.amount).reduce((a, b) => a + b, 0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                    }</span></h3>\r\n                </div>\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewExpense(true)}}>New Expense</button>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"recentDetails\">\r\n                \r\n            <div className=\"mostRecentTransactions\">\r\n            <h3>Recent Transactions</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Detail</th>\r\n                            <th>Paid To</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            expenses?.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                            .slice(0,3)\r\n                            .map((exp, i) => (\r\n                                <tr key={i}>\r\n                                    <td className='detail'>{exp.expName}</td>\r\n                                    <td>{exp.receiver}</td>\r\n                                    <td>{exp.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                </tr>\r\n                            )) \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"mosstPaidExpenses\">\r\n                <h3>Expenses Most Paid For</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th> Detail </th>\r\n                            <th> Paid To </th>\r\n                            <th> Amount </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            expenses?.sort((a, b) => b.amount - a.amount)\r\n                            .slice(0, 3)\r\n                            .map((exp, i) => (\r\n                                <tr key={i}>\r\n                                    <td className='detail'>{exp.expName}</td>\r\n                                    <td>{exp.receiver}</td>\r\n                                    <td>{exp.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"buttons\">\r\n                <button className={ overview ? 'button' : 'btn' } onClick={() =>{setOverview(true)}}>\r\n                    Overview\r\n                </button>\r\n                <button className={ !overview ? 'button' : 'btn' } onClick={() =>{setOverview(false)}}>\r\n                    All Transactions\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"barChartAndExpenses\">\r\n                {\r\n                    overview &&\r\n                    <div className=\"Barchart\">\r\n                        <Bar\r\n                            width= {200}\r\n                            height= '70%'\r\n                            data={{\r\n                                labels :['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\r\n                                datasets:[\r\n                                    {\r\n                                        label: 'Expense Overview',\r\n                                        data: [jan, feb,mar, apr, may, jun, jul, aug, sept, oct, nov, dec],\r\n                                        backgroundColor: [\r\n                                            '#B336D6',\r\n                                            '#DB59FF',\r\n                                            '#598A07',\r\n                                            '#9AD636',\r\n                                            '#D63689',\r\n                                            '#088A07',\r\n                                            '#37D636',\r\n                                            '#FF57AE',\r\n                                            '#36D6A3',\r\n                                            '#8A2207',\r\n                                            '#30FFBC',\r\n                                            '#D65736'\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }}\r\n                            options={\r\n                            {\r\n                                scales: {\r\n                                    xAxes: [\r\n                                        {\r\n                                            grideLines: {\r\n                                                display: false\r\n                                            }\r\n                                        }\r\n                                    ],\r\n                                    yAxes: [\r\n                                        {\r\n                                            grideLines: {\r\n                                                display: false\r\n                                            },\r\n                                            ticks: {\r\n                                            beginAtZero: true\r\n                                        }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            {\r\n                                maintainAspectRatio: true\r\n                            }\r\n                        }\r\n                            />\r\n                    </div>\r\n                }\r\n\r\n                \r\n\r\n                {\r\n                    !overview &&\r\n                    <div className=\"allTransactions\">\r\n                        <div className=\"expTranTop\">\r\n                            <h3>All Expense Transactions</h3>\r\n\r\n                            <div className=\"filterOptions\"> \r\n                                <div>\r\n                                    <label htmlFor=\"filterBy\">Filter By:</label>\r\n                                    <select name=\"filterBy\" id=\"filterBy\" value={filterOption} onChange={handleFilterOption} className='btn'>\r\n                                        <option value=\"detail\">Detail</option>\r\n                                        <option value=\"category\">Category</option>\r\n                                        <option value=\"receiver\">Receiver</option>\r\n                                        <option value=\"means\">Paid By</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"text\" name=\"filterExp\" value={value} onChange={handleChange} placeholder={filterOption === 'detail' ? 'Enter Exp Name' : filterOption === 'receiver' ? 'Enter Receiver' : filterOption === 'means' ? 'Enter Means Of Payment' : filterOption === 'category' ? 'Enter Category' : null} className='btn'/>\r\n                            </div>\r\n                        </div>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Detail</th>\r\n                                    <th>Category</th>\r\n                                    <th>Receiver</th>\r\n                                    <th>Paid By:</th>\r\n                                    <th>Amount</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    expenses\r\n                                    .filter(exp => {\r\n                                            if (!value) return true\r\n                                            switch(filterOption){\r\n                                                case 'detail': \r\n                                                    if (exp.expName.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                    }\r\n\r\n                                                case 'category':\r\n                                                    if (exp.category.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                    }\r\n\r\n                                                case 'means' :\r\n                                                    if (exp.meansOfPayment.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                    }\r\n\r\n                                                case 'receiver':\r\n                                                    if (exp.receiver.toLowerCase().includes(value.toLowerCase())) {\r\n                                                    return true\r\n                                                    }\r\n\r\n                                                default : return false\r\n                                            }\r\n                                        })\r\n                                        .sort((a, b)=> new Date(b.date) - new Date(a.date))\r\n                                        .map((exp, i) => (\r\n                                            <tr key={i} className='allExpenses'>\r\n                                                <td>{new Date(exp.date).toLocaleDateString()}</td>\r\n                                                <td className='detail'>{exp.expName}</td>\r\n                                                <td className='category'>{exp.category}</td>\r\n                                                <td>{exp.receiver}</td>\r\n                                                <td className='means'>{exp.meansOfPayment}</td>\r\n                                                <td>{exp.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                \r\n                                                <td className='updateExpense'>\r\n                                                    <i class=\"fas fa-pen\" dataset='update' onClick={()=>{\r\n                                                        setUpdateData(exp);\r\n                                                        setUpdateExpense(true)\r\n                                                    }}\r\n                                                    dataset='update'\r\n                                                    ></i>\r\n                                                    <i class=\"fas fa-trash\" dataset='delete' onClick={()=>{\r\n                                                        setUpdateData(exp)\r\n                                                        setDeleteBox(true)\r\n                                                    }}\r\n                                                    dataset='delete'\r\n                                                    ></i>\r\n                                                </td>\r\n                                            </tr>\r\n                                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        {}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newExpense && <NewExpense\r\n                onClick={()=>{setNewExpense(false) }}\r\n                refetch={()=>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Expense Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n                }}\r\n                />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n            {\r\n                updateExpense &&\r\n                <UpdateExpense\r\n                    date={updateData.date}\r\n                    expName={updateData.expName}\r\n                    receiver={updateData.receiver}\r\n                    category={updateData.category}\r\n                    meansOfPayment={updateData.meansOfPayment}\r\n                    amount={updateData.amount}\r\n                    handleChange={(e)=>{\r\n                        const {name, value} = e.target\r\n                        setUpdateData(prev =>{\r\n                            return {\r\n                                ...prev,\r\n                                [name] : value\r\n                            }\r\n                        })\r\n                    }}\r\n                    onClick={()=>{\r\n                        setUpdateExpense(false)\r\n                    }}\r\n                    handleUpdate={async ()=>{\r\n                        setUpdateExpense(false)\r\n                        setfetching(true)\r\n                        await baseURL.put('/expenses/update', updateData)\r\n                        .then(res =>{\r\n                            if(res.status === 200){\r\n                                let source = axios.CancelToken.source();\r\n                                let unMounted = false;\r\n                                baseURL.get('/expenses', {\r\n                                    cancelToken: source.token\r\n                                })\r\n                                .then(res =>{\r\n                                    setfetching(false)\r\n                                    setExpenses(res.data)\r\n                                    setAlertMessage('Expense Updated Successfully')\r\n                                    setAlert(true)\r\n                                    setTimeout(()=>{\r\n                                        setAlert(false)\r\n                                        setAlertMessage('')\r\n                                    }, 2000)\r\n                                })\r\n                                .catch(err =>{\r\n                                    if (!unMounted) {\r\n                                        if (axios.isCancel(err)) {\r\n                                        console.log('Request Cancelled');\r\n                                    }else{\r\n                                        console.log('Something went wrong');\r\n                                    }\r\n                                    }\r\n                                })\r\n                                }else{\r\n                                    console.log('could not delete')\r\n                                }\r\n                        })\r\n                            \r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                deleteBox &&\r\n                <DeleteBox\r\n                    onClick={()=>{\r\n                        setDeleteBox(false)\r\n                    }}\r\n                    handleDelete={\r\n                        async ()=>{\r\n                            setDeleteBox(false)\r\n                            setfetching(true)\r\n                            await baseURL.patch('/expenses/delete', updateData)\r\n                            .then((res) => {\r\n                                if(res.status === 200){\r\n                                    let source = axios.CancelToken.source();\r\n                                    let unMounted = false;\r\n                                    baseURL.get('/expenses', {\r\n                                    cancelToken: source.token\r\n                                })\r\n                                .then(res =>{\r\n                                    setfetching(false)\r\n                                    setExpenses(res.data)\r\n                                    setAlertMessage('Expense Deleted Successfully')\r\n                                    setAlert(true)\r\n                                    setTimeout(()=>{\r\n                                        setAlert(false)\r\n                                        setAlertMessage('')\r\n                                    }, 2000)\r\n                                })\r\n                                .catch(err =>{\r\n                                    if (!unMounted) {\r\n                                        if (axios.isCancel(err)) {\r\n                                        console.log('Request Cancelled');\r\n                                    }else{\r\n                                        console.log('Something went wrong');\r\n                                    }\r\n                                    }\r\n                                })\r\n                                }else{\r\n                                    console.log('could not delete')\r\n                                }\r\n                                \r\n                            })\r\n                        }\r\n                    }\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpensesPage\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport {baseURL} from './axios'\r\nimport './AddProductForm.css'\r\nimport Alert from './Alert'\r\n\r\nfunction AddProductForm({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const wrapperRef = useRef()\r\n\r\n    const [newProduct, setNewProduct] = useState({\r\n        productName :'',\r\n        description :'',\r\n        sellingPrice : '',\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setNewProduct(prevValue =>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value,\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            onClick()\r\n        }\r\n    }\r\n\r\n    const productData = {\r\n        productName : newProduct.productName,\r\n        description : newProduct.description,\r\n        sellingPrice : newProduct.sellingPrice === '' ? 0 : newProduct.sellingPrice,\r\n    }\r\n\r\n    const handleProductSubmit  = async ()=>{\r\n        const {productName} = newProduct\r\n        if (productName === '') {\r\n            setAlertMessage('Please add a product name')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        } else {\r\n            await baseURL.post('/product', productData)\r\n            onClick()\r\n            refetch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='AddProductForm' ref={wrapperRef}>\r\n            <h2>Add A Product</h2>\r\n            <div className=\"addProductContainer\">\r\n                <div className=\"productName\">\r\n                    <label htmlFor=\"productName\">Name:</label>\r\n                    <input type=\"text\" name=\"productName\" id=\"productName\" onChange={handleChange} value={newProduct.productName}/>\r\n                </div>\r\n\r\n                <div className=\"description\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <input type=\"text\" name=\"description\" id=\"description\" onChange={handleChange} value={newProduct.description} />\r\n                </div>\r\n\r\n                <div className=\"up\">\r\n                    <label htmlFor=\"up\">Selling Price:</label>\r\n                    <input type=\"number\" name=\"sellingPrice\" id=\"up\" onChange={handleChange} value={newProduct.sellingPrice} />\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <button className=\"btn\" onClick={onClick}>Cancel</button>\r\n                    <button className=\"btn\" onClick={handleProductSubmit}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProductForm\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport {baseURL} from './axios'\r\nimport './AddProductForm.css'\r\n\r\nfunction UpdateProductForm({onClick, productName, description, handleProductSubmit, handleUpdate, sellingPrice}) {\r\n\r\n    const wrapperRef = useRef()\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            onClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='AddProductForm' ref={wrapperRef}>\r\n            <h2>Add A Product</h2>\r\n            <div className=\"addProductContainer\">\r\n                <div className=\"productName\">\r\n                    <label htmlFor=\"productName\">Name:</label>\r\n                    <input type=\"text\" name=\"productName\" id=\"productName\" onChange={handleUpdate} value={productName}/>\r\n                </div>\r\n\r\n                <div className=\"description\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <input type=\"text\" name=\"description\" id=\"description\" onChange={handleUpdate} value={description} />\r\n                </div>\r\n\r\n                <div className=\"up\">\r\n                    <label htmlFor=\"up\">sellingPrice:</label>\r\n                    <input type=\"text\" name=\"sellingPrice\" id=\"up\" onChange={handleUpdate} value={sellingPrice} />\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <button className=\"btn\" onClick={onClick}>Cancel</button>\r\n                    <button className=\"btn\" onClick={handleProductSubmit}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProductForm\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport './InventoryPage.css'\r\nimport './Sales.css'\r\nimport Barchart from './Barchart'\r\nimport Loader from './Loader'\r\nimport Invoice from './Invoice'\r\nimport AddProduct from './AddProductForm'\r\nimport Receipt from './Receipt'\r\nimport PurchaseInvoice from './PurchaseInvoice'\r\nimport PurchaseReceipt from './CashPurchase'\r\nimport Alert from './Alert'\r\n\r\nfunction InventoryPage({productId, productName}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [fetching, setfetching] = useState(false)\r\n    const [newProduct, setNewProduct] = useState(false)\r\n    const [invoice, setInvoice] = useState(false)\r\n    const [receipt, setReceipt] = useState(false)\r\n    const [purchaseInvoice, setPurchaseInvoice] = useState(false)\r\n    const [purchaseReceipt, setPurchaseReceipt] = useState(false)\r\n    const [overview, setOverview] = useState(true)\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [entriesAndExits, setEntriesAndExits] = useState([])\r\n    \r\n    const wrapperRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n            const {current : wrap} = wrapperRef;\r\n            if(wrap && !wrap.contains(e.target)){\r\n                setNewProduct(false);\r\n            }\r\n        }\r\n\r\n    useEffect(async() => {\r\n        setfetching(true)\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get(`/products/${productId}`)\r\n        const request2 = baseURL.get(`/entriesAndExits/${productName}`)\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2] = res\r\n            setProducts(result1.data)\r\n            setEntriesAndExits(result2.data)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const totalEntriesAmount = entriesAndExits.filter(item => item.exitOrEntry === 'entry').map(item => item.amount).reduce((a,b) => a + b, 0)\r\n\r\n    const totalExitsAmount = entriesAndExits.filter(item => item.exitOrEntry === 'exit').map(item => item.amount).reduce((a,b) => a + b, 0)\r\n\r\n    const totalEntriesQty = entriesAndExits.filter(item => item.exitOrEntry === 'entry').map(item => item.qty).reduce((a,b) => a + b, 0)\r\n\r\n    const totalExitsQty = entriesAndExits.filter(item => item.exitOrEntry === 'exit').map(item => item.qty).reduce((a,b) => a + b, 0)\r\n\r\n    const averageExitPrice = totalExitsAmount/totalExitsQty\r\n    \r\n    const unitSp = products.map(item => (item.sellingPrice).toFixed(2))\r\n\r\n    const wac = ((totalEntriesAmount - totalExitsAmount)/ (totalEntriesQty - totalExitsQty)).toFixed(2) || 0\r\n\r\n    const grossProfit = (averageExitPrice - wac).toFixed(2)\r\n\r\n    const entries = entriesAndExits.filter(item => item.exitOrEntry === 'entry')\r\n    const exits = entriesAndExits.filter(item => item.exitOrEntry === 'exit')\r\n\r\n    let jan = []\r\n    let feb = []\r\n    let mar = []\r\n    let apr = []\r\n    let may = []\r\n    let jun = []\r\n    let jul = []\r\n    let aug = []\r\n    let sept = []\r\n    let oct = []\r\n    let nov = []\r\n    let dec = []\r\n\r\n        entries.filter( element => {\r\n        const month = new Date(element.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                jan.push(element.amount)\r\n                break;\r\n            \r\n            case 1:\r\n                feb.push(element.amount)\r\n                break;\r\n\r\n            case 2:\r\n                mar.push(element.amount)\r\n                break;\r\n\r\n            case 3:\r\n                apr.push(element.amount)\r\n                break;\r\n\r\n            case 4:\r\n                may.push(element.amount)\r\n                break;\r\n\r\n            case 5:\r\n                jun.push(element.amount)\r\n                break;\r\n\r\n            case 6:\r\n                jul.push(element.amount)\r\n                break;\r\n\r\n            case 7:\r\n                aug.push(element.amount)\r\n                break;\r\n\r\n            case 8:\r\n                sept.push(element.amount)\r\n                break;\r\n\r\n            case 9:\r\n                oct.push(element.amount)\r\n                break;\r\n\r\n            case 10:\r\n                nov.push(element.amount)\r\n                break;\r\n        \r\n            case 11:\r\n                dec.push(element.amount)\r\n                break;\r\n\r\n            \r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    const janEx1 = []\r\n    const janEx2 = []\r\n    const janEx3 = []\r\n    const janEx4 = []\r\n    const janEx5 = []\r\n    const janEx6 = []\r\n    const janEx7 = []\r\n    const janEx8 = []\r\n    const janEx9 = []\r\n    const janEx10 = []\r\n    const janEx11 = []\r\n    const janEx12 = []\r\n\r\n    exits.filter( element => {\r\n        const month = new Date(element.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                janEx1.push(element.amount)\r\n                break;\r\n            \r\n            case 1:\r\n                janEx2.push(element.amount)\r\n                break;\r\n\r\n            case 2:\r\n                janEx3.push(element.amount)\r\n                break;\r\n\r\n            case 3:\r\n                janEx4.push(element.amount)\r\n                break;\r\n\r\n            case 4:\r\n                janEx5.push(element.amount)\r\n                break;\r\n\r\n            case 5:\r\n                janEx6.push(element.amount)\r\n                break;\r\n\r\n            case 6:\r\n                janEx7.push(element.amount)\r\n                break;\r\n\r\n            case 7:\r\n                janEx8.push(element.amount)\r\n                break;\r\n\r\n            case 8:\r\n                janEx9.push(element.amount)\r\n                break;\r\n\r\n            case 9:\r\n                janEx10.push(element.amount)\r\n                break;\r\n\r\n            case 10:\r\n                janEx11.push(element.amount)\r\n                break;\r\n        \r\n            case 11:\r\n                janEx12.push(element.amount)\r\n                break;\r\n\r\n            \r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n\r\n\r\n    const recentProductSales = entriesAndExits?.filter(item => item.exitOrEntry === 'exit').sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0,5)\r\n\r\n    const recentProductPurchases = entriesAndExits?.filter(item => item.exitOrEntry === 'entry').sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0,5)\r\n\r\n    const  janEntry1 = jan.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry2 = feb.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry3 = mar.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry4 = apr.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry5 = may.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry6 = jun.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry7 = jul.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry8 = aug.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const  janEntry9 = sept.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janEntry10 = oct.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janEntry11 = nov.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janEntry12 = dec.reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const janExit1 = janEx1.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit2 = janEx2.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit3 = janEx3.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit4 = janEx4.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit5 = janEx5.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit6 = janEx6.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit7 = janEx7.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit8 = janEx8.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit9 = janEx9.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit10 = janEx10.reduce((a, b) => Number(a) + Number(b), 0)\r\n    const janExit11 = janEx11.reduce((a, b) => Number(a) + Number(b), 0)    \r\n    const janExit12 = janEx12.reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n\r\n    return (\r\n        <div className='CustomerDetails Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                <h1>Product: {products.map(product => product.productName)}</h1>\r\n                <div className=\"moreOptions\">\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>New Transaction<i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                        <p className=\"option\" onClick={()=>{setPurchaseInvoice(true)}}>Purchase Invoice</p>\r\n                            <p className=\"option\" onClick={()=>{setPurchaseReceipt(true)}}>Purchase Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setInvoice(true)}}>Sales Invoice</p>\r\n                            <p className=\"option\" onClick={()=>{setReceipt(true)}}>Sales Receipt</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"filterContainer\">\r\n                <div className='filter'>\r\n                    <button\r\n                        className={overview ? 'button' : 'btn'}\r\n                        onClick={() => {\r\n                            setOverview(true)\r\n                        }}\r\n                    >\r\n                        Overview\r\n                    </button>\r\n\r\n                    <button\r\n                        className={!overview ? 'button' : 'btn'}\r\n                        onClick={() => {\r\n                            setOverview(false)\r\n                        }}\r\n                    >\r\n                        All Transactions\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                overview &&\r\n                <div className=\"customerBodyELements\">\r\n                {\r\n                    products.map(item => (\r\n                        <div className=\"customerDetailsInfo\">\r\n                            <i class=\"fas fa-image fa-5x\"></i>\r\n                            <div className=\"customerName group\">\r\n                                <h2>Name: {item.productName}</h2>\r\n                                <p>{item.description}</p>\r\n                                <p className='detail'>Unit Selling Price: {unitSp[0]}</p>\r\n                                <p>Average Exit Price: {(Number(averageExitPrice)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\" )}</p>\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"contactInfos group\">\r\n                                <h3 className='customerDetail'><u>Stock Info</u></h3>\r\n                                <p className='detail'>Qty In Stock: {(totalEntriesQty - totalExitsQty).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n\r\n                                <p className='detail'><b>Value In Stock: &nbsp; </b> {((Number(totalEntriesAmount) - Number(totalExitsAmount)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    \r\n                                <p className='detail'><b>WAC/Unit:</b> {(wac).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    \r\n                                <p className='detail'><b>Gross Profit/Unit:</b> <span style={{color: grossProfit < 0 ? 'red' : 'black'}}>{(grossProfit).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                                <p className='detail'><b>Gross Profit(%):</b> <span style={{color: grossProfit < 0 ? 'red' : 'black'}}>{(((Number(averageExitPrice) - Number(wac))/Number(averageExitPrice))*100).toFixed(2)}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                \r\n                    <div className=\"recentAndBarChart\">\r\n                        <div className=\"recentTransactions\">\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Entries</b></p>\r\n                                <p><span style= {{padding: '0.5rem'}}><b>Qty:</b></span>{(Number(totalEntriesQty).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                <p><span style={{padding: '0.5rem'}}><b>Amount:</b></span>{(Number(totalEntriesAmount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            </div>\r\n                            <div className=\"totalPurchases\">\r\n                                <p><b>Total Exits</b></p>\r\n                                <p><p><span style={{padding: '0.5rem'}}><b>Qty:</b></span>{(Number(totalExitsQty).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                <p><span style={{padding: '0.5rem'}}><b>Amount:</b></span>{(Number(totalExitsAmount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p></p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"barChartChart\">\r\n                            <Barchart\r\n                            labels={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']}\r\n                            data1={\r\n                                [janEntry1, janEntry2, janEntry3, janEntry4, janEntry5, janEntry6, janEntry7, janEntry8, janEntry9, janEntry10, janEntry11, janEntry12]\r\n                            }\r\n                            tooltip1={`Entries`}\r\n                            data2={\r\n                                [janExit1, janExit2, janExit3, janExit4, janExit5, janExit6, janExit7, janExit8, janExit9, janExit10, janExit11, janExit12]\r\n                            }\r\n                            tooltip2={`Exits`}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n            </div>\r\n            }\r\n\r\n            <div className='allDebtorsContainer'>\r\n                    {\r\n                        !overview &&\r\n                            entriesAndExits.length > 0 ? \r\n                            <table className=\"allDebtorsTable\">\r\n                                <thead>\r\n                                    <tr className='invoiceListHead'>\r\n                                        <th>Date</th>\r\n                                        <th>Entry or Exit</th>\r\n                                        <th>Quantity</th>\r\n\r\n                                        <th>Unit Price</th>\r\n                                        <th>Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=''>\r\n                                    {\r\n                                        entriesAndExits?.map((invoice, index) => (\r\n                                            <tr className='invoiceListbody'>\r\n                                                <td>{new Date(invoice.date).toLocaleDateString()}</td>\r\n                                                <td>{invoice.exitOrEntry}</td>\r\n                                                <td>{Number(invoice.qty).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(invoice.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                                <td>{(Number(invoice.amount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table> : !overview && <h2 className='noData'>No Transactions To Display. Please Record Transactions</h2>\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n            {\r\n                purchaseInvoice && <PurchaseInvoice\r\n                    onClick={() => { setPurchaseInvoice(false) }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchase Invoice Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                purchaseReceipt && <PurchaseReceipt\r\n                    onClick={() => {\r\n                        setPurchaseReceipt(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchase Receipt Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                invoice && <Invoice\r\n                    onClick={() => {\r\n                        setInvoice(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Invoice Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                receipt && <Receipt\r\n                    onClick={() => {\r\n                        setReceipt(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Receipt Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n\r\n            {\r\n                newProduct && <div ref={wrapperRef}>\r\n                    <AddProduct\r\n                    onClick={() => {\r\n                        setNewProduct(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Product Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n                </div>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryPage\r\n","import React, {useEffect, useState, useRef}  from 'react'\r\nimport {useHistory, useLocation} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport './InventoriesPage.css'\r\nimport Loader from './Loader'\r\nimport AddProductForm from './AddProductForm'\r\nimport Invoice from './Invoice'\r\nimport Receipt from './Receipt'\r\nimport PurchaseInvoice from './PurchaseInvoice'\r\nimport UpdateProductForm from './UpdateProduct'\r\nimport DeleteBox from './DeleteBox'\r\nimport queryString from 'query-string'\r\nimport InventoryPage from './InventoryPage'\r\nimport Alert from './Alert'\r\n\r\nfunction InventoriesPage() {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage]= useState('')\r\n\r\n    const [fetching, setfetching] = useState(true)\r\n    const [newProduct, setNewProduct] = useState(false)\r\n    const [updateProduct, setUpdateProduct] = useState(false)\r\n    const [transactionOptions, setTransactionOptions] = useState(false)\r\n    const [invoice, setInvoice] = useState(false)\r\n    const [receipt, setReceipt] = useState(false)\r\n    const [purchaseInvoice, setPurchaseInvoice] = useState(false)\r\n    const [deleteBox, setDeleteBox] = useState(false)\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [entriesAndExits, setEntriesAndExits] = useState([])\r\n    const [updateProductData, setUpdateProductData] = useState({\r\n        productName: '',\r\n        description: ''\r\n    })\r\n\r\n    const wrapperRef = useRef(null)\r\n    const {search} = useLocation()\r\n    const query = queryString.parse(search)\r\n    console.log(query);\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setTransactionOptions(false);\r\n        }\r\n    }\r\n\r\n    useEffect(async() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/entriesAndExits')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2] = res\r\n            setProducts(result1.data)\r\n            setEntriesAndExits(result2.data)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    // CODE BELOW SHOULD BE COPIED TO INVENTORY PAGE IN ORDER TO SHOW FREQUENTLY BOUGHT ITEMS\r\n    const exits = entriesAndExits.filter(a => a.exitOrEntry === 'exit').map(a => a.productName)\r\n\r\n    const entries = entriesAndExits.filter(a => a.exitOrEntry === 'entry').map(a => a.productName)\r\n\r\n    var frequentlySold = exits;\r\n    var s = frequentlySold.reduce(function(m,v){\r\n    m[v] = (m[v]||0)+1; return m;\r\n    }, {}); // builds {2: 4, 4: 2, 6: 3} \r\n    var mostSold = [];\r\n    for (let k in s) mostSold.push({k:k,n:s[k]});\r\n    // now we have [{\"k\":\"2\",\"n\":4},{\"k\":\"4\",\"n\":2},{\"k\":\"6\",\"n\":3}] \r\n    mostSold.sort(function(a,b){ return b.n-a.n });\r\n    const mostSoldElements = mostSold.map(function(a) { return a.k }).slice(0,5);\r\n\r\n    var frequentlyBought = entries;\r\n    var s = frequentlyBought.reduce(function(m,v){\r\n    m[v] = (m[v]||0)+1; return m;\r\n    }, {}); // builds {2: 4, 4: 2, 6: 3} \r\n    var mostBought = [];\r\n    for (let k in s) mostBought.push({k:k,n:s[k]});\r\n    // now we have [{\"k\":\"2\",\"n\":4},{\"k\":\"4\",\"n\":2},{\"k\":\"6\",\"n\":3}] \r\n    mostBought.sort(function(a,b){ return b.n-a.n });\r\n    const mostBoughtElements = mostBought.map(function(a) { return a.k }).slice(0,5);\r\n\r\n    const showUpdateProduct = (item)=>{\r\n        setUpdateProductData(item)\r\n        setUpdateProduct(true)\r\n    }\r\n\r\n    const showDeleteBox = (item)=>{\r\n        setUpdateProductData(item)\r\n        setDeleteBox(true)\r\n    }\r\n\r\n    const handleDeleteItem = async()=>{\r\n        await baseURL.put('/deleteProduct', updateProductData)\r\n        .then(res => {\r\n            setProducts(res.data)\r\n            setAlertMessage('Product Deleted Successfully')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n                setAlertMessage('')\r\n            }, 2000)\r\n        })\r\n    }\r\n                        \r\n\r\n    const handleProductUpdate = (e) => {\r\n        const {name, value} = e.target\r\n        setUpdateProductData(prevValue =>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleProductSubmit  = async ()=>{\r\n        await baseURL.put('/product', updateProductData)\r\n        .then(res => setProducts(res.data))\r\n        setUpdateProduct(false)\r\n        setAlertMessage('Product Updated Successfully')\r\n        setAlert(true)\r\n        setTimeout(()=>{\r\n            setAlert(false)\r\n            setAlertMessage('')\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='InventoryPage'>\r\n            {\r\n            search === '' ? \r\n            <div>\r\n                <div className=\"Invoices\">\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Inventories</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewProduct(true)}}>New Product</button>\r\n                </div>\r\n                <div className=\"products allDebtorsContainer\">\r\n                    <table className='allDebtorsTable'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Product Name</th>\r\n                                <th>Description</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                products?.map(pdt => (\r\n                                    <tr className='inventoryList invoiceDetail'>\r\n                                        <td className='inventoryItem' onClick={()=>{history.push(`/inventories?id=${pdt._id}&name=${pdt.productName}`)}}>{pdt.productName}\r\n                                        </td>\r\n\r\n                                        <td className='inventoryItem' onClick={()=>{history.push(`/inventories?id=${pdt._id}&name=${pdt.productName}`)}}>{pdt.description}</td>\r\n\r\n                                        <td className='inventoryItem upDateOptions'>\r\n                                            <i className=\"fas fa-pen\" onClick={()=>{\r\n                                                showUpdateProduct(pdt)\r\n                                            }}></i>\r\n                                            <i className=\"fas fa-trash\" onClick={()=>{\r\n                                                showDeleteBox(pdt)\r\n                                            }}></i>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n\r\n\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n            {\r\n                newProduct &&\r\n                <AddProductForm\r\n                    onClick={()=>{setNewProduct(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Product Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                invoice &&\r\n                <Invoice\r\n                    onClick={() => {setInvoice(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Incoice Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                receipt &&\r\n                <Receipt\r\n                    onClick={() => {setReceipt(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sales Receipt Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                purchaseInvoice &&\r\n                <PurchaseInvoice\r\n                onClick={() => {setPurchaseInvoice(false)}}\r\n                refetch={()=>{\r\n                        setAlertMessage('Purchase Invoice Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n\r\n            {\r\n                updateProduct &&\r\n                <UpdateProductForm\r\n                    onClick={()=>{setUpdateProduct(false)}}\r\n                    productName={updateProductData.productName}\r\n                    description={updateProductData.description}\r\n                    sellingPrice={updateProductData.sellingPrice}\r\n                    handleProductSubmit={handleProductSubmit}\r\n                    handleUpdate={handleProductUpdate}\r\n                />\r\n            }\r\n\r\n            {\r\n                deleteBox &&\r\n                <DeleteBox\r\n                    onClick={()=>{setDeleteBox(false)}}\r\n                    handleDelete={()=>{\r\n                        handleDeleteItem()\r\n                    }}\r\n                />\r\n            } \r\n            </div>: \r\n            <InventoryPage\r\n                productId={query.id}\r\n                productName={query.name}\r\n            />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoriesPage\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport { baseURL } from './axios'\r\nimport './Contra.css'\r\n\r\nfunction Contra({cancel}) {\r\n    const [data, setData] = useState({\r\n        sendingAccount: 'cash',\r\n        receivingAccount: 'bank'\r\n    })\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setData(prevValue => (\r\n            {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const handleSubmit = async()=>{\r\n        const submitData = {\r\n            sendingAccount: data.sendingAccount,\r\n            receivingAccount: data.receivingAccount,\r\n            amount: Number(data.amount)\r\n        }\r\n\r\n        if (data.sendingAccount === data.receivingAccount) {\r\n            alert('Transfer from account must be different from transfer to account')\r\n        }\r\n\r\n        if (data.sendingAccount !== data.receivingAccount) {\r\n            if (!data.amount) {\r\n                alert('Please add amount to transfer')\r\n            }else{\r\n                alert('Data posted successfuly')\r\n                await baseURL.post('/contra-transaction', submitData)\r\n                .then(res => {\r\n                    cancel()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handle_Click_Outside);\r\n        }\r\n    }, [])\r\n\r\n    function handle_Click_Outside(e){\r\n        const {current : wrap} = wrapper_Ref;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            cancel()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Contra' ref={wrapper_Ref}>\r\n            <div className=\"senderAndReceiverAccounts\">\r\n                <div className=\"sendingAccount\">\r\n                    <label htmlFor=\"sendingAccount\">Transfer from:</label>\r\n                    <select name='sendingAccount' value={data.sendingAccount} onChange={handleChange} id='sendingAccount'>\r\n                        <option value=\"cash\">Cash Account</option>\r\n                        <option value=\"bank\">Bank Account</option>\r\n                        <option value=\"mobileMoney\">Mobile Money Account</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"receivingAccount\">\r\n                <label htmlFor=\"receivingAccount\">Transfer To:</label>\r\n                    <select name='receivingAccount' value={data.receivingAccount} onChange={handleChange} id='receivingAccount'>\r\n                        <option value=\"bank\">Bank Account</option>\r\n                        <option value=\"cash\">Cash Account</option>\r\n                        <option value=\"mobileMoney\">Mobile Money Account</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"amountToTransfer\">\r\n                <label htmlFor=\"amount\">Amount to Transfer</label>\r\n                <input type=\"number\" name='amount' value={data.amount} onChange={handleChange} id='amount' />\r\n            </div>\r\n\r\n            <div className=\"submitOptions\">\r\n                <button className=\"btn\" onClick={cancel}>Cancel</button>\r\n                <button className=\"btn\" onClick={handleSubmit}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contra\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Barchart from './Barchart'\r\nimport Loader from './Loader'\r\nimport Invoice from './Invoice'\r\nimport Receipt from './Receipt'\r\nimport MakePayment from './MakePayment'\r\nimport ReceivePayment from './ReceivePayment'\r\nimport PurchaseInvoice from './PurchaseInvoice'\r\nimport PurchaseReceipt from './CashPurchase'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport NewSupplierForm from './NewSupplierForm'\r\nimport './LiquidityPage.css'\r\nimport Contra from './Contra'\r\n\r\nfunction LiquidityPage() {\r\n\r\n    const [fetching, setfetching] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [newInvoice, setNewInvoice] = useState(false)\r\n    const [newReceipt, setNewReceipt] = useState(false)\r\n    const [newMakePayment, setNewMakePayment] = useState(false)\r\n    const [newReceivePayment, setNewReceivePayment] = useState(false)\r\n    const [newPurchaseInvoice, setNewPurchaseInvoice] = useState(false)\r\n    const [newPurchaseReceipt, setNewPurchaseReceipt] = useState(false)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [newSupplier, setNewSupplier] = useState(false)\r\n    const [overview, setOverview] = useState(true)\r\n    const [selected, setSelected] = useState('cash')\r\n    const [interAccount, setInterAccount] = useState(false)\r\n\r\n\r\n    useEffect(async() => {\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        await baseURL.get('/meansOfPayment', {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res =>{\r\n            setfetching(false)\r\n            setData(res.data)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const totalOut = data.filter(item => item.meansOfPayment === selected).filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0)\r\n\r\n    const totalIn = data.filter(item => item.meansOfPayment === selected).filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0)\r\n\r\n    const accountBalance = totalIn - totalOut\r\n\r\n    let janIn = []; let janOut = []\r\n    let febIn = []; let febOut = []\r\n    let marIn = []; let marOut = []\r\n    let aprIn = []; let aprOut = []\r\n    let mayIn = []; let mayOut = []\r\n    let junIn = []; let junOut = []\r\n    let julIn = []; let julOut = []\r\n    let augIn = []; let augOut = []\r\n    let septIn = []; let septOut = []\r\n    let octIn = []; let octOut = []\r\n    let novIn = []; let novOut = []\r\n    let decIn = []; let decOut = []\r\n\r\n    const chart = data.filter(item => item.meansOfPayment === selected)\r\n\r\n    chart.filter(item => item.inOrOut === 'in').map(item => {\r\n        const month = new Date(item.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                janIn.push(item.amount)\r\n                break;\r\n            \r\n            case 1:\r\n                febIn.push(item.amount)\r\n                break;\r\n\r\n            case 2:\r\n                marIn.push(item.amount)\r\n                break;\r\n\r\n            case 3:\r\n                aprIn.push(item.amount)\r\n                break;\r\n\r\n            case 4:\r\n                mayIn.push(item.amount)\r\n                break;\r\n\r\n            case 5:\r\n                junIn.push(item.amount)\r\n                break;\r\n\r\n            case 6:\r\n                julIn.push(item.amount)\r\n                break;\r\n\r\n            case 7:\r\n                augIn.push(item.amount)\r\n                break;\r\n\r\n            case 8:\r\n                septIn.push(item.amount)\r\n                break;\r\n\r\n            case 9:\r\n                octIn.push(item.amount)\r\n                break;\r\n\r\n            case 10:\r\n                novIn.push(item.amount)\r\n                break;\r\n        \r\n            case 11:\r\n                decIn.push(item.amount)\r\n                break;\r\n\r\n            \r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    chart.filter(item => item.inOrOut === 'out').map(item => {\r\n        const month = new Date(item.date).getMonth()\r\n        switch (month) {\r\n            case 0:\r\n                janOut.push(item.amount)\r\n                break;\r\n            \r\n            case 1:\r\n                febOut.push(item.amount)\r\n                break;\r\n\r\n            case 2:\r\n                marOut.push(item.amount)\r\n                break;\r\n\r\n            case 3:\r\n                aprOut.push(item.amount)\r\n                break;\r\n\r\n            case 4:\r\n                mayOut.push(item.amount)\r\n                break;\r\n\r\n            case 5:\r\n                junOut.push(item.amount)\r\n                break;\r\n\r\n            case 6:\r\n                julOut.push(item.amount)\r\n                break;\r\n\r\n            case 7:\r\n                augOut.push(item.amount)\r\n                break;\r\n\r\n            case 8:\r\n                septOut.push(item.amount)\r\n                break;\r\n\r\n            case 9:\r\n                octOut.push(item.amount)\r\n                break;\r\n\r\n            case 10:\r\n                novOut.push(item.amount)\r\n                break;\r\n        \r\n            case 11:\r\n                decOut.push(item.amount)\r\n                break;\r\n\r\n            \r\n            default: return null\r\n                break;\r\n        }\r\n    })\r\n\r\n    janIn = janIn.reduce((a, b) => a + b, 0)\r\n    febIn = febIn.reduce((a, b) => a + b, 0)\r\n    marIn = marIn.reduce((a, b) => a + b, 0)\r\n    aprIn = aprIn.reduce((a, b) => a + b, 0)\r\n    mayIn = mayIn.reduce((a, b) => a + b, 0)\r\n    junIn = junIn.reduce((a, b) => a + b, 0)\r\n    julIn = julIn.reduce((a, b) => a + b, 0)\r\n    augIn = augIn.reduce((a, b) => a + b, 0)\r\n    septIn = septIn.reduce((a, b) => a + b, 0)\r\n    octIn = octIn.reduce((a, b) => a + b, 0)\r\n    novIn = novIn.reduce((a, b) => a + b, 0)\r\n    decIn = decIn.reduce((a, b) => a + b, 0)\r\n\r\n    janOut = janOut.reduce((a, b) => a + b, 0); \r\n    febOut = febOut.reduce((a, b) => a + b, 0); \r\n    marOut = marOut.reduce((a, b) => a + b, 0); \r\n    aprOut = aprOut.reduce((a, b) => a + b, 0); \r\n    mayOut = mayOut.reduce((a, b) => a + b, 0); \r\n    junOut = junOut.reduce((a, b) => a + b, 0); \r\n    julOut = julOut.reduce((a, b) => a + b, 0); \r\n    augOut = augOut.reduce((a, b) => a + b, 0); \r\n    septOut = septOut.reduce((a, b) => a + b, 0); \r\n    octOut = octOut.reduce((a, b) => a + b, 0); \r\n    novOut = novOut.reduce((a, b) => a + b, 0); \r\n    decOut = decOut.reduce((a, b) => a + b, 0); \r\n\r\n    const janBal = janIn - janOut\r\n    const febBal = febIn - febOut\r\n    const marBal = marIn - marOut\r\n    const aprBal = aprIn - aprOut\r\n    const mayBal = mayIn - mayOut\r\n    const junBal = junIn - junOut\r\n    const julBal = julIn - julOut\r\n    const augBal = augIn - augOut\r\n    const septBal = septIn - septOut\r\n    const octBal = octIn - octOut\r\n    const novBal = novIn - novOut\r\n    const decBal = decIn - decOut\r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n    return (\r\n        <div className='liquidityPage Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                    <h1>Treasury</h1>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>\r\n                            New Transaction <i className=\"fas fa-sort-down\"></i>\r\n                        </button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={()=>{setNewReceipt(true)}}>Sales Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setNewReceivePayment(true)}}>Receive Payment</p>\r\n                            <p className=\"option\" onClick={()=>{setNewPurchaseReceipt(true)}}>Puchase Receipt</p>\r\n                            <p className=\"option\" onClick={()=>{setNewMakePayment(true)}}>Make Payment</p>\r\n                            <p className=\"option\" onClick={()=>{setInterAccount(true)}}>Inter Account (Contra)</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </div>\r\n            \r\n            \r\n            <div className=\"liquidityOptions\">\r\n                <p className={selected === 'cash' ? 'selected' : 'option'} onClick={()=>{setSelected('cash')}}>Cash Account</p>\r\n                <p className={selected === 'bank' ? 'selected' : 'option'} onClick={()=>{setSelected('bank')}}>Bank Account</p>\r\n                <p className={selected === 'mobileMoney' ? 'selected' : 'option'} onClick={()=>{setSelected('mobileMoney')}}>Mobile Money Account</p>\r\n            </div>\r\n\r\n            <div className=\"totalInAccount\">\r\n                <div>\r\n                    <p className='accountTotal'>\r\n                        {selected === 'cash' ? 'Total Cash In ' : selected === 'bank' ? 'Total Bank In ' : 'Total Mobile Money In '}\r\n                    </p>\r\n                    <p>\r\n                        {(totalIn).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    </p>\r\n                </div>\r\n                    \r\n                <div>\r\n                    <p className='accountTotal'>\r\n                        {selected === 'cash' ? 'Total Cash Out ' : selected === 'bank' ? 'Total Bank Out ' : 'Total Mobile Money Out '} \r\n                    </p>\r\n                    <p>\r\n                        {(totalOut).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p className='accountTotal'>\r\n                        Balance in Account\r\n                    </p>\r\n                    <p>\r\n                        {(accountBalance).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"filters\">\r\n                <button className={overview ? \"button\" : 'btn'} onClick={()=>{setOverview(true)}}>\r\n                    Overview\r\n                </button>\r\n\r\n                <button className={!overview ? \"button\" : 'btn'} onClick={()=>{setOverview(false)}}>\r\n                    All Transactions\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    overview &&\r\n                    <Barchart\r\n                        labels = {['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']}\r\n\r\n                        data1={\r\n                                [janIn, febIn,marIn, aprIn, mayIn, junIn, julIn, augIn, septIn, octIn, novIn, decIn]\r\n                            }\r\n                        tooltip1={`${selected} in`}\r\n                        data2={\r\n                                [janOut, febOut,marOut, aprOut, mayOut, junOut, julOut, augOut, septOut, octOut, novOut, decOut]\r\n                            }\r\n                        tooltip2={`${selected} out`}\r\n                        data3={\r\n                                [janBal, febBal,marBal, aprBal, mayBal, junBal, julBal, augBal, septBal, octBal, novBal, decBal]\r\n                            }\r\n                        tooltip3={`${selected} balance`}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    !overview &&\r\n                    <div className=\"allTrans allDebtorsContainer\">\r\n                        <table className='allDebtorsTable'>\r\n                            <thead>\r\n                                <tr className='recentItemHead'>\r\n                                    <th className='recentItem'>Date</th>\r\n                                    <th className='recentItem'>Sent to / Received from:</th>\r\n                                    <th className='recentItem'>Description</th>\r\n                                    <th className='recentItem'>Amount</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    data.filter(item => item.meansOfPayment === selected).sort((a, b) => new Date(b.date) - new Date(a.date)).map(item => (\r\n                                    <tr key={item._id} className='recentItemHead'>\r\n                                        <td className='recentItem'>{item.date}</td>\r\n                                        <td className='recentItem'>{item.name}</td>\r\n                                        <td className='recentItem'>{item.reason}</td>\r\n                                        <td className='recentItem'>{(Number(item.amount)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n            {\r\n                newInvoice &&\r\n                <Invoice\r\n                    onClick={()=>{setNewInvoice(false)}}\r\n                />\r\n            }\r\n            {\r\n                newReceipt &&\r\n                <Receipt\r\n                    onClick={()=>{setNewReceipt(false)}}\r\n                />\r\n            }\r\n            {\r\n                newMakePayment&&\r\n                <MakePayment\r\n                    onClick={()=>{setNewMakePayment(false)}}\r\n                />\r\n            }\r\n            {\r\n                newReceivePayment &&\r\n                <ReceivePayment\r\n                    onClick={()=>{setNewReceivePayment(false)}}\r\n                />\r\n            }\r\n            {\r\n                newPurchaseInvoice &&\r\n                <PurchaseInvoice\r\n                    onClick={()=>{setNewPurchaseInvoice(false)}}\r\n                />\r\n            }\r\n            {\r\n                newPurchaseReceipt &&\r\n                <PurchaseReceipt\r\n                    onClick={()=>{setNewPurchaseReceipt(false)}}\r\n                />\r\n            }\r\n            {\r\n                newCustomer &&\r\n                <NewCustomerForm\r\n                    onClick={()=>{setNewCustomer(false)}}\r\n                />\r\n            }\r\n            {\r\n                newSupplier &&\r\n                <NewSupplierForm\r\n                    onClick={()=>{setNewSupplier(false)}}\r\n                />\r\n            }\r\n            {\r\n                interAccount && \r\n                <Contra\r\n                    cancel={()=>{setInterAccount(false)}}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiquidityPage\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport Alert from './Alert';\r\nimport {baseURL} from './axios'\r\nimport './NewFixedAsset.css'\r\n\r\nfunction NewFixedAsset({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const today = new Date().toDateString()\r\n\r\n    const [asset, setAsset] = useState({\r\n        date : today,\r\n        purchaseDate : '',\r\n        ref : '',\r\n        serialNumber : (asset)=>{\r\n            const date = new Date().valueOf();\r\n            const assetInitials = asset.match(/\\b(\\w)/g).join('').toUpperCase()\r\n\r\n            return assetInitials.concat(date.toString())\r\n        },\r\n        assetName : '',\r\n        depRate : '',\r\n        supplier : '',\r\n        residualValue: '',\r\n        cash : '',\r\n        mobileMoney : '',\r\n        bank : '',\r\n        credit : '',\r\n        vat: '',\r\n        netPayable: (cash, credit, mobileMoney, bank, vat)=>{\r\n            const totalTE = Number(cash) + Number(credit) + Number(mobileMoney) + Number(bank)\r\n            const vatAmount = totalTE * Number(vat)/100\r\n            return  totalTE + vatAmount\r\n        }\r\n    })\r\n    \r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n\r\n        setAsset(asset => {\r\n            return {\r\n                ...asset,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n\r\n    const submitData = {\r\n        date : asset.date,\r\n        purchaseDate : asset.purchaseDate === '' ? asset.date : asset.purchaseDate,\r\n        ref : asset.ref,\r\n        serialNumber : asset.assetName === '' ? '' : asset.serialNumber(asset.assetName),\r\n        assetName : asset.assetName,\r\n        depRate : asset.depRate,\r\n        supplier : asset.supplier,\r\n        residualValue : asset.residualValue === '' ? 0 : Number(asset.residualValue),\r\n        cash : asset.cash === '' ? 0 : Number(asset.cash),\r\n        mobileMoney : asset.mobileMoney === '' ? 0 : Number(asset.mobileMoney),\r\n        bank : asset.bank === '' ? 0 : Number(asset.bank),\r\n        credit : asset.credit === '' ? 0 : Number(asset.credit),\r\n        vat : asset.vat === '' ? 0 : Number(asset.vat),\r\n        netPayable : asset.netPayable(asset.cash, asset.credit, asset.mobileMoney, asset.bank, asset.vat)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (asset.assetName === '' || asset.depRate === '' || asset.supplier === '') {\r\n            setAlertMessage('Please fill out fields marked with *')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            if (asset.cash === '' && asset.bank === '' && asset.mobileMoney === '' && asset.credit === '') {\r\n                setAlertMessage('Please fill in at least one payment mehod (cash, bank, mobile money, or credit)')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }else{\r\n                await baseURL.post('/fixedAssets', submitData)\r\n                .then( res=> {\r\n                    onClick()\r\n                    refetch()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            onClick()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='NewFixedAsset' ref={wrapperRef}>\r\n            <div className=\"close\">\r\n                <i className=\"fas fa-times fa-lg\" onClick={onClick}></i>\r\n            </div>\r\n            <div className=\"assetFormContainer\">\r\n                <div className=\"date\">\r\n                    <label htmlFor=\"date\">Date:</label>\r\n                    <input type=\"text\" name=\"date\" id=\"date\" readOnly={true} value={asset.date}/>\r\n                </div>\r\n\r\n                <div className=\"purchaseDate\">\r\n                    <label htmlFor=\"purchaseDate\">Purchase Date:</label>\r\n                    <input type=\"date\" name=\"purchaseDate\" id=\"purchaseDate\" onChange={handleChange} value={asset.purchaseDate}/>\r\n                </div>\r\n\r\n                <div className=\"ref\">\r\n                    <label htmlFor=\"ref\">Reference:</label>\r\n                    <input type=\"text\" name=\"ref\" id=\"ref\" onChange={handleChange} value={asset.ref}/>\r\n                </div>\r\n\r\n                <div className=\"serialNumber\">\r\n                    <label htmlFor=\"serialNumber\">Serial Number:</label>\r\n                    <input type=\"text\" name=\"serialNumber\" id=\"serialNumber\" readOnly={true} value={asset.assetName === '' ? '' : asset.serialNumber(asset.assetName)}/>\r\n                </div>\r\n\r\n                <div className=\"assetName\">\r\n                    <label htmlFor=\"assetName\">Name of Asset*:</label>\r\n                    <input type=\"text\" name=\"assetName\" id=\"assetName\" onChange={handleChange} value={asset.assetName}/>\r\n                </div>\r\n\r\n                <div className=\"depRate\">\r\n                    <label htmlFor=\"depRate\">Depreciation Rate*:</label>\r\n                    <input type=\"number\" name=\"depRate\" id=\"depRate\" onChange={handleChange} value={asset.depRate}/>\r\n                </div>\r\n\r\n                <div className=\"supplier\">\r\n                    <label htmlFor=\"supplier\">Supplier*:</label>\r\n                    <input type=\"text\" name=\"supplier\" id=\"supplier\" onChange={handleChange} value={asset.supplier}/>\r\n                </div>\r\n                <div className=\"residualValue\">\r\n                    <label htmlFor=\"residualValue\">Residual Value:</label>\r\n                    <input type=\"number\" name=\"residualValue\" id=\"residualValue\" onChange={handleChange} value={asset.residualValue}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"payment\">\r\n                <h3>Payment</h3>\r\n                <div className=\"paymentMethods\">\r\n                    <div className=\"cash\">\r\n                        <label htmlFor=\"cash\">Cash:</label>\r\n                        <input type=\"number\" name=\"cash\" id=\"cash\" onChange={handleChange} value={asset.cash}/>\r\n                    </div>\r\n\r\n                    <div className=\"mobileMoney\">\r\n                        <label htmlFor=\"mobileMoney\">Mobile Money:</label>\r\n                        <input type=\"number\" name=\"mobileMoney\" id=\"mobileMoney\" onChange={handleChange} value={asset.mobileMoney}/>\r\n                    </div>\r\n\r\n                    <div className=\"bank\">\r\n                        <label htmlFor=\"bank\">Bank:</label>\r\n                        <input type=\"number\" name=\"bank\" id=\"bank\" onChange={handleChange} value={asset.bank}/>\r\n                    </div>\r\n\r\n                    <div className=\"credit\">\r\n                        <label htmlFor=\"credit\">Credit:</label>\r\n                        <input type=\"number\" name=\"credit\" id=\"credit\" onChange={handleChange} value={asset.credit}/>\r\n                    </div>\r\n\r\n                    <div className=\"vat\">\r\n                        <label htmlFor=\"vat\">VAT(%):</label>\r\n                        <input type=\"number\" name=\"vat\" id=\"vat\" onChange={handleChange} value={asset.vat}/>\r\n                    </div>\r\n\r\n                    <div className=\"credit\">\r\n                        <label htmlFor=\"netPayable\">Net Payable:</label>\r\n                        <input type=\"number\" name=\"netPayable\" id=\"netPayable\" readOnly={true} value={asset.netPayable(asset.cash, asset.credit, asset.mobileMoney, asset.bank, asset.vat)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"assetSubmitButtons\">\r\n                <button className=\"btn\" onClick={onClick}>Cancel</button>\r\n                <button className=\"btn\" onClick={handleSubmit}>Save</button>\r\n            </div>\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewFixedAsset\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport Alert from './Alert'\r\nimport { baseURL } from './axios'\r\nimport {shareHolderFixedAssetTemplate} from './data'\r\nimport './NewShareholder.css'\r\n\r\nfunction NewShareholder({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const wrapperRef = useRef()\r\n    const [height, setHeight] = useState(8);\r\n    const realVal = height > 22 ? \"100%\" : `${height}rem`;\r\n    const [data, setData] = useState(shareHolderFixedAssetTemplate)\r\n    const [shareholderInput, setShareholderInput] = useState({\r\n        date: new Date().toDateString(),\r\n        name: '',\r\n        email : '',\r\n        address : '',\r\n        tel : '',\r\n        serialNumber : (shareholder)=>{\r\n            const date = new Date().valueOf();\r\n            const shareholderInitials = shareholder.match(/\\b(\\w)/g).join('').toUpperCase()\r\n\r\n            return shareholderInitials.concat(date.toString())\r\n        },\r\n        cash: '',\r\n        bank: '',\r\n        mobileMoney:''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setShareholderInput(prevValue =>(\r\n            {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const serialNumber  = (asset)=>{\r\n        const date = new Date().valueOf();\r\n        const assetInitials = asset.match(/\\b(\\w)/g).join('').toUpperCase()\r\n\r\n        return assetInitials.concat(date.toString())\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.assetName !== '' && ele.cost !== '' && ele.depRate !== '').map(item => ({\r\n        ...item,\r\n        serialNumber: serialNumber(item.assetName)\r\n    }))\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n    function handleClickOutside(e){\r\n            const {current : wrap} = wrapperRef;\r\n            if(wrap && !wrap.contains(e.target)){\r\n                onClick()\r\n            }\r\n        }\r\n        const item = elements?.map(element => Number(element.cost )).reduce((a, b) => a + b, 0)\r\n        const totalContribution = item + (shareholderInput.cash === '' ? 0 : Number(shareholderInput.cash)) + (shareholderInput.bank === '' ? 0 : Number(shareholderInput.bank)) + (shareholderInput.mobileMoney === '' ? 0 : Number(shareholderInput.mobileMoney))\r\n\r\n        const submitData = {\r\n            date: shareholderInput.date,\r\n            name: shareholderInput.name,\r\n            email : shareholderInput.email,\r\n            address : shareholderInput.address,\r\n            tel : shareholderInput.tel,\r\n            serialNumber : shareholderInput.name === '' ? '' : shareholderInput.serialNumber(shareholderInput.name),\r\n            cash: shareholderInput.cash === '' ? 0 : Number(shareholderInput.cash),\r\n            bank: shareholderInput.bank === '' ? 0 : Number(shareholderInput.bank),\r\n            mobileMoney: shareholderInput.mobileMoney === '' ? 0 : Number(shareholderInput.mobileMoney),\r\n            totalContribution: totalContribution,\r\n            fixedAssets: elements\r\n        }\r\n\r\n        const handleSubmit = async()=>{\r\n            if (shareholderInput.name === '') {\r\n                setAlertMessage(\"Please add shareholder's name\")\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }else{\r\n                if (shareholderInput.cash === '' && shareholderInput.bank === '' && shareholderInput.mobileMoney === '' && elements.length === 0 ) {\r\n                    setAlertMessage('please input at least one contribution means')\r\n                    setAlert(true)\r\n                    setTimeout(()=>{\r\n                        setAlert(false)\r\n                    }, 3000)\r\n                }else{\r\n                    baseURL.post('/shareholders', submitData)\r\n                    .then(res =>{\r\n                        onClick()\r\n                        refetch()\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"NewShareholder\" ref={wrapperRef}>\r\n            <h3>New Shareholder</h3>\r\n            <div className=\"detail\">\r\n                <div className=\"date\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input type=\"text\" name='date' value={shareholderInput.date} readOnly={true} />\r\n                </div>\r\n                <div className=\"name\">\r\n                    <label htmlFor=\"name\">Shareholder Name</label>\r\n                    <input type=\"text\" name='name' value={shareholderInput.name} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"serialNumber\">\r\n                    <label htmlFor=\"serialNumber\">Serial Number</label>\r\n                    <input type=\"text\" name='serialNumber' value={shareholderInput.name === '' ? '' : shareholderInput.serialNumber(shareholderInput.name)} readOnly={true} />\r\n                </div>\r\n            </div>\r\n            <div className=\"detail\">\r\n                <div className=\"email\">\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <input type=\"text\" name='email' value={shareholderInput.email} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"address\">\r\n                    <label htmlFor=\"Address\">Address</label>\r\n                    <input type=\"text\" name='address' value={shareholderInput.address} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"tel\">\r\n                    <label htmlFor=\"tel\">Telephone</label>\r\n                    <input type=\"number\" name='tel' value={shareholderInput.tel} onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"contribution\">\r\n                <h3>Contribution by:</h3>\r\n                <div className=\"cashContributions\">\r\n                    <div className=\"mobileMoney\">\r\n                        <label htmlFor=\"mobileMoney\">Mobile Money</label>\r\n                        <input type=\"number\" name='mobileMoney' value={shareholderInput.mobileMoney} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"cash\">\r\n                        <label htmlFor=\"cash\">Cash</label>\r\n                        <input type=\"number\" name='cash' value={shareholderInput.cash} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"bank\">\r\n                        <label htmlFor=\"bank\">Bank</label>\r\n                        <input type=\"number\" name='bank' value={shareholderInput.bank} onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <h3>Fixed Asset Contributions</h3>\r\n                <div className=\"fixedAssetContributions\" style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}>\r\n                    <table>\r\n                    <thead>\r\n                        <tr className='invoiceListHead'>\r\n                            <th>Asset Name</th>\r\n                            <th>Cost</th>\r\n                            <th>Residual Value</th>\r\n                            <th>Dep Rate (%)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((holder,index) =>(\r\n                                <tr className='invoiceLisBody' key={index}>\r\n                                    <td>\r\n                                        <input type=\"text\" name='assetName' value={holder.assetName} onChange={updateFieldChanged(\"assetName\", index)} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"number\" name=\"cost\" value={holder.cost} onChange={updateFieldChanged('cost', index)}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input \r\n                                        type='number' name=\"residualValue\" value={holder.residualValue} onChange={updateFieldChanged(\"residualValue\", index)}>\r\n                                        </input>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input type='number' name=\"depRate\" value={holder.depRate} onChange={updateFieldChanged(\"depRate\", index)}>\r\n                                        </input>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"expButtons\">\r\n                    <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 4;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                setAlert(true)\r\n                                setAlertMessage('Cannot add more rows.')\r\n                                setTimeout(()=>{\r\n                                    setAlert(false)\r\n                                    setAlertMessage('')\r\n                                }, 3000)\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n                        <div className=\"saveOptions\">\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={handleSubmit}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                </div>\r\n                <Alert\r\n                    message={alertMessage}\r\n                    alert={alert}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewShareholder\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport Alert from './Alert';\r\nimport { baseURL } from './axios';\r\nimport './NewLongtermLiability.css'\r\n\r\nfunction NewLongtermLiability({onClick, refetch}) {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const wrapperRef = useRef(null)\r\n    const [liability, setLiability] = useState({\r\n        date: new Date().toDateString(),\r\n        name: '',\r\n        liabilityName: '',\r\n        serialNumber: (liability)=>{\r\n            const date = new Date().valueOf();\r\n            const liabilityInitials = liability.match(/\\b(\\w)/g).join('').toUpperCase()\r\n\r\n            return liabilityInitials.concat(date.toString())\r\n        },\r\n        amount: '',\r\n        duration: '',\r\n        interestRate: '',\r\n        receivedBy: 'cash'\r\n    })\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target;\r\n\r\n        setLiability(prevValues => (\r\n            {\r\n                ...prevValues,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const submitData = {\r\n        date: liability.date,\r\n        name: liability.name,\r\n        liabilityName : liability.liabilityName,\r\n        serialNumber: liability.liabilityName !== '' ? liability.serialNumber(liability.liabilityName) : '',\r\n        amount: liability.amount !== '' ? Number(liability.amount) : 0,\r\n        duration: liability.duration !== '' ? Number(liability.duration) : 0,\r\n        interestRate: liability.interestRate !== '' ? Number(liability.interestRate) : 0,\r\n        receivedBy: liability.receivedBy\r\n    }\r\n\r\n\r\n    const handleSubmit = async()=>{\r\n        if (liability.name === '' || liability.amount === '' || liability.duration === '' || liability.interestRate === '') {\r\n            setAlertMessage('please fill all required fields')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            await baseURL.post('/longtermLiabilities', submitData)\r\n            .then(res =>{\r\n                onClick()\r\n                refetch()\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            onClick()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='NewLiability' ref={wrapperRef}>\r\n        <h3>New Long Term Liability</h3>\r\n            <div className=\"liabilityFormContainer\">\r\n                <div className=\"date optionItem\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input type=\"text\" name=\"date\" value={liability.date} readOnly={true} />\r\n                </div>\r\n                <div className=\"individual\">\r\n                    <label htmlFor=\"name\">From:</label>\r\n                    <input type=\"text\" name=\"name\" value={liability.name} onChange={handleChange} placeholder='Institution or individual' />\r\n                </div>\r\n                <div className=\"name optionItem\">\r\n                    <label htmlFor=\"liabilityName\">Name</label>\r\n                    <input type=\"text\" name=\"liabilityName\" value={liability.liabilityName} onChange={handleChange} placeholder='Liability Name'/>\r\n                </div>\r\n                <div className=\"serialNumber optionItem\">\r\n                    <label htmlFor=\"serialNumber\">Serial Number</label>\r\n                    <input type=\"text\" name=\"serialNumber\" value={liability.liabilityName !== '' ? liability.serialNumber(liability.liabilityName) : ''} readOnly={true} />\r\n                </div>\r\n                <div className=\"duration optionItem\">\r\n                    <label htmlFor=\"duration\">Duration (years)</label>\r\n                    <input type=\"number\" name=\"duration\" value={liability.duration} onChange={handleChange} placeholder='Duration in years' />\r\n                </div>\r\n                <div className=\"interestRate optionItem\">\r\n                    <label htmlFor=\"interestRate\">Interest Rate(%)</label>\r\n                    <input type=\"number\" name=\"interestRate\" value={liability.interestRate} onChange={handleChange} placeholder='Yearly interest rate' />\r\n                </div>\r\n                <div className=\"amounts optionItem\">\r\n                    <label htmlFor=\"amount\">Amount</label>\r\n                    <input type=\"number\" name=\"amount\" value={liability.amount} onChange={handleChange} placeholder='Liability value' />\r\n                </div>\r\n                <div className=\"receivedBy optionItem\">\r\n                    <label htmlFor=\"receivedBy\">Received By</label>\r\n                    <select type=\"text\" name=\"receivedBy\" value={liability.receivedBy} onChange={handleChange} >\r\n                        <option value=\"cash\">Cash</option>\r\n                        <option value=\"bank\">Bank</option>\r\n                        <option value=\"mobileMoney\">Mobile Money</option>\r\n                    </select>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"liabilityButtons\">\r\n                <button className=\"btn\" onClick={onClick}>Cancel</button>\r\n                <button className=\"btn\" onClick={handleSubmit}>Save</button>\r\n            </div>\r\n            <Alert\r\n                message={alertMessage}\r\n                alert={alert}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewLongtermLiability\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport {Link, useHistory, useLocation} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport NewFixedAsset from './NewFixedAsset'\r\nimport './CapitalAndFixedAssets.css'\r\nimport Loader from './Loader'\r\nimport NewShareholder from './NewShareholder'\r\nimport NewLongtermLiability from './NewLongtermLiability'\r\nimport queryString from 'query-string'\r\nimport Alert from './Alert'\r\n\r\nfunction CapitalAndFixedAssets() {\r\n    const [newAsset, setNewAsset] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [newLongtermLiability, setNewLongtermLiability] = useState(false)\r\n    const [transactionOptions, setTransactionOptions] = useState(false)\r\n    const [newShareholder, setNewShareholder] = useState(false)\r\n    const [viewAssets, setViewAssets] = useState(true)\r\n    const [viewLiab, setViewLiab] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [assets, setAssets] = useState([])\r\n    const [shareholders, setShareholders] = useState([])\r\n    const [liabilities, setLiabilities] = useState([])\r\n    const history = useHistory()\r\n    const {search} = useLocation()\r\n    const query = queryString.parse(search)\r\n\r\n    const fetchAssets = async(unMounted, source)=>{\r\n        const request1 = baseURL.get('/fixedAssets')\r\n        const request2 = baseURL.get('/shareholders')\r\n        const request3 = baseURL.get('/longtermLiabilities')\r\n\r\n            await axios.all([request1, request2, request3], {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                const [result1, result2, result3] = res\r\n                setAssets(result1.data)\r\n                setShareholders(result2.data)\r\n                setLiabilities(result3.data)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchAssets(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n    const thisMonth = today.getMonth()\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',]\r\n\r\n\r\n    let depInfos = []\r\n    assets.forEach(asset => {\r\n        const element = asset.depInfos\r\n\r\n        element.forEach(item => {\r\n            if (item.year === thisYear) {\r\n                depInfos.push(item)\r\n            }\r\n        })\r\n        \r\n    })\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setTransactionOptions(false);\r\n        }\r\n    }\r\n\r\n    const serialNumbers = assets?.map(item => item.asset.serialNumber)\r\n\r\n    const wrapper_Ref = useRef(null)\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handle_Click_Outside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handle_Click_Outside);\r\n            }\r\n        }, [])\r\n\r\n        function handle_Click_Outside(e){\r\n                const {current : wrap} = wrapper_Ref;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        const handleRedeem = ()=>{\r\n            setAlertMessage('Function Coming Soon!!!')\r\n            setAlert(true)\r\n            setTimeout(() => {\r\n                setAlert(false)\r\n                setAlertMessage('')\r\n            }, 2000);\r\n        }\r\n\r\n        const handleUpdate = ()=>{\r\n            setAlertMessage('Function Coming Soon!!!')\r\n            setAlert(true)\r\n            setTimeout(() => {\r\n                setAlert(false)\r\n                setAlertMessage('')\r\n            }, 2000);\r\n        }\r\n        const handleRedeemLiability = ()=>{\r\n            setAlertMessage('Function Coming Soon!!!')\r\n            setAlert(true)\r\n            setTimeout(() => {\r\n                setAlert(false)\r\n                setAlertMessage('')\r\n            }, 2000);\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                    <h1>Fixed Assets, Capital & Longterm Liabilities</h1>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapper_Ref}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>\r\n                            New Transaction <i className=\"fas fa-sort-down\"></i>\r\n                        </button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={()=>{setNewAsset(true)}}>Fixed Asset</p>\r\n                            <p className=\"option\" onClick={()=>{setNewShareholder(true)}}>Shareholder</p>\r\n                            <p className=\"option\" onClick={()=>{setNewLongtermLiability(true)}}>Longterm Liability</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </div>\r\n\r\n            <div className=\"liquidityOptions\">\r\n                <p className={viewAssets ? 'btn selected' : 'option'} onClick={()=>{\r\n                    setViewAssets(true)\r\n                    history.push('/capital-and-fixed-assets')\r\n                }}>Assets Register</p>\r\n                <p className={ !viewAssets ? 'btn selected' : 'option'} onClick={()=>{\r\n                    setViewAssets(false)\r\n                    history.push('/capital-and-fixed-assets?eqt=true')\r\n                }}>Equity and Long Term Liabilities</p>\r\n            </div>\r\n\r\n            <div className=\"assetsRegisterContainer\">\r\n                {\r\n                    search === '' ?\r\n                    <div className=\"assetsRegister\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='asset'> Date</th>\r\n                                    <th className='asset'>Purchase Date</th>\r\n                                    <th className='asset'>Asset Name</th>\r\n                                    <th className='asset'>Ref Number</th>\r\n                                    <th className='asset'>Serial Number</th>\r\n                                    <th className='asset'>Original Value</th>\r\n                                    <th className='asset'>Residual Value</th>\r\n                                    <th className='asset'>Dep Rate</th>\r\n                                    <th className='asset'>Life Span (Years)</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    assets.map(asset => (\r\n                                        <tr key={asset._id} className='assetDetailParent' onClick={()=>{history.push(`/assets/${asset.asset.serialNumber}`)}}>\r\n                                            <td className='asset'> {new Date(asset.asset.date).toLocaleDateString()}</td>\r\n                                            <td className='asset'>{new Date(asset.asset.purchaseDate).toLocaleDateString()}</td>\r\n                                            <td className='asset'>{asset.asset.assetName.slice(0, 10)}...</td>\r\n                                            <td className='asset'>{asset.asset.ref.slice(0, 10)}...</td>\r\n                                            <td className='asset'><Link className='assetLink' to={`/assets/${asset.asset.serialNumber}`}>{asset.asset.serialNumber.slice(0, 10)}...</Link></td>\r\n                                            <td className='asset'>{((asset.asset.cost).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td className='asset'>{(Number(asset.asset.residualValue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td className='asset'>{asset.asset.depRate}</td>\r\n                                            <td className='asset'>{(100 / asset.asset.depRate).toFixed(1)}</td>\r\n                                        </tr>\r\n                                        \r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='asset'>Dep of Month <small>{months[thisMonth]}</small> </th>\r\n                                    <th className='asset'>Dep of Year <small>{thisYear}</small></th>\r\n                                    <th className='asset'>Previous Dep <small>{thisYear - 1}</small></th>\r\n                                    <th className='asset'>Acc Dep <small>{`${months[11]} ${thisYear}`}</small></th>\r\n                                    <th className='asset'>Book Value <small>{`${months[11]} ${thisYear}`}</small></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    depInfos.map((asset, i) => (\r\n                                        <tr className='assetDetailParent' onClick={()=>{history.push(`/assets/${serialNumbers[i]}`)}}>\r\n                                            <td className='asset'>{((asset.monthlyDep).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td className='asset'>{((asset.endOfYearDep).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td className='asset'>{((asset.previousAccDep).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td className='asset'>{((asset.accDep).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                            <td className='asset'>{((asset.nbv).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div> : \r\n\r\n                    <div className=\"shareholdersList\">\r\n                    <div className=\"buttonContainer\">\r\n                        <button className={!viewLiab ? 'button' : \"btn\"} onClick={()=>{setViewLiab(false)}}>\r\n                            View Shareholders List\r\n                        </button>\r\n                        <button className={!viewLiab ? 'btn' : \"button\"} onClick={()=>{setViewLiab(true)}}>\r\n                            View Liabilities List\r\n                        </button>\r\n                    </div>\r\n                    {\r\n                        !viewLiab &&\r\n                        <div className=\"shareholders allDebtorsContainer\">\r\n                            <h3>Shareholders List</h3>\r\n                            <table className='allDebtorsTable'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='holderDetail'>Shareholder Name</th>\r\n                                        <th className='holderDetail'>Address</th>\r\n                                        <th className='holderDetail'>Email</th>\r\n                                        <th className='holderDetail'>Telephone</th>\r\n                                        <th className='holderDetail'>Identification Number</th>\r\n                                        <th className='holderDetail'>Total Contribution</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        shareholders.map(shareholder => (\r\n                                            <tr className='shareholder invoiceDetail'>\r\n                                                <td className='holderDetail' onClick={()=>{history.push(`/shareholders/${shareholder.serialNumber}`)}}>{shareholder.name}</td>\r\n                                                <td className='holderDetail' onClick={()=>{history.push(`/shareholders/${shareholder.serialNumber}`)}}>{shareholder.address}</td>\r\n                                                <td className='holderDetail' onClick={()=>{history.push(`/shareholders/${shareholder.serialNumber}`)}}><a href={`mailto:${shareholder.email}`}>{shareholder.email}</a></td>\r\n                                                <td className='holderDetail' onClick={()=>{history.push(`/shareholders/${shareholder.serialNumber}`)}}><a href={`tel:${shareholder.tel}`}>{shareholder.tel}</a></td>\r\n                                                <td className='holderDetail' onClick={()=>{history.push(`/shareholders/${shareholder.serialNumber}`)}}> {shareholder.serialNumber}</td>\r\n                                                <td className='holderDetail' onClick={()=>{history.push(`/shareholders/${shareholder.serialNumber}`)}}>{shareholder.totalContribution}</td>\r\n                                                <td className='holderDetail updateHolder'>\r\n                                                    <small onClick={handleUpdate}>Update</small>\r\n                                                    <small onClick={handleRedeem}>Redeem</small>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        viewLiab &&\r\n                        <div className=\"shareholders\">\r\n                            <h3>Liabilities List</h3>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='holderDetail'>Date</th>\r\n                                        <th className='holderDetail'>Libility Name</th>\r\n                                        <th className='holderDetail'>Individual or Institution</th>\r\n                                        <th className='holderDetail'>Identification Number</th>\r\n                                        <th className='holderDetail'>Deposited to:</th>\r\n                                        <th className='holderDetail'>Interest Rate</th>\r\n                                        <th className='holderDetail'>Duration</th>\r\n                                        <th className='holderDetail'>Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        liabilities.map(liability => (\r\n                                            <tr className='liability shareholder'>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{new Date(liability.date).toLocaleDateString()}</td>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.liabilityName}</td>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.name}</td>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.serialNumber}</td>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.receivedBy}</td>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.interestRate}</td>\r\n                                                \r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.duration}</td>\r\n                                                <td className='holderDetail' onClick={()=>{\r\n                                                    history.push(`/liabilities/${liability.serialNumber}`)\r\n                                                }}>{liability.amount}</td>\r\n                                                <td className='holderDetail updateHolder'>\r\n                                                    <small onClick={handleRedeemLiability}>Redeem</small>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    }\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                newAsset &&\r\n                <NewFixedAsset\r\n                    onClick={()=>{setNewAsset(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Fixed Asset Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Fixed Asset Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                newShareholder &&\r\n                <NewShareholder\r\n                    onClick={()=>{setNewShareholder(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Shareholder Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Shareholder Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n            {\r\n                newLongtermLiability &&\r\n                <NewLongtermLiability\r\n                    onClick={()=>{setNewLongtermLiability(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Liability Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Liability Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CapitalAndFixedAssets\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport './FixedAsset.css'\r\nimport NewFixedAsset from './NewFixedAsset'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction FixedAsset() {\r\n    const [alert, setAlert] =useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [newAsset, setNewAsset] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const {serialNumber} = useParams()\r\n    const [assetInfos, setAssetInfos] = useState([])\r\n\r\n    const fetchAssets = async(unMounted, source)=>{\r\n            await baseURL.get(`/fixedAssets/${serialNumber}`, {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                setAssetInfos(res.data)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchAssets(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n\r\n    let depInfos = []\r\n    assetInfos.forEach(asset => {\r\n        const element = asset.depInfos\r\n\r\n        element.forEach(item => {\r\n            depInfos.push(item)\r\n        })\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className='FixedAsset Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                <h1>Asset #{serialNumber}</h1>\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewAsset(true)}}>New Asset</button>\r\n            </div>\r\n                {\r\n                    assetInfos.map(asset => (\r\n                        <div className=\"assetInfos\">\r\n                            <div className=\"leftCorner\">\r\n                                <p><b>Purchase Date:</b> <span>{asset.asset.purchaseDate}</span></p>\r\n                                <p><b>Asset Name:</b> <span>{asset.asset.assetName}</span></p>\r\n                                <p><b>Ref Number:</b> <span>{asset.asset.ref}</span></p>\r\n                                <p><b>Serial Number:</b> <span>{asset.asset.serialNumber}</span></p>\r\n                            </div>\r\n\r\n                            <div className=\"rightCorner\">\r\n                                <p><b>Dep Rate:</b> <span>{(asset.asset.depRate).toFixed(2)}%</span></p>\r\n                                <p><b>Life Span:</b> <span>{((100/(asset.asset.depRate)).toFixed(1)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} year(s)</span></p>\r\n                                <p><b>Original Value:</b> <span>{(Number(asset.asset.cost)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                                <p><b>Residual Value:</b> <span>{(Number(asset.asset.residualValue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n                <div className=\"depSchedule\">\r\n                    <h3>Depreciation Schedule</h3>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='assetDetail'>Years</th>\r\n                                <th className='assetDetail'>Dep Of Year</th>\r\n                                <th className='assetDetail'>Acc Dep <small>(Prev Year)</small></th>\r\n                                <th className='assetDetail'>Acc Dep <small>(Current Year)</small></th>\r\n                                <th className='assetDetail'>Book Value <small>(Current Year)</small></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                depInfos.map(item => (\r\n                                    <tr className={item.year === thisYear ? 'assetDetailParentSelected' : 'assetDetailParent'}>\r\n                                        <td className='assetDetail'>{item.year}</td>\r\n                                        <td className='assetDetail'>{(item.endOfYearDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='assetDetail'>{(item.previousAccDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='assetDetail'>{(item.accDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='assetDetail'>{(item.nbv.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n\r\n            {\r\n                newAsset &&\r\n                <NewFixedAsset\r\n                    onClick={()=>{setNewAsset(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Fixed Asset Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FixedAsset\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport './Shareholder.css'\r\nimport NewShareholder from './NewShareholder'\r\nimport Alert from './Alert'\r\nfunction Shareholder() {\r\n    const [fetching, setFetching] = useState(true)\r\n    const [newShareholder, setNewShareholder] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const {serialNumber} = useParams()\r\n    const [alert, setAlert] =useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const fetchAssets = async(unMounted, source)=>{\r\n            await baseURL.get(`/shareholders/${serialNumber}`, {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                setData(res.data)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchAssets(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const fixedAssets = []\r\n    \r\n    data.forEach(item => {\r\n        const elements = item.fixedAssets\r\n\r\n        elements.forEach(item => {\r\n            fixedAssets.push(item)\r\n        });\r\n    })\r\n\r\n    return (\r\n        <div className='Shareholder Invoices'>\r\n            <div className=\"invoicesHeading\">\r\n                    <h1>Shareholder #{serialNumber}</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewShareholder(true)}}>New Shareholder</button>\r\n            </div>\r\n            {\r\n                data.map(item => (\r\n                    <div className=\"shareholderDetail profileDetails\" key={item._id}>\r\n                        <div className=\"personalDetail leftDetails\">\r\n                            <p><b><span>Date of Contribution:</span></b>{item.date}</p>\r\n                            <p><b><span>Identification Number:</span></b>{item.serialNumber}</p>\r\n                            <p><b><span>Shareholder Name:</span></b>{item.name}</p>\r\n                            <p><b><span>Address:</span></b>{item.address}</p>\r\n                            <p><b><span>Email:</span></b>{item.email}</p>\r\n                            <p><b><span>Contact(tel):</span></b>{item.tel}</p>\r\n                        </div>\r\n                        <div className=\"accountInfos rightDetails\">\r\n                            <p><b><span>Total Contribution:</span></b>{(item.totalContribution).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            <p><b><span>Total Cash Contribution:</span></b>{(item.cash).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            <p><b><span>Total Bank Contribution:</span></b>{(item.bank).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            <p><b><span>Total Mobile Money Contribution:</span></b>{(item.mobileMoney).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                            <p><b><span>Total Fixed Asset Contribution:</span></b>{(item.fixedAssets.map(item => item.cost).reduce((a, b) => a + b, 0)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n            <div className=\"fixedAssetsDetails depSchedule\">\r\n                {\r\n                    !fetching &&\r\n                    <h3>Fixed asssets Details</h3>\r\n                }\r\n                <table>\r\n                    {\r\n                        !fetching &&\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='assetDetail'>Asset Name</th>\r\n                                <th className='assetDetail'>Serial Number</th>\r\n                                <th className='assetDetail'>Cost</th>\r\n                                <th className='assetDetail'>Residual Value</th>\r\n                                <th className='assetDetail'>Dep Rate (%)</th>\r\n                                <th className='assetDetail'>Lifespan(Years)</th>\r\n                            </tr>\r\n                        </thead>\r\n                    }\r\n                    <tbody>\r\n                        {\r\n                            fixedAssets.map(asset => (\r\n                                <tr key={asset._id}>\r\n                                    <td className='assetDetail'><Link to={`/assets/${asset.serialNumber}`}>{asset.assetName}</Link></td>\r\n                                    <td className='assetDetail'><Link to={`/assets/${asset.serialNumber}`}>{asset.serialNumber}</Link></td>\r\n                                    <td className='assetDetail'>{(asset.cost)?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    <td className='assetDetail'>{(asset.residualValue)?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") || 0}</td>\r\n                                    <td className='assetDetail'>{asset.depRate}</td>\r\n                                    <td className='assetDetail'>{(100 / asset.depRate).toFixed(2)}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {\r\n                newShareholder &&\r\n                <NewShareholder\r\n                    onClick={()=>{setNewShareholder(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Sahreholder Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shareholder\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport './Liability.css'\r\nimport NewLongtermLiability from './NewLongtermLiability'\r\nimport Alert from './Alert'\r\n\r\nfunction Liability() {\r\n    const [fetching, setfetching] = useState(true)\r\n    const [data, setData] = useState([])\r\n    const [newLiability, setNewLiability] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const {serialNumber} = useParams()\r\n\r\n    const fetchAssets = async(unMounted, source)=>{\r\n            await baseURL.get(`/longtermLiability/${serialNumber}`, {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                setData(res.data)\r\n                setfetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchAssets(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n    const thisMonth = today.getMonth()\r\n    const months = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\" ];\r\n\r\n    let amortizationInfos = []\r\n\r\n    data.amortizationData?.forEach(item => {\r\n        const element = item.data;\r\n        amortizationInfos = element\r\n\r\n    })\r\n\r\n    const ov = data.liabilityDetail?.map(item => item.amount).reduce((a, b) => a + b, 0)\r\n\r\n    const balanceAtEndofPeriod = amortizationInfos.filter(item => item.month === months[thisMonth] && item.year === thisYear).map(item => item.balanceAtEnd).reduce((a, b) => a + b, 0);\r\n\r\n\r\n    return (\r\n        <div className='Liability Invoices'>\r\n        <div className=\"invoicesHeading\">\r\n                    <h1>Liability #{serialNumber}</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewLiability(true)}}>New Shareholder</button>\r\n            </div>\r\n            <div className=\"profilesDetails\">\r\n                {\r\n                    data.liabilityDetail?.map(element => (\r\n                        <div className=\"profileDetails\" key={element._id}>\r\n                            <div className=\"leftDetails\">\r\n                                <p><b>Identification Number:</b> <span>{element.serialNumber}</span></p>\r\n                                <p><b>Source:</b> <span>{element.name}</span></p>\r\n                                <p><b>Liability Name:</b> <span>{element.liabilityName}</span></p>\r\n                                <p><b>Value:</b> <span>{(element.amount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                                <p><b>Duration(Years):</b> <span>{element.duration}</span></p>\r\n                            </div>\r\n                            <div className=\"rightDetails\">\r\n                                <p><b>Duration(Months):</b> <span>{element.duration * 12}</span></p>\r\n                                <p><b>Interest Rate:</b> <span>{element.interestRate}</span>%</p>\r\n                                <p><b>Yearly Interest <small>(Interest after every 12months): </small></b><span>{((element.amount * element.interestRate/100).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                                <p><b>Monthly Interest:</b> <span>{(((element.amount * element.interestRate)/(100 * 12)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                                <p><b>Balance as date:</b> <span>{((balanceAtEndofPeriod).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n                <div className='amortizationTable'>\r\n                    {\r\n                        !fetching &&\r\n                        <h3>Repayment Schedule</h3>\r\n                    }\r\n                    <table>\r\n                    {\r\n                        !fetching &&\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='amortization'>Period</th>\r\n                                <th className='amortization'>Debt At Start</th>\r\n                                <th className='amortization'>Interest</th>\r\n                                <th className='amortization'>Constant Amortization</th>\r\n                                <th className='amortization'>Annuity</th>\r\n                                <th className='amortization'>Balance Owing At End</th>\r\n                            </tr>\r\n                        </thead>\r\n                    }\r\n                        <tbody>\r\n                            {\r\n                                amortizationInfos.map((item, index) => (\r\n                                    <tr className={months[thisMonth] == item.month && thisYear === item.year ? 'selected' : 'notSelected'} key={item._id}>\r\n                                        <td className='amortization'>{`${item.month} ${item.year}`}</td>\r\n                                        <td className='amortization'>{(ov - (item.constantMonthlyAmortization * index)).toFixed(2)}</td>\r\n                                        <td className='amortization'>{item.interest}</td>\r\n                                        <td className='amortization'>{item.constantMonthlyAmortization}</td>\r\n                                        <td className='amortization'>{item.annuity}</td>\r\n                                        <td className='amortization'>{item.balanceAtEnd}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {\r\n                fetching &&\r\n                <Loader />\r\n            }\r\n            {\r\n                newLiability &&\r\n                <NewLongtermLiability\r\n                    onClick={()=>{\r\n                        setNewLiability(false)\r\n                    }}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Liability Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(() => {\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        }, 2000);\r\n                    }}\r\n                />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Liability\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport './Reports.css'\r\n\r\nfunction Reports() {\r\n    const [fetching, setFetching] = useState(true)\r\n    const [incomeStatement, setIncomeStatement] = useState(true)\r\n    const [data, setData] = useState([])\r\n\r\n    const fetchData = async(unMounted, source)=>{\r\n                await baseURL.get('/', {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                setData(res.data)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchData(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const sales = data.sales?.filter(item => item.saleType !== 'sales returns').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const salesReturns = data.sales?.filter(item => item.saleType === 'sales returns').map(item => item.amount).reduce((a, b) => Number(a) + Number(b), 0).toFixed(2) || 0\r\n    const purchases = data.purchases?.filter(item => item.purchaseType !== 'purchase returns').map(item => item.amount).reduce((a, b) => a + b, 0) || 0\r\n    const purchaseReturns = data.purchases?.filter(item => item.purchaseType === 'purchase returns').map(item => item.netPayable).reduce((a, b) => a + b, 0) || 0\r\n    const purchaseExpenses = data.purchaseExpenses?.map(item => item.value).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const inventoryEnteries = (data.inventory?.filter(item => item.exitOrEntry === 'entry').map(item => item.amount).reduce((a, b) => a + b, 0)) || 0\r\n    const inventoryExits = data.inventory?.filter(item => item.exitOrEntry === 'exit').map(item => item.amount).reduce((a, b) => a + b, 0) || 0\r\n    const closingStock = inventoryEnteries - inventoryExits || 0\r\n    const costOfSales = purchases + purchaseExpenses - purchaseReturns - closingStock || 0\r\n    const netSales = sales - salesReturns || 0\r\n\r\n    const discountsReceived = data.discounts?.filter(item => item.typeOfDiscount === 'received')\r\n    let rebatesReceived = []\r\n    let cashDiscountsReceived = []\r\n    let tradeDiscountsReceived = []\r\n\r\n    discountsReceived?.forEach(element => {\r\n        if (element.tradeDiscount !== 0 || element.tradeDiscount !== '0.00') {\r\n            tradeDiscountsReceived.push(element.tradeDiscount)\r\n        }\r\n\r\n        if (element.cashDiscount !== 0 || element.cashDiscount !== '0.00') {\r\n            cashDiscountsReceived.push(element.cashDiscount)\r\n        }\r\n\r\n        if (element.rebate !== 0 || element.rebate !== '0.00') {\r\n            rebatesReceived.push(element.rebate)\r\n        }\r\n    })\r\n\r\n    const totalDiscountsAllowed = data.discounts?.filter(item => item.typeOfDiscount === 'allowed').map(item => (item.rebate + item.cashDiscount + item.tradeDiscount)).reduce((acc, item) => acc + item, 0)\r\n\r\n\r\n    const totalOtherIncome = data.otherIncome?.map(item => item.value).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const totalDiscountsReceived = discountsReceived?.map(item => Number(item.rebate) + Number(item.cashDiscount) + Number(item.tradeDiscount)).reduce((a, b) => a + b, 0) || 0\r\n\r\n\r\n\r\n    const expenses = data.expenses\r\n    const totalExp = (data.expenses?.map(exp => exp.amount).reduce((a, b) => a + b, 0)) + totalDiscountsAllowed || 0\r\n\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n    const fixedAssetsDep = data.fixedAssets\r\n\r\n    let depInfos = []\r\n    fixedAssetsDep?.forEach(asset => {\r\n        const element = asset.depInfos\r\n\r\n        element.forEach(item => {\r\n            item.assetName = asset.asset.assetName\r\n            item.cost = asset.asset.cost\r\n            if (item.year === thisYear) {\r\n                depInfos.push(item)\r\n            }\r\n        })\r\n    })\r\n\r\n    \r\n\r\n    const totalFixedAssetCost = (depInfos.map(item => item.cost).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2) || 0\r\n    const totalNBV = (depInfos.map(item => item.nbv).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2) || 0\r\n\r\n    const totalDep = (depInfos.map(item => item.endOfYearDep).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2) || 0\r\n    const grossProfit = netSales - costOfSales || 0\r\n\r\n    const netResult = grossProfit + totalOtherIncome + totalDiscountsReceived - totalExp - totalDep || 0\r\n    const ebdit = grossProfit + totalOtherIncome + totalDiscountsReceived - totalExp\r\nconsole.log(depInfos);\r\n    const totalDebtors = data?.debtors?.map(item => item.balanceDue).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const totalCreditors = data?.suppliers?.map(item => item.balanceDue).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const cashIn = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'cash').filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const cashOut = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'cash').filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const cash = Number(cashIn) - Number(cashOut)\r\n\r\n    const bankIn = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'bank').filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const bankOut = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'bank').filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const bank = Number(bankIn) - Number(bankOut)\r\n\r\n    const mobileMoneyIn = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'mobileMoney').filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const mobileMoneyOut = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'mobileMoney').filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const mobileMoney = Number(mobileMoneyIn) - Number(mobileMoneyOut)\r\n\r\n    const totalCapital = data?.capital?.map(item => item.totalContribution).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const totalLongtermLiab = data?.longtermLiabilities?.map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const longtermLiabilities = data?.longtermLiabilities\r\n\r\n    const vatInvoiced = data.vat?.filter(item => item.vatType === 'invoiced').map(item => item.value).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const vatRecoverable = data.vat?.filter(item => item.vatType === 'recoverable').map(item => item.value).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const netVat = Number(vatInvoiced) - Number(vatRecoverable)\r\n\r\n\r\n    return (\r\n        <div className='Reports'>\r\n        {\r\n            !fetching &&\r\n            <>\r\n            <div className=\"salesTop\">\r\n                {/* <div className='salesOptionsLeft'>\r\n                    <Link to='/' className='button'>Home</Link>\r\n                </div> */}\r\n                \r\n\r\n                {/* <div className=\"salesOptionsRight\">\r\n                    <button className='button' onClick={() => {\r\n                        window.print()\r\n                    }}>Print Page</button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"selectView\">\r\n                <button className=\"btn\" onClick={()=>{setIncomeStatement(!incomeStatement)}}>{incomeStatement ? 'View Balance Sheet' : 'View Income Statement'}</button>\r\n                <div></div>\r\n            </div>\r\n\r\n            {\r\n                incomeStatement &&\r\n                <div className=\"incomeStatement\">\r\n                    <h2>Income Statement (Reflecting end of financial year {thisYear})</h2>\r\n\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='element firstElement'>Elements</th>\r\n                                <th className='element'>Calculations</th>\r\n                                <th className='element'>Amounts</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className='element firstElement'>Sales</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{sales.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Sales Returns</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u>({salesReturns.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Net Sales</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b>{netSales.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Cost Of Sales</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Opening Stock</td>\r\n                                <td className='element'>{0}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Purchases</td>\r\n                                <td className='element'>{purchases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Purchase Expenses</td>\r\n                                <td className='element'>{purchaseExpenses.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Purchase Returns</td>\r\n                                <td className='element'>({purchaseReturns.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Closing Stock</td>\r\n                                <td className='element'><u>({(Number(closingStock).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Cost of Sales</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u>({(Number(costOfSales).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Gross Profit</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b>{(Number(grossProfit).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Other Income</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u></u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Rebates Received</td>\r\n                                <td className='element'>{(rebatesReceived?.reduce((a, b) => a + b, 0).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'><u></u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Trade Discounts Received</td>\r\n                                <td className='element'>{(tradeDiscountsReceived?.reduce((a, b) => a + b, 0).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'><u></u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Cash Discounts Received</td>\r\n                                <td className='element'>{(cashDiscountsReceived?.reduce((a, b) => a + b, 0).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'><u></u></td>\r\n                            </tr>\r\n                            {\r\n                                data.otherIncome?.map((item, i)=> (\r\n                                    <tr key={item._id}>\r\n                                        <td className='element firstElement'>{item.name}</td>\r\n                                        <td className='element'>{data.otherIncome.length - 1 === i ? <u>{((Number(item.value)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : ((Number(item.value)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }</td>\r\n                                        <td className='element'><u></u></td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Other Income</b></td>\r\n                                <td className='element'><u>{((Number(totalOtherIncome) + Number(totalDiscountsReceived)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                                <td className='element'><u>{((Number(totalOtherIncome) + Number(totalDiscountsReceived)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b></b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{((Number(totalOtherIncome) + Number(totalDiscountsReceived) + Number(grossProfit)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Expenses</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Discounts Allowed</td>\r\n                                <td className='element'>{(Number(totalDiscountsAllowed).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            {\r\n                                expenses?.map((expense, index) => (\r\n                                    <tr key={expense._id}>\r\n                                        <td className='element firstElement'>{expense.expName}</td>\r\n                                        <td className='element'>{index === expenses.length-1 ? <u>{expense.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : expense.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='element'></td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            \r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Expenses</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>(<u>{(Number(totalExp).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u>)</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Earnings Before Depreciation, Interest And Taxes</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{(Number(ebdit).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Depreciation</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            \r\n                            {\r\n                                depInfos?.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <td className='element firstElement'>{item.assetName}</td>\r\n                                        <td className='element'>{i === depInfos.length-1 ? <u>{(item.accDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : (item.accDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='element'></td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            <tr>\r\n                                <td className='element firstElement'>Total Depreciation</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>(<u>{(Number(totalDep).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u>)</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className='element firstElement'><b>Earnings Before Interest And Taxes</b></th>\r\n                                <th className='element'></th>\r\n                                <th className='element'>{(Number(netResult).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                !incomeStatement &&\r\n                <div className=\"balanceSheet incomeStatement\">\r\n                    <h2>Balance Sheet as at Dec. {thisYear}</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='element firstElement'>Elements</th>\r\n                                <th className='element'></th>\r\n                                <th className='element'>Calculations</th>\r\n                                <th className='element'>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Fixed Assets</b></td>\r\n                                <td className='element'><b>Cost</b></td>\r\n                                <td className='element'><b>Acc Dep</b></td>\r\n                                <td className='element'><b>Net Book Value</b></td>\r\n                            </tr>\r\n                            {\r\n                                depInfos.map((item, index) => (\r\n                                    <tr key\r\n                                    ={item._id}>\r\n                                        <td className='element firstElement'>{item.assetName}</td>\r\n                                        <td className='element'>{index === depInfos.length-1 ? <u>{(item.cost.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : (item.cost.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='element'>{index === depInfos.length-1 ? <u>{(item.accDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : (item.accDep.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='element'>{index === depInfos.length-1 ? <u>{(item.nbv.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : (item.nbv.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Fixed Assets</b></td>\r\n                                <td className='element'><b><u>{(Number(totalFixedAssetCost).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></b></td>\r\n                                <td className='element'><b><u>{(Number(totalDep).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></b></td>\r\n                                <td className='element'><b>{(Number(totalNBV).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Current Assets</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Debtors</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{totalDebtors.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Closing Inventory</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{(Number(closingStock).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Cash</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{cash.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>bank</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{bank.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Mobile Money</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'>{mobileMoney.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Current Assets</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u>{((Number(mobileMoney) + Number(cash) + Number(bank) + Number(closingStock) + Number(totalDebtors)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Assets</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b>{((Number(mobileMoney) + Number(cash) + Number(bank) + Number(closingStock) + Number(totalDebtors) + Number(totalNBV)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Current Liabilities</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>VAT to be paid</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u>{(Number(netVat).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'>Creditors</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u>{(Number(totalCreditors).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Current Liabilities</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b><u>({((Number(totalCreditors) + Number(netVat)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Longterm Liabilities</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            {\r\n                                longtermLiabilities?.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <td className='element firstElement'>{`${item.liabilityName}, ${item.name}`}</td>\r\n                                        <td className='element'></td>\r\n                                        <td className='element'>{i === longtermLiabilities.length-1 ? <u>{(Number(item.amount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u> : (Number(item.amount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='element'></td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Longterm Liabilities</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b>(<u>{totalLongtermLiab.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u>)</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Net Assets</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b>{(((Number(mobileMoney) + Number(cash) + Number(bank) + Number(closingStock) + Number(totalDebtors) + Number(totalNBV)) - Number(totalCreditors) - Number(netVat) - Number(totalLongtermLiab)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Equity</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            {\r\n                                data?.capital?.map((item, i) => (\r\n                                <tr key={item._id}>\r\n                                    <td className='element firstElement'>{item.name}</td>\r\n                                    <td className='element'></td>\r\n                                    <td className='element'>{((item.totalContribution).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    <td className='element'></td>\r\n                                </tr>\r\n                                ))\r\n                            }\r\n                            <tr>\r\n                                <td className='element firstElement'>Earnings Before Interests and Taxes</td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><u>{((Number(ebdit) - Number(totalDep)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                                <td className='element'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className='element firstElement'><b>Total Equity</b></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'></td>\r\n                                <td className='element'><b>{((Number(totalCapital) + (Number(ebdit) - Number(totalDep))).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            </>\r\n        }\r\n\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport './ReviewsPage.css'\r\n\r\nfunction RiviewsPage() {\r\n    const [reviews, setReviews] = useState([])\r\n    const [fetching, setFetching] = useState(false)\r\n\r\n    const fetchReviews = async(unMounted, source)=>{\r\n        await baseURL.get('/reviews', {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            setReviews(res.data)\r\n            setFetching(false)\r\n        })\r\n        .catch(err => {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                    console.log('Request Cancelled');\r\n                } else {\r\n                    console.log('Something went wrong');\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchReviews(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='ReviewsPage'>\r\n            {\r\n                !fetching &&\r\n                <div className=\"reviewsData\">\r\n                    {\r\n                        reviews?.map(item => (\r\n                            <div className=\"reviewItem\">\r\n                                <p className=\"name itemDetailReview\">\r\n                                    {item.name}\r\n                                </p>\r\n                                <p className=\"email itemDetailReview\">\r\n                                    {item.email}\r\n                                </p>\r\n                                <p className=\"whatsApp itemDetailReview\">\r\n                                    {item.whatsApp}\r\n                                </p>\r\n                                <p className=\"message itemDetailReview\">\r\n                                    {(item.message)?.substring(0, 200)}\r\n                                </p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n            {\r\n                fetching &&\r\n                <Loader/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RiviewsPage\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport './Quotation.css';\r\nimport {data1} from './data'\r\n// import {saveAs} from 'file-saver'\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport Loader from './Loader'\r\nimport NewCustomerForm from './NewCustomerForm'\r\nimport Alert from './Alert'\r\n\r\n\r\nfunction DebitNote({onClick, refetch}) {\r\n    const [active, setActive] = useState(false);\r\n    const [collapseAdditions, setCollapseAdditions] = useState(false)\r\n    const [collapseDeductions, setCollapseDeductions] = useState(false)\r\n    const [newCustomer, setNewCustomer] = useState(false)\r\n    const [fetching, setfetching] = useState(true)\r\n    const [products, setProducts] = useState([])\r\n    const [customers, setCustomers] = useState([])\r\n    const [debitNotes, setDebitNotes] = useState([])\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [additionsAndSubtractions, setAdditionsAndSubtractions] = useState({\r\n        rebate: '',\r\n        tradeDiscount: '',\r\n        cashDiscount: '',\r\n        valueAddedTax: ''\r\n    })\r\n\r\n    const [data, setData] = useState(data1)\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const date = new Date();\r\n    const today = date.getDate();\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear();\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        billingAddress: {\r\n            country: '',\r\n            city: '',\r\n            street: ''\r\n        },\r\n        contact: {\r\n            telephone: '',\r\n            mobile: '',\r\n            fax: ''\r\n        }\r\n    });\r\n    const [height, setHeight] = useState(7.5);\r\n    const realVal = height > 36 ? \"100%\" : `${height}rem`;\r\n\r\n    useEffect(async() => {\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        const request1 = baseURL.get('/products')\r\n        const request2 = baseURL.get('/customers')\r\n        await axios.all([request1, request2], {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            const [result1, result2] = res\r\n            setProducts(result1.data)\r\n            setCustomers(result2.data.customers)\r\n            setfetching(false)\r\n        })\r\n        .catch(err =>{\r\n            if (!unMounted) {\r\n                if (axios.isCancel(err)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const updateFieldChanged = (name, index) => (event) => {\r\n        let newArr = data.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setData(newArr);\r\n    };\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    };\r\n\r\n\r\n    const wrapperRef = useRef(null)\r\n\r\n    const handleAdditionsAndSubtractions = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setAdditionsAndSubtractions(prevValue =>{\r\n            return {\r\n                ...prevValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const [noteInput, setNoteInput] = useState({\r\n        date: `${today}/${month + 1}/${year}`,\r\n        noteNumber: `00${debitNotes.length + 1}`,\r\n        customerName: ''\r\n    })\r\n\r\n    const sumTotal = data.map(data => {return(data.amount((data.qty), (data.up)))}).reduce((a, b)=>{return Number(a) + Number(b)}, 0)\r\n    const rebateValue = (sumTotal * (Number(additionsAndSubtractions.rebate)/100)).toFixed(2)\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(additionsAndSubtractions.tradeDiscount)/100)).toFixed(2)\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(additionsAndSubtractions.cashDiscount)/100)).toFixed(2)\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(additionsAndSubtractions.valueAddedTax)/100)).toFixed(2)\r\n    const totalOtherAdditions = otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b)))\r\n\r\n    useEffect(() => {\r\n        customers.filter(cust => (\r\n            cust.name === value\r\n        )).map(value => (\r\n            setCustomerDetails({...value})\r\n        ))\r\n        \r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = wrapperRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n\r\n        setNoteInput(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const elements = data.filter(ele => ele.productName !== '' && ele.qty !== '' && ele.up !== '').map(all => (\r\n        {\r\n            productName: all.productName,\r\n            description: all.description,\r\n            qty: all.qty,\r\n            up: all.up,\r\n            amount: all.qty * all.up\r\n        }\r\n    ))\r\n\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n\r\n    const noteData = {\r\n        noteInput,\r\n        customerDetails,\r\n        data : elements,\r\n        additionsAndSubtractions,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: ((financialNet + Number(valueAddedTax) + totalOtherAdditions)).toFixed(2),\r\n    }\r\n\r\n    const handleSubmit = async ()=>{\r\n        if (customerDetails.name !== '') {\r\n            if (elements.length > 0) {\r\n                setTimeout(()=>{\r\n                    setfetching(true)\r\n                }, 500)\r\n                \r\n                baseURL.post('/debitNote', noteData)\r\n                // .then(() => axios.get(`/invoices/${noteInput.noteNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n                    \r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `creditNoteNumber${noteInput.noteNumber}`)\r\n                //     axios.post(`/sendCreditNote/${noteInput.noteNumber}`, {customerDetails})\r\n                    \r\n                    .then((res)=>{\r\n                        console.log(res.data);\r\n                        onClick();\r\n                        refetch()\r\n                        setfetching(false)\r\n                    })\r\n                // })\r\n            } else {\r\n                setAlertMessage('Please select a customer and add at least one product')\r\n                setAlert(true)\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                }, 3000)\r\n            }\r\n            \r\n        } else {\r\n            setAlertMessage('Please select a customer and add at least one product')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Quotation\">\r\n        <div className=\"close\" onClick={onClick}>\r\n            <i className=\"fas fa-times fa-lg\"></i>\r\n        </div>\r\n            <h3>New Debit Note</h3>\r\n            <div className=\"formContainer\">\r\n                <form action=\"\" method=\"post\">\r\n                    <div className=\"quotationTop\">\r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"date\">Date:</label>\r\n                            <input type=\"text\" name='date' value={noteInput.date} id='date' contentEditable={false} readOnly={true}/>\r\n                        </div>\r\n                        <div className=\"noteNumber\">\r\n                            <label htmlFor='quoteNumber'>\r\n                                Note Number:\r\n                            </label>\r\n                            <input type=\"text\" name=\"quoteNumber\" id=\"quoteNumber\" value={noteInput.quoteNumber} readOnly={true}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"customerDetails\">\r\n                        <div ref={wrapperRef} className='customerName'>\r\n                            <label htmlFor=\"customerName\">Receiver: </label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={value} \r\n                                onChange={(e)=>{setValue(e.target.value)}}\r\n                                onClick={()=>{setActive(!active)}}\r\n                                name='customerName'\r\n                                className='autoListItemInput'\r\n                                id='customerName'\r\n                                placeholder='Select Customer'\r\n                            />\r\n\r\n                            {\r\n                                active && <div className=\"autoCompleteContainer\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={()=>{setNewCustomer(true)}}\r\n                                >Add New Customer</button>\r\n                                    {\r\n                                        customers\r\n                                        .filter(item => {\r\n                                            if (!value) return true\r\n                                            if (item.name?.toLowerCase().includes(value?.toLowerCase())) {\r\n                                            return true\r\n                                            }\r\n                                        })\r\n                                        .map((item, i) => (\r\n                                            <div\r\n                                                className='autoListItem'\r\n                                                onClick={()=>{setValue(item.name); setActive(false);}}\r\n                                                key={i}\r\n                                                tabIndex='0'\r\n                                            >\r\n                                                <p>{item.name}</p>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"customerEmail\">\r\n                            <p><b>Email: </b>{customerDetails?.email}</p>\r\n                        </div>\r\n                        <div className=\"deliveryAdress\">\r\n                            <h4>Delivery Address & Contact</h4>\r\n                            <div className=\"addressInfo\">\r\n                                <p><b>Country: </b>{customerDetails?.country}</p>\r\n                                <p><b>City: </b>{customerDetails?.city}</p>\r\n                                <p><b>Street: </b>{customerDetails?.street}</p>\r\n\r\n                                <p><b>Tel: </b>{customerDetails?.telephone}</p>\r\n                                <p><b>Mobile: </b>{customerDetails?.mobile}</p>\r\n                                <p><b>Fax: </b>{customerDetails?.fax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"additionalInfo\">\r\n                        <div className=\"textArea\">\r\n                            <textarea name=\"additionalInfo\" id=\"additionalInfo\" cols=\"60\" rows=\"6\" value={noteInput.additonalInfo} onChange={handleChange} placeholder='Add additional information to receiver' className='textArea'></textarea>\r\n                        </div>\r\n                        <div className=\"amount\">\r\n                            <h3>Net to your debit: {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"itemsContainer\">\r\n                        <ul>\r\n                            <li className='listItem'>\r\n                                <span className='listTitle'>Product Name</span>\r\n                                    <span className='listTitle'>Description</span>\r\n                                <span className='listTitle'>Quantity</span>\r\n                                <span className='listTitle'>Unit Price</span>\r\n                                <span className='listTitle'>Amount</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul\r\n                            style={{\r\n                            height: `${realVal}`,\r\n                            overflow: \"hidden\"\r\n                            }}\r\n                            className='items'\r\n                        >\r\n                            \r\n                            {data.map((data, index) => (\r\n                                <li className='listItem' key={index}>\r\n                                    <select name=\"productName\" id=\"productName\" value={data.productName} onChange={updateFieldChanged(\"productName\")} onChange={updateFieldChanged(\"productName\", index)}>\r\n                                    <option> </option>\r\n                                        {products.map(product => (\r\n                                            <option value={product.productName}>{product.productName}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={data.description}\r\n                                        onChange={updateFieldChanged(\"description\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"qty\"\r\n                                        value={data.qty}\r\n                                        onChange={updateFieldChanged(\"qty\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"up\"\r\n                                        value={data.up}\r\n                                        onChange={updateFieldChanged(\"up\", index)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"amount\"\r\n                                        value={data.amount(data.qty, data.up)}\r\n                                        readOnly={true}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"summation\">\r\n                            <button\r\n                            onClick={() => {\r\n                            setHeight((prev) => {\r\n                                return prev + 7.3;\r\n                            });\r\n                            if(realVal ==='100%'){\r\n                                setAlertMessage('Cannot Add more rows')\r\n                                setAlert(true)\r\n                                setTimeout(()=>{\r\n                                    setAlert(false)\r\n                                }, 3000)\r\n                            }\r\n                            }}\r\n                            type=\"button\" className='addRows btn'>\r\n                            Add Rows\r\n                        </button>\r\n\r\n                        \r\n                        <h3 className='amount'>Gross Amount: {sumTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                        </div>\r\n\r\n                        <div className=\"deductionsAndAdditions\">\r\n                            <h5>Deductions</h5>\r\n                            <div className=\"deductions\">\r\n                                <button onClick={()=>{setCollapseDeductions(!collapseDeductions)}} type='button'>{collapseDeductions ? 'Shrink Deductions' : 'Collapse Deductions'}</button>\r\n                                {\r\n                                    collapseDeductions && <ul className='deductions'>\r\n                                    <li className='deductItem'>\r\n                                        <b><span className='elements'>Elements</span></b>\r\n                                        <b><span>Rate</span></b>\r\n                                        <b><span>Amount</span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Rebate   \r\n                                        </span>\r\n                                        <input type=\"number\" name=\"rebate\" id=\"rebate\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.rebate}/>\r\n\r\n                                        <u>(<span>\r\n                                            {\r\n                                                rebateValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>)</u>\r\n                                    </li>\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Trade Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"tradeDiscount\" id=\"tradeDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.tradeDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                tradeDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Commercial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {commercialNet2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            Cash Discount\r\n                                        </span>\r\n                                        <input type=\"number\" name=\"cashDiscount\" id=\"cashDiscount\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.cashDiscount}/>\r\n\r\n                                        <u>\r\n                                            (\r\n                                                <span>\r\n                                            {\r\n                                                cashDiscountValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                            }\r\n                                        </span>\r\n                                            )\r\n                                        </u>\r\n                                    </li>\r\n\r\n                                    <li className='deductItem'>\r\n                                        <span className='elements'>\r\n                                            <b>Financial Net</b>\r\n                                        </span>\r\n                                        <b><span>\r\n                                            {financialNet.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </span></b>\r\n                                    </li>\r\n                                </ul>\r\n                                }\r\n                            </div>\r\n                            \r\n                            <div className=\"additions\">\r\n                                <h5>Additions</h5>\r\n                                <button onClick={()=>{setCollapseAdditions(!collapseAdditions)}} type='button'>{collapseAdditions ? 'Shrink Additions' : 'Collapse All'}</button>\r\n                                <ul className='otherAdditions'>\r\n                                        <div className=\"otherAdditions\">\r\n                                            <li className='additionItem'>\r\n                                            <b><span>Element</span></b>\r\n                                            <b><span>Amount</span></b>\r\n                                        </li>\r\n                                        </div>\r\n                                        <div className=\"otherAdditions\">\r\n                                            <li className='deductItem additionItem'>\r\n                                            <span>\r\n                                                Tax (VAT) Rate\r\n                                            </span>\r\n                                            \r\n                                            <input type=\"number\" name=\"valueAddedTax\" id=\"valueAddedTax\" onChange={(e)=>{handleAdditionsAndSubtractions(e)}} value={additionsAndSubtractions.valueAddedTax}/>\r\n\r\n                                            <span>\r\n                                                {\r\n                                                    valueAddedTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                                }\r\n                                            </span>\r\n                                        </li>\r\n                                        </div>\r\n                                            \r\n                                    \r\n                                    {\r\n                                        collapseAdditions && <div className=\"otherAdditions\"\r\n                                        >\r\n                                        {\r\n                                            otherAdditions.map((data, index)=>(\r\n                                                <li key={index} className='additionItem'>\r\n                                                    <input type=\"text\" value={data.name} onChange={otherAdditionsChange('name', index)} name='name'/>\r\n\r\n                                                    <input type=\"number\" value={data.amount} onChange={otherAdditionsChange('amount', index)} name='amount'/>\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                        </div>\r\n                                        }\r\n                                        <div className=\"otherAdditions\">\r\n                                            <div className=\"additionItem\">\r\n                                            <h5>Total Additions</h5>\r\n                                        <h5>{(Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h5>\r\n                                        </div>\r\n                                        </div>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"netPay\">\r\n                                <h3>Net To Your Debit</h3>\r\n                            <h3>\r\n                                {(financialNet + Number(valueAddedTax) + totalOtherAdditions).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            </h3>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"saveOptions\">\r\n                            <button\r\n                                onClick={onClick}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                console.log('Save Button Clicked')\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save\r\n                            </button>\r\n\r\n                            <button\r\n                                onClick={() => {\r\n                                    handleSubmit()\r\n                                console.log('Save and send Button Clicked')\r\n                                }}\r\n                                type=\"button\" className='addRows btn'>\r\n                                Save and Send\r\n                            </button>\r\n                        </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {\r\n                newCustomer && <NewCustomerForm onClick={()=>{setNewCustomer(false)}}\r\n                />\r\n            }\r\n\r\n            {\r\n                fetching && <Loader />\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebitNote\r\n\r\n","import React from 'react'\r\n\r\nfunction SalesAndPurchaseOptionItem({fontawesome, title, onClick}) {\r\n    return (\r\n        <div className=\"SalesOptionsItem\" onClick={onClick}>\r\n                {fontawesome}\r\n            <p>{title}</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SalesAndPurchaseOptionItem\r\n","import React, {useRef, useEffect} from 'react'\r\nimport './SalesOptions.css'\r\nimport SalesAndPurchaseOptions from './SalesAndPurchaseOptionItem'\r\n\r\nfunction SalesOptions({ newQuotation, newInvoice, newCreditNote, newReceipt, newReceivePayment, newPurchaseInvoice, newMakePayment, newDebitNote, newPurchaseReturns, newPurchaseOrder, newExpense, newCashPurchase, onClick }) {\r\n    const wrapperRef = useRef()\r\n\r\n    const handleClickOutSide = (e)=>{\r\n        const {current: wrap} = wrapperRef\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            onClick()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutSide)\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutSide)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"salesAndPurchases\" ref={wrapperRef}>\r\n            <div className='salesAndPurchases'>\r\n                <h3>Sales:</h3>\r\n                <div className=\"SalesOptions\">\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-alt fa-3x\"></i>}\r\n                        title='New Quotation'\r\n                        onClick={newQuotation}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-invoice fa-3x\"></i>}\r\n                        title='New Invoice'\r\n                        onClick={newInvoice}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-receipt fa-3x\"></i>}\r\n                        title='Sales Receipt'\r\n                        onClick={newReceipt}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-money-check-alt fa-3x\"></i>}\r\n                        title='Receive Payment'\r\n                        onClick={newReceivePayment}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-invoice fa-3x\"></i>}\r\n                        title='Sales Returns'\r\n                        onClick={newCreditNote}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-invoice fa-3x\"></i>}\r\n                        title='Debit Note'\r\n                        onClick={newDebitNote}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Purchases and Expenses:</h3>\r\n                <div className=\"PurchaseOptions\">\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-alt fa-3x\"></i>}\r\n                        title='Letter of Enquiry'\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-invoice fa-3x\"></i>}\r\n                        title='Purchase Order'\r\n                        onClick={newPurchaseOrder}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-invoice fa-3x\"></i>}\r\n                        title='New Purchase Invoice'\r\n                        onClick={newPurchaseInvoice}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-receipt fa-3x\"></i>}\r\n                        title='Cash Purchase'\r\n                        onClick={newCashPurchase}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-money-check-alt fa-3x\"></i>}\r\n                        title='Make Payment'\r\n                        onClick={newMakePayment}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-alt fa-3x\"></i>}\r\n                        title='New Expense'\r\n                        onClick={newExpense}\r\n                    />\r\n\r\n                    <SalesAndPurchaseOptions\r\n                        fontawesome={<i className=\"fas fa-file-invoice fa-3x\"></i>}\r\n                        title='Purchase Returns'\r\n                        onClick={newPurchaseReturns}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Others</h3>\r\n                <div className=\"PurchaseOptions\">\r\n                    <button className=\"btn\">Customer</button>\r\n                    <button className=\"btn\">Supplier</button>\r\n                    <button className=\"btn\">Inventory Item</button>\r\n                    <button className=\"btn\">Fixed Asset</button>\r\n                    <button className=\"btn\">Longterm Liability</button>\r\n                    <button className=\"btn\">Shareholder</button>\r\n                    <button className=\"btn\">Employee</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesOptions\r\n","import React from 'react'\r\nimport './SinglePay.css'\r\n\r\nfunction SinglePay({totalDebt, totalPaid, balance, inputValue, handleChange, cancel, submit}) {\r\n    return (\r\n        <div className=\"SinglePay\">\r\n        <p><b>Receive Payment from Customer</b></p>\r\n            <div className=\"overViewDetails\">\r\n                <div className='Element'>\r\n                    <p className=\"ElementName\">Total Debt</p>\r\n                    <p className=\"ElementValue\">{totalDebt}</p>\r\n                </div>\r\n                <div className='Element'>\r\n                    <p className=\"ElementName\">Total Paid</p>\r\n                    <p className=\"ElementValue\">{totalPaid}</p>\r\n                </div>\r\n                <div className='Element'>\r\n                    <p className=\"ElementName\">Balance</p>\r\n                    <p className=\"ElementValue\">{balance}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"amountToPay\">\r\n                <input type=\"number\" name='amountToPay' id='amountToPay' value={inputValue.amountToPay} onChange={handleChange} placeholder='Enter amount to pay' />\r\n                <select name=\"meansOfPayment\" id=\"meansOfPayment\" value={inputValue.meansOfPayment} onChange={handleChange}>\r\n                    <option value=\"cash\">Cash (Default)</option>\r\n                    <option value=\"bank\">Bank</option>\r\n                    <option value=\"mobileMoney\">Mobile Money</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"optionButtons\">\r\n                <button className=\"btn\" onClick={cancel}>Cancel</button>\r\n                <button className=\"btn\" onClick={submit}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePay\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport Invoice from './Invoice'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport SinglePay from './SinglePay'\r\nimport Alert from './Alert'\r\n\r\nfunction Invoices() {\r\n    const history = useHistory()\r\n    const [newInvoice, setNewInvoice] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [receivePay, setReceivePay] = useState(false)\r\n    const wrapperRef = useRef(null)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const [payData, setPayData] = useState({})\r\n    const [inputValue, setInputValue] = useState({\r\n        amountToPay : '',\r\n        meansOfPayment: 'cash'\r\n    })\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchInvoices = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/invoices', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchInvoices(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const {invoices} = data\r\n    const {debtors} = data\r\n\r\n    const overDueInvoices = []\r\n    const dueInDaysInvoices = []\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n    const thisMonth = today.getMonth()\r\n    const thisDay = today.getDate()\r\n\r\n    const totalCreditSales = invoices?.map(item => item.grossAmount).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const totalDebtors = debtors?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const averageDays = ((totalDebtors / totalCreditSales) * 360).toFixed(2) || 0\r\n\r\n    invoices?.forEach(invoice =>{\r\n        const futureDate = new Date(invoice?.dueDate)\r\n        const futureYear = futureDate.getFullYear()\r\n        const futureMonth = futureDate.getMonth()\r\n        const futureDay = futureDate.getDate()\r\n        if (futureYear === thisYear) {\r\n            if (futureMonth < thisMonth) {\r\n                overDueInvoices.push(invoice)\r\n            }\r\n            if (futureMonth === thisMonth) {\r\n                if (futureDay < thisDay) {\r\n                    overDueInvoices.push(invoice)\r\n                }\r\n            }\r\n        }\r\n        if (futureMonth === thisMonth) {\r\n            dueInDaysInvoices.push(invoice)\r\n        }\r\n    })\r\n\r\n    const totalOverDueDebts = overDueInvoices?.map(invoice => invoice.balanceDue).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const totalDueInDays = dueInDaysInvoices?.map(invoice => invoice.balanceDue).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setReceivePay(false);\r\n        }\r\n    }\r\n\r\n    const handleSingleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setInputValue(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const template = [{\r\n        ...payData,\r\n        date: new Date().toDateString(),\r\n        amountToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay),\r\n        meansOfPayment: inputValue.meansOfPayment\r\n    }]\r\n\r\n    const receivePaymentData = {\r\n        source: 'receive payment',\r\n        template,\r\n        totalToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay)\r\n    }\r\n\r\n    const handleReceivePaySubmit = ()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        if (inputValue.amountToPay === '') {\r\n            setAlertMessage('Please add amount to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            setLoader(true)\r\n            baseURL.post('/receivePayment', receivePaymentData)\r\n                // .then(() => axios.get(`/payments/${receivePaytInput.paymentNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n\r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `paymentNumber${receivePaytInput.paymentNumber}`)\r\n                //     axios.post(`/sendInvoice/${receivePaytInput.paymentNumber}`, {customerDetails})\r\n\r\n                .then(() => {\r\n                    fetchInvoices(source, unMounted)\r\n                    setReceivePay(false);\r\n                    setLoader(false)\r\n                })\r\n            // })\r\n        }\r\n    }\r\n\r\n    const handleSendInvoice = ()=>{\r\n        setAlertMessage('Function coming soon.')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n    }\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Invoices</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewInvoice(true)}}>New Invoice</button>\r\n                </div>\r\n\r\n                <div className=\"overDueInvoices\">\r\n                    <div className=\"overDue\">\r\n                        <p className='title'>Total Overdue</p>\r\n                        <p>{(Number(totalOverDueDebts).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    </div>\r\n\r\n                    <div className=\"dueInDays\">\r\n                        <p className='title'>Due this Month</p>\r\n                        <p>{(Number(totalDueInDays).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    </div>\r\n\r\n                    <div className=\"collectionDays\">\r\n                        <p className='title'>Average Collection Days</p>\r\n                        <p>{averageDays} days</p>\r\n                    </div>\r\n\r\n                    <div className=\"totalDebt\">\r\n                        <p className='title'>Total Outstanding Debtors</p>\r\n                        <p>{(Number(totalDebtors).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer Name</th>\r\n                                <th>Invoice Number</th>\r\n                                <th>Due Date</th>\r\n                                <th>Date</th>\r\n                                <th>Net Amount</th>\r\n                                <th>Total Paid</th>\r\n                                <th>Balance Due</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                invoices?.filter(item => item.netPayable > item.totalPaid).sort((a, b)=> new Date(b.invoiceInput.date) - new Date(a.invoiceInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.customerDetails.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.netPayable?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map(invoice => (\r\n                                    <tr key={invoice._id} className='invoiceDetail'>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{invoice.customerDetails.name}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{invoice.invoiceInput.invoiceNumber}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{new Date(invoice.dueDate).toLocaleDateString()}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{new Date(invoice.invoiceInput.date).toLocaleDateString()}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{(Number(invoice.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{(Number(invoice.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{(Number(invoice.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/invoices/${invoice._id}`)}}>{Number(invoice.netPayable) > Number(invoice.totalPaid) ? 'Owing' : invoice.netPayable === invoice.totalPaid ? 'Paid' : 'Over Paid'}</td>\r\n                                        <td className='sendInvoice'>\r\n                                            <span onClick={() =>{\r\n                                                setPayData(invoice)\r\n                                                setReceivePay(true)\r\n                                            }}>\r\n                                                <i class=\"fas fa-file-alt fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>Pay</small>\r\n                                            </span>\r\n                                            <span onClick={handleSendInvoice}>\r\n                                                <i className=\"fas fa-share fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>Send</small>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newInvoice && <Invoice\r\n                    onClick={()=>{setNewInvoice(false)}}\r\n                    refetch={() =>{\r\n                    let source = axios.CancelToken.source();\r\n                    let unMounted = false\r\n                    setAlert(true);\r\n                    setAlertMessage('Invoice Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    fetchInvoices(source, unMounted)\r\n                    }}\r\n                    />\r\n                }\r\n                <div ref={wrapperRef}>\r\n                    {\r\n                    receivePay &&\r\n                    <SinglePay\r\n                        totalDebt = {!payData.netPayable ? '' : (Number(payData?.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                        totalPaid = {!payData.netPayable ? '' : (Number(payData?.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                        balance = {!payData.netPayable ? '' : (Number(payData?.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                        inputValue = {inputValue}\r\n                        handleChange = {(e)=>{handleSingleChange(e)}}\r\n                        cancel = {()=>{setReceivePay(false)}}\r\n                        submit = {handleReceivePaySubmit}\r\n                    />\r\n                    }\r\n                </div>\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Invoices\r\n","import React from 'react'\r\nimport './InvoiceTemplate.css'\r\n\r\nfunction InvoiceTemplate({data}) {\r\n    const totalOtherAdditions = data.otherAdditions?.filter(item => ( item.name !== '' )).map(item => item.amount).reduce((a, b) => ( Number(a) + Number(b) ), 0)\r\n\r\n    const totalDiscounts = (Number(data.discountsAndVat?.rebateValue) + Number(data.discountsAndVat?.tradeDiscountValue) + Number(data.discountsAndVat?.cashDiscountValue)).toFixed(2)\r\n\r\n\r\n            \r\n    return (\r\n        <div className='InvoiceTemplate' id='invoiceTemplate'>\r\n            <div className=\"invoiceContainer\" id='invoiceContainer'>\r\n                <div className=\"invoiceTop\">\r\n                    <div className=\"logoSection\">\r\n                    <div className=\"logo\"></div>\r\n                    <div className=\"companyDetails\">\r\n                        <h4>@HK Solutions Ltd</h4>\r\n                        <p>al salam street Abu Dhabi, UAE</p>\r\n                        <p>amahkudi@gmail.com</p>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"invoiceDetailsSection\">\r\n                    <h4>Invoice Number: {data?.invoiceInput.invoiceNumber}</h4>\r\n                    <p>Date: {data.invoiceInput.date}</p>\r\n                    <p>Due Date: {data.dueDate}</p>\r\n                    <p>Due In: {data.selectInvoiceTerm} days</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"customerDetails\">\r\n                    <div>\r\n                    <div className=\"heading\">\r\n                        <h3>Bill To:</h3>\r\n                    </div>\r\n                    <div className=\"addressInfos\">\r\n                        <p><b>Customer Name:</b> {data.customerDetails?.name}</p>\r\n                        <p><b>Email:</b> {data.customerDetails?.email}</p>\r\n                        <p><b>Country:</b> {data.customerDetails.billingAddress?.country}</p>\r\n                        <p><b>City:</b> {data.customerDetails.billingAddress?.city}</p>\r\n                        <p><b>P.O Box:</b> {data.customerDetails.contact?.fax}</p>\r\n                    </div>\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n\r\n                <table className=\"itemsBought\">\r\n                    <thead>\r\n                        <tr className=\"itemHeading\">\r\n                            <th>Elements</th>\r\n                            <th>Quantity</th>\r\n                            <th>Unit Price</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        data.data?.filter(item => (\r\n                            item.productName !== '' && item.qty !== '' && item.up !== ''\r\n                        )).map(item => ( \r\n                            <tr className=\"item\" key={item._id}>\r\n                                <td> {item.productName} </td>\r\n                                <td> {Number(item.qty).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </td>\r\n                                <td>{(Number(item.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td>{((item.qty * item.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"discountsAndAdditions\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    <b>Gross Amount</b>\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    <b>{(Number(data.grossAmount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b>\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    Total Discounts\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    ({totalDiscounts.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    <b> Financial Net</b>\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    <b>{((Number(data.grossAmount) - totalDiscounts).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b>\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    VAT ({data.additionsAndSubtractions.valueAddedTax}%)\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    {(Number(data.discountsAndVat.valueAddedTax).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">Other Additions\r\n                    </div>\r\n                    <div className=\"value\">{\r\n                        totalOtherAdditions.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                    }</div>\r\n                        \r\n                </div>\r\n\r\n                <div className=\"netPayable\">\r\n                    <div className=\"element\">\r\n                    <b>Net Payable</b>\r\n                    </div>\r\n                    <div className=\"value\" style={{marginRight: '2rem'}}>\r\n                    <b>{(Number(data.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"signature\">\r\n                    <b>Sign.........</b><br />\r\n                    Sales Manager\r\n                </p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceTemplate\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport Invoice from './Invoice'\r\nimport InvoiceTemplate from './InvoiceTemplate'\r\nimport Loader from './Loader'\r\nimport SinglePay from './SinglePay'\r\nimport Alert from './Alert'\r\n\r\nfunction InvoiceDetails() {\r\n    const [receivePay, setReceivePay] = useState(false)\r\n    const wrapper_Ref = useRef(null)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [payData, setPayData] = useState({})\r\n    const [inputValue, setInputValue] = useState({\r\n        amountToPay : '',\r\n        meansOfPayment: 'cash'\r\n    })\r\n    const wrapperRef = useRef(null)\r\n    const {invoiceNumber} = useParams()\r\n    const [newInvoice, setNewInvoice] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [invoiceData, setInvoiceData] = useState([])\r\n    const [statusStyles, setStatusStyles] = useState({\r\n        color: 'white',\r\n        backgroundColor: 'blue',\r\n        borderRadius: '0.5rem 2rem',\r\n        width: 'max-content',\r\n        padding: '1rem',\r\n        textAlign: 'left',\r\n    })\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getInvoice(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getInvoice = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/invoices/${invoiceNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setInvoiceData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    const dueDate = new Date(invoiceData?.map(item => item.dueDate))\r\n    const dueDay = dueDate.getDate()\r\n    const dueMonth = dueDate.getMonth()\r\n    const dueYear = dueDate.getFullYear()\r\n\r\n    const today = new Date()\r\n    const day = today.getDate()\r\n    const month = today.getMonth()\r\n    const year = today.getFullYear()\r\n\r\n\r\n    let status = '';\r\n    let backgroundColor = ''\r\n\r\n    if (year === dueYear) {\r\n        if (month < dueMonth) {\r\n            status = 'Not Due';\r\n            backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n        }\r\n        if (month === dueMonth) {\r\n            if (day === dueDay) {\r\n                status = 'Due Today'\r\n                backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n            }\r\n            if (day < dueDay) {\r\n                status = `Due in ${dueDay - day} days`\r\n                backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n            }\r\n            if (day > dueDay) {\r\n                status = `Overdue ${day - dueDay} days`\r\n                backgroundColor = 'rgba(255, 0, 0, 0.7)'\r\n            }\r\n        }\r\n        if (month > dueMonth) { \r\n            status = 'Overdue'\r\n            backgroundColor = 'rgba(255, 0, 0, 0.7)'\r\n        }\r\n    }else if (year < dueYear) {\r\n        status = 'Not Due'\r\n        backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n    }else{\r\n        status = 'Overdue'\r\n        backgroundColor = 'rgba(255, 0, 0, 0.7)'\r\n    }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'invoiceTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\nuseEffect(() => {\r\n        document.addEventListener('mousedown', handleClick_Outside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick_Outside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClick_Outside(e) {\r\n        const { current: wrap } = wrapper_Ref;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setReceivePay(false);\r\n        }\r\n    }\r\n\r\n    const handleSingleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setInputValue(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const template = [{\r\n        ...payData,\r\n        date: new Date().toDateString(),\r\n        amountToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay),\r\n        meansOfPayment: inputValue.meansOfPayment\r\n    }]\r\n\r\n    const receivePaymentData = {\r\n        source: 'receive payment',\r\n        template,\r\n        totalToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay)\r\n    }\r\n\r\n    const handleReceivePaySubmit = ()=>{\r\n        if (inputValue.amountToPay === '') {\r\n            setAlertMessage('Please add amount to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            setLoader(true)\r\n            baseURL.post('/receivePayment', receivePaymentData)\r\n                // .then(() => axios.get(`/payments/${receivePaytInput.paymentNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n\r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `paymentNumber${receivePaytInput.paymentNumber}`)\r\n                //     axios.post(`/sendInvoice/${receivePaytInput.paymentNumber}`, {customerDetails})\r\n\r\n                .then(() => {\r\n                    setReceivePay(false);\r\n                    setLoader(false)\r\n                })\r\n            // })\r\n        }\r\n    }\r\n\r\n    const handleSendInvoice = ()=>{\r\n        setAlertMessage('Function coming soon.')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Invoice #{invoiceData?.map(item => item.invoiceInput.invoiceNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{\r\n                    setPayData(invoiceData[0])\r\n                    setReceivePay(true)\r\n                }}>Receive Payment</button>\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewInvoice(true)}}>New Invoice</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Invoice</p>\r\n                            <p className=\"option\" onClick={handleSendInvoice}>Export PDF</p>\r\n                            <p className=\"option\" onClick={handleSendInvoice}>Send Invoice</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n                {\r\n                    invoiceData?.map(item => (\r\n                        !fetching && <div className=\"customerQuickDetails\">\r\n                            <div className=\"leftDetail\">\r\n                                <div className=\"status\" style={{\r\n                                    ...statusStyles,\r\n                                    backgroundColor: backgroundColor\r\n                                }}>\r\n                                    <p>Status</p>\r\n                                    <p>{status}</p>\r\n                                </div>\r\n                                <div className=\"customer specificItem\">\r\n                                    <p>Customer Name</p>\r\n                                    <p><Link to={`/customers/${item.customerDetails.name}`} className='custName'>{item.customerDetails.name.slice(0, 25)}...</Link></p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"rightDetail\">\r\n                                <div className=\"totalDebt specificItem\">\r\n                                    <p>Total Debt</p>\r\n                                    <p>{(Number(item.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                </div>\r\n                                <div className=\"totalDebt specificItem\">\r\n                                    <p>Total Paid</p>\r\n                                    <p>{(Number(item.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                </div>\r\n                                <div className=\"amountOwing specificItem\">\r\n                                    <p>Balance</p>\r\n                                    <p>{(Number(item.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    invoiceData?.map(item => (\r\n                        <InvoiceTemplate\r\n                    data = {item}\r\n                />\r\n                    ))\r\n                }\r\n\r\n            {\r\n                newInvoice && \r\n                <Invoice\r\n                    onClick={()=>{setNewInvoice(false)}}\r\n                    refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Invoice Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            <div ref={wrapper_Ref}>\r\n                {\r\n                receivePay &&\r\n                <SinglePay\r\n                    totalDebt = {!payData.netPayable ? '' : (Number(payData?.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    totalPaid = {!payData.netPayable ? '' : (Number(payData?.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    balance = {!payData.netPayable ? '' : (Number(payData?.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    inputValue = {inputValue}\r\n                    handleChange = {(e)=>{handleSingleChange(e)}}\r\n                    cancel = {()=>{setReceivePay(false)}}\r\n                    submit = {handleReceivePaySubmit}\r\n                    />\r\n                    }\r\n                </div>\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceDetails\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport Receipt from './Receipt'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction Receipts() {\r\n    const history = useHistory()\r\n    const [newReceipt, setNewReceipt] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchInvoices = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/receipts', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchInvoices(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const receipts = data\r\n\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Receipts</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewReceipt(true)}}>New Receipt</button>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer Name</th>\r\n                                <th>Receipt Number</th>\r\n                                <th>Date</th>\r\n                                <th>Net Amount</th>\r\n                                <th>Total Discounts</th>\r\n                                <th>Total Other Additions</th>\r\n                                <th>VAT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                receipts?.sort((a, b)=> new Date(b.receiptInput.date) - new Date(a.receiptInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.customerDetails.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.netPayable?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map((receipt, i) => (\r\n                                    <tr key={receipt._id} onClick={()=>{handlePush(`/receipts/${receipt._id}`)}} className='invoiceDetail'>\r\n                                        <td>{receipt.customerDetails.name}</td>\r\n                                        <td>{receipt.receiptInput.receiptNumber}</td>\r\n                                        <td>{new Date(receipt.receiptInput.date).toLocaleDateString()}</td>\r\n                                        <td>{(Number(receipt.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td>{Number(receipt.discountsAndVat.rebateValue) + Number(receipt.discountsAndVat.tradeDiscountValue) + Number(receipt.discountsAndVat.cashDiscountValue) }</td>\r\n                                        <td>{receipt.otherAdditions?.map(item => item.amount).reduce((a, b) => a + b, 0)}</td>\r\n                                        <td>{(Number(receipt.discountsAndVat.valueAddedTax).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newReceipt && <Receipt\r\n                    onClick={()=>{setNewReceipt(false)}}\r\n                    refetch={() =>{\r\n                        let source = axios.cancelToken.source()\r\n                        let unMounted = false\r\n                        setAlert(true);\r\n                        setAlertMessage('Receipt Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    fetchInvoices(source,unMounted)\r\n                    }}\r\n                    />\r\n                }\r\n            </div>\r\n            }\r\n            {\r\n                alert && \r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receipts\r\n","import React from 'react'\r\nimport './InvoiceTemplate.css'\r\n\r\nfunction ReceiptTemplate({data}) {\r\n    const totalOtherAdditions = data.otherAdditions?.filter(item => ( item.name !== '' )).map(item => item.amount).reduce((a, b) => ( Number(a) + Number(b) ), 0)\r\n\r\n    const totalDiscounts = (Number(data.discountsAndVat?.rebateValue) + Number(data.discountsAndVat?.tradeDiscountValue) + Number(data.discountsAndVat?.cashDiscountValue)).toFixed(2)\r\n\r\n\r\n            \r\n    return (\r\n        <div className='ReceiptTemplate' id='ReceiptTemplate'>\r\n            <div className=\"invoiceContainer\" id='invoiceContainer'>\r\n                <div className=\"invoiceTop\">\r\n                    <div className=\"logoSection\">\r\n                    <div className=\"logo\"></div>\r\n                    <div className=\"companyDetails\">\r\n                        <h4>@HK Solutions Ltd</h4>\r\n                        <p>al salam street Abu Dhabi, UAE</p>\r\n                        <p>amahkudi@gmail.com</p>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"invoiceDetailsSection\">\r\n                    <h4>Receipt Number: {data?.receiptInput.receiptNumber}</h4>\r\n                    <p>Date: {data.receiptInput.date}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"customerDetails\">\r\n                    <div>\r\n                    <div className=\"heading\">\r\n                        <h3>Bill To:</h3>\r\n                    </div>\r\n                    <div className=\"addressInfos\">\r\n                        <p><b>Customer Name:</b> {data.customerDetails?.name}</p>\r\n                        <p><b>Email:</b> {data.customerDetails?.email}</p>\r\n                        <p><b>Country:</b> {data.customerDetails.billingAddress?.country}</p>\r\n                        <p><b>City:</b> {data.customerDetails.billingAddress?.city}</p>\r\n                        <p><b>P.O Box:</b> {data.customerDetails.contact?.fax}</p>\r\n                    </div>\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n\r\n                <table className=\"itemsBought\">\r\n                    <thead>\r\n                        <tr className=\"itemHeading\">\r\n                            <th>Elements</th>\r\n                            <th>Quantity</th>\r\n                            <th>Unit Price</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        data.data?.filter(item => (\r\n                            item.productName !== '' && item.qty !== '' && item.up !== ''\r\n                        )).map(item => ( \r\n                            <tr className=\"item\">\r\n                                <td> {item.productName} </td>\r\n                                <td> {Number(item.qty).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </td>\r\n                                <td>{(Number(item.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td>{((item.qty * item.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"discountsAndAdditions\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    <b>Gross Amount</b>\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    <b>{(Number(data.grossAmount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b>\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    Total Discounts\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    ({totalDiscounts.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    <b> Financial Net</b>\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    <b>{((Number(data.grossAmount) - totalDiscounts).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b>\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">\r\n                    VAT ({data.additionsAndSubtractions.valueAddedTax}%)\r\n                    </div>\r\n                    <div className=\"value\">\r\n                    {(Number(data.discountsAndVat.valueAddedTax).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    </div>\r\n\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div className=\"element\">Other Additions\r\n                    </div>\r\n                    <div className=\"value\">{\r\n                        totalOtherAdditions.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                    }</div>\r\n                        \r\n                </div>\r\n\r\n                <div className=\"netPayable\">\r\n                    <div className=\"element\">\r\n                    <b>Net Payable</b>\r\n                    </div>\r\n                    <div className=\"value\" style={{marginRight: '2rem'}}>\r\n                    <b>{(Number(data.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"signature\">\r\n                    <b>Sign.........</b><br />\r\n                    Sales Manager\r\n                </p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceiptTemplate\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport Receipt from './Receipt'\r\nimport ReceiptTemplate from './ReceiptTemplate'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction ReceiptDetails() {\r\n    const wrapperRef = useRef(null)\r\n    const {receiptNumber} = useParams()\r\n    const [newReceipt, setNewReceipt] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [receiptData, setReceipteData] = useState([])\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getReceipt(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getReceipt = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/receipts/${receiptNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setReceipteData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'ReceiptTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\n    const handleExportPdf = ()=>{\r\n        setAlertMessage('Function yet to come, do not forget')\r\n        setAlert(true);\r\n        setTimeout(() => {\r\n            setAlertMessage('')\r\n            setAlert(false);\r\n        }, 2000)\r\n    }\r\n\r\n    const handleSendInvoice = ()=>{\r\n        setAlertMessage('Function yet to come, do not forget')\r\n        setAlert(true);\r\n        setTimeout(() => {\r\n            setAlertMessage('')\r\n            setAlert(false);\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Receipt #{receiptData?.map(item => item.receiptInput.receiptNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewReceipt(true)}}>New Receipt</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Receipt</p>\r\n                            <p className=\"option\" onClick={handleExportPdf}>Export PDF</p>\r\n                            <p className=\"option\" onClick={handleSendInvoice}>Send Receipt</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n                {\r\n                    receiptData?.map(item => (\r\n                        <ReceiptTemplate\r\n                    data = {item}\r\n                />\r\n                    ))\r\n                }\r\n\r\n            {\r\n                newReceipt && \r\n                <Receipt\r\n                onClick={()=>{setNewReceipt(false)}}\r\n                refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Receipt Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n                }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            {\r\n                alert &&\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceiptDetails\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport CreditNote from './CreditNote'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction CreditNotes() {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const history = useHistory()\r\n    const [newCreditNote, setNewCreditNote] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchCreditNotes = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/creditNotes', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchCreditNotes(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const creditNotes = data\r\n\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Sales Returns</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewCreditNote(true)}}>New Sales Returns</button>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer Name</th>\r\n                                <th>Return Number</th>\r\n                                <th>Date</th>\r\n                                <th>Net Amount</th>\r\n                                <th>Total Discounts</th>\r\n                                <th>Total Other Additions</th>\r\n                                <th>VAT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                creditNotes?.sort((a, b)=> new Date(b.noteInput.date) - new Date(a.noteInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.customerDetails.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.netPayable?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map((creditNote, i) => (\r\n                                    <tr key={creditNote._id} onClick={()=>{handlePush(`/credit-notes/${creditNote._id}`)}} className='invoiceDetail'>\r\n                                        <td>{creditNote.customerDetails.name}</td>\r\n                                        <td>{creditNote.noteInput.noteNumber}</td>\r\n                                        <td>{new Date(creditNote.noteInput.date).toLocaleDateString()}</td>\r\n                                        <td>{(Number(creditNote.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td>{Number(creditNote.discountsAndVat.rebateValue) + Number(creditNote.discountsAndVat.tradeDiscountValue) + Number(creditNote.discountsAndVat.cashDiscountValue) }</td>\r\n                                        <td>{creditNote.otherAdditions?.map(item => item.amount).reduce((a, b) => a + b, 0)}</td>\r\n                                        <td>{(Number(creditNote.discountsAndVat.valueAddedTax).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newCreditNote && <CreditNote\r\n                    onClick={()=>{setNewCreditNote(false)}}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Sales Returns Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                        }, 2000)\r\n                    }}\r\n                    />\r\n                }\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                alert &&\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreditNotes\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport CreditNote from './CreditNote'\r\nimport ReceiptTemplate from './ReceiptTemplate'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction CreditNoteDetails() {\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const wrapperRef = useRef(null)\r\n    const {noteNumber} = useParams()\r\n    const [newCreditNote, setNewCreditNote] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [noteData, setNoteData] = useState([])\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getReceipt(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getReceipt = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/creditNotes/${noteNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setNoteData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'ReceiptTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\n    const item = noteData?.map(item => (\r\n        {\r\n            receiptInput: {\r\n                date: item.noteInput.date,\r\n                receiptNumber: item.noteInput.noteNumber,\r\n                customerName: item.noteInput.customerName,\r\n                additionalInfo: item.noteInput.additionalInfos\r\n            },\r\n            customerDetails: item.customerDetails,\r\n            data: item.data,\r\n            additionsAndSubtractions: item.additionsAndSubtractions,\r\n            discountsAndVat: item.discountsAndVat,\r\n            otherAdditions: item.otherAdditions,\r\n            grossAmount: item.grossAmount,\r\n            netPayable: item.netPayable,\r\n        }\r\n    ))\r\n\r\n    const exportPdf = ()=>{\r\n        setAlert(true);\r\n        setAlertMessage('function coming soon');\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('')\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Return #{noteData?.map(item => item.noteInput.noteNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewCreditNote(true)}}>New Return</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Credit Note</p>\r\n                            <p className=\"option\" onClick={exportPdf}>Export PDF</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            {\r\n                item?.map(item => (\r\n                    <ReceiptTemplate\r\n                        data = {item}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                newCreditNote && \r\n                <CreditNote\r\n                onClick={()=>{setNewCreditNote(false)}}\r\n                refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Sales Returns Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                        }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            {\r\n                \r\n                alert &&\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreditNoteDetails\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport Quotation from './Quotation'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction Quotes() {\r\n    const history = useHistory()\r\n    const [newQuotation, setNewQuotation] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n\r\n    const [quoteData, setQuoteData] = useState({})\r\n    const [upDateToInvoice, setUpdateToInvoice] = useState(false)\r\n    const [discountsAndVat, setDiscountsAndVat] = useState({\r\n        valueAddedTax: '',\r\n        cashDiscount: '',\r\n        tradeDiscount: '',\r\n        rebate: '',\r\n        selectInvoiceTerm: 15\r\n    })\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const ref = useRef(null)\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchQuotes = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/quotations', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchQuotes(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const quotations = []\r\n\r\n    data.forEach(item => {\r\n        const element = item.data\r\n        element.forEach(quote => {\r\n            quotations.push({\r\n                ...quote,\r\n                name: item.customerDetails.name,\r\n                number: item.quoteInput.quoteNumber,\r\n                date: item.quoteInput.date,\r\n                id: item._id\r\n            })\r\n        })\r\n    })\r\n\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n    const handle_Change = (e) => {\r\n        const {name, value} = e.target\r\n        setDiscountsAndVat(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = ref;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setUpdateToInvoice(false);\r\n        }\r\n    }\r\n\r\n    const today = new Date().toDateString()\r\n    const dueDate = (value)=>{\r\n        const today = new Date()\r\n        const futureDate = new Date(today.setDate(today.getDate()+ Number(value)))\r\n        return futureDate.toDateString();\r\n    }\r\n\r\n    const sumTotal = quoteData?.amount;\r\n    const rebateValue = (sumTotal * (Number(discountsAndVat?.rebate)/100)).toFixed(2) || 0\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(discountsAndVat?.tradeDiscount)/100)).toFixed(2) || 0\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(discountsAndVat?.cashDiscount)/100)).toFixed(2) || 0\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(discountsAndVat?.valueAddedTax)/100)).toFixed(2) || 0\r\n    const totalOtherAdditions = (otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b))))\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n    const invoiceData = {\r\n        invoiceInput: {\r\n            date : today,\r\n            invoiceNumber : quoteData.quoteInput?.quoteNumber,\r\n            customerName : quoteData.quoteInput?.customerName,\r\n            dueDate : dueDate(discountsAndVat.selectInvoiceTerm)\r\n        },\r\n        selectInvoiceTerm : discountsAndVat.selectInvoiceTerm,\r\n        customerDetails : quoteData?.customerDetails,\r\n        data : [quoteData],\r\n        additionsAndSubtractions : discountsAndVat,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        totalPaid: 0,\r\n        balanceDue: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        dueDate: dueDate(discountsAndVat.selectInvoiceTerm)\r\n    }\r\n\r\n    const handleInvoiceSubmit = ()=>{\r\n\r\n        baseURL.post('/invoices', invoiceData)\r\n        // .then(() => axios.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n        // .then(res => {\r\n            \r\n        //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n        //     saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n        //     axios.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n            \r\n            .then((res)=>{\r\n                setUpdateToInvoice(false);\r\n                setLoader(false)\r\n                setAlert(true);\r\n                setAlertMessage('Invoice Added Successfully');\r\n                setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n            })\r\n        // })\r\n    }\r\n\r\n    const handleSendEmail = ()=>{\r\n        setAlert(true)\r\n        setAlertMessage('function yet to come!!!')\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Quotations</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewQuotation(true)}}>New Quotation</button>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer Name</th>\r\n                                <th>Quote Number</th>\r\n                                <th>Date</th>\r\n                                <th>Qty</th>\r\n                                <th>UP</th>\r\n                                <th>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                quotations?.sort((a, b)=> new Date(b.date) - new Date(a.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.amount?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map((quote, i) => (\r\n                                    <tr key={quote.id} className='invoiceDetail'>\r\n                                        <td onClick={()=>{handlePush(`/quotes/${quote.id}`)}}>{quote.name}</td>\r\n                                        <td onClick={()=>{handlePush(`/quotes/${quote.id}`)}}>{quote.number}</td>\r\n                                        <td onClick={()=>{handlePush(`/quotes/${quote.id}`)}}>{new Date(quote.date).toLocaleDateString()}</td>\r\n                                        <td onClick={()=>{handlePush(`/quotes/${quote.id}`)}}>{(Number(quote.qty).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/quotes/${quote.id}`)}}>{(Number(quote.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/quotes/${quote.id}`)}}>{(Number(quote.amount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='sendInvoice'>\r\n                                            <span onClick={handleSendEmail}>\r\n                                                <i className=\"fas fa-share fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>Send</small>\r\n                                            </span>\r\n                                            <span onClick={() =>{\r\n                                                setQuoteData({\r\n                                                    ...quote,\r\n                                                    customerDetails: data[i].customerDetails\r\n                                                })\r\n                                                setUpdateToInvoice(true)\r\n                                            }}>\r\n                                                <i className=\"fas fa-file-alt fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>New</small>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newQuotation && <Quotation\r\n                    onClick={()=>{setNewQuotation(false)}}\r\n                    refetch={() =>{\r\n                        let source = axios.cancelToken.source()\r\n                        let unMounted = false\r\n                        setAlert(true);\r\n                        setAlertMessage('Quotation Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    fetchQuotes(source,unMounted)\r\n                    }}\r\n                    />\r\n                }\r\n            </div>\r\n            }\r\n            {\r\n                upDateToInvoice &&\r\n            <div className='upDateQuoteToInvoice' ref={ref}>\r\n                <h3>Convert Quotation to Invoice</h3>\r\n                <div className=\"discountsAndVatSection\">\r\n                <p><b>VAT and Other Discounts</b></p>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>VAT(%)</span>\r\n                        <input type=\"number\" name='valueAddedTax' value={discountsAndVat.valueAddedTax} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Rebate(%)</span>\r\n                        <input type=\"number\" name='rebate' value={discountsAndVat.rebate} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Trade Discount(%)</span>\r\n                        <input type=\"number\" name='tradeDiscount' value={discountsAndVat.tradeDiscount} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Cash Discount(%)</span>\r\n                        <input type=\"number\" name='cashDiscount' value={discountsAndVat.cashDiscount} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Due In</span>\r\n                        <select name=\"selectInvoiceTerm\" id=\"selectInvoiceTerm\" value={discountsAndVat.selectInvoiceTerm} onChange={handle_Change} style={{width: '48%'}}>\r\n                            <option value={15}>15 Days (Default)</option>\r\n                            <option value={30}>30 Days</option>\r\n                            <option value={45}>45 Days</option>\r\n                            <option value={60}>60 Days</option>\r\n                            <option value={75}>75 Days</option>\r\n                            <option value={90}>90 Days</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"otherAdditionsSection\">\r\n                    <p><b>Other Additons</b></p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Element</th>\r\n                                <th>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                otherAdditions.map((item, index) =>(\r\n                                    <tr>\r\n                                        <td>\r\n                                            <input type=\"text\" name='name' value={item.name} onChange={otherAdditionsChange('name', index)} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"number\" name='amount' value={item.amount} onChange={otherAdditionsChange('amount', index)} />\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <button className=\"btn\" onClick={()=>{setUpdateToInvoice(false)}}>Cancel</button>\r\n                    <button className=\"btn\" onClick={handleInvoiceSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                alert &&\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quotes\r\n","import React from 'react'\r\nimport './InvoiceTemplate.css'\r\n\r\nfunction QuotationTemplate({data}) {\r\n\r\n\r\n            \r\n    return (\r\n        <div className='ReceiptTemplate' id='ReceiptTemplate'>\r\n            <div className=\"invoiceContainer\" id='invoiceContainer'>\r\n                <div className=\"invoiceTop\">\r\n                    <div className=\"logoSection\">\r\n                    <div className=\"logo\"></div>\r\n                    <div className=\"companyDetails\">\r\n                        <h4>@HK Solutions Ltd</h4>\r\n                        <p>al salam street Abu Dhabi, UAE</p>\r\n                        <p>amahkudi@gmail.com</p>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"invoiceDetailsSection\">\r\n                    <h4>Receipt Number: {data?.quoteInput.quoteNumber}</h4>\r\n                    <p>Date: {data.quoteInput.date}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"customerDetails\">\r\n                    <div>\r\n                    <div className=\"heading\">\r\n                        <h3>Bill To:</h3>\r\n                    </div>\r\n                    <div className=\"addressInfos\">\r\n                        <p><b>Customer Name:</b> {data.customerDetails?.name}</p>\r\n                        <p><b>Email:</b> {data.customerDetails?.email}</p>\r\n                        <p><b>Country:</b> {data.customerDetails.billingAddress?.country}</p>\r\n                        <p><b>City:</b> {data.customerDetails.billingAddress?.city}</p>\r\n                        <p><b>P.O Box:</b> {data.customerDetails.contact?.fax}</p>\r\n                    </div>\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n\r\n                <table className=\"itemsBought\">\r\n                    <thead>\r\n                        <tr className=\"itemHeading\">\r\n                            <th>Elements</th>\r\n                            <th>Quantity</th>\r\n                            <th>Unit Price</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        data.data?.filter(item => (\r\n                            item.productName !== '' && item.qty !== '' && item.up !== ''\r\n                        )).map(item => ( \r\n                            <tr className=\"item\">\r\n                                <td> {item.productName} </td>\r\n                                <td> {Number(item.qty).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </td>\r\n                                <td>{(Number(item.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                <td>{((item.qty * item.up).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <p className=\"signature\">\r\n                    <b>Sign.........</b><br />\r\n                    Sales Manager\r\n                </p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuotationTemplate\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport Quotation from './Quotation'\r\nimport QuotationTemplate from './QuotationTemplate'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction QuoteDetails() {\r\n    const wrapperRef = useRef(null)\r\n    const {quoteNumber} = useParams()\r\n    const [newQuotation, setNewQuotation] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [quoteData, setQuoteData] = useState([])\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const [quotationData, setQuotationData] = useState({\r\n        data : []\r\n    })\r\n    const [upDateToInvoice, setUpdateToInvoice] = useState(false)\r\n    const [discountsAndVat, setDiscountsAndVat] = useState({\r\n        valueAddedTax: '',\r\n        cashDiscount: '',\r\n        tradeDiscount: '',\r\n        rebate: '',\r\n        selectInvoiceTerm: 15\r\n    })\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const ref = useRef(null)\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getQuotation(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getQuotation = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/quotations/${quoteNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setQuoteData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'ReceiptTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\n    const handle_Change = (e) => {\r\n        const {name, value} = e.target\r\n        setDiscountsAndVat(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n    const otherAdditionsChange = (name, index) => (event) => {\r\n        let newArr = otherAdditions.map((item, i) => {\r\n        if (index === i) {\r\n            return { ...item, [name]: event.target.value };\r\n        } else {\r\n            return item;\r\n        }\r\n        });\r\n        setOtherAdditions(newArr);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick_Outside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClick_Outside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClick_Outside(e){\r\n        const {current : wrap} = ref;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setUpdateToInvoice(false);\r\n        }\r\n    }\r\n\r\n    const today = new Date().toDateString()\r\n    const dueDate = (value)=>{\r\n        const today = new Date()\r\n        const futureDate = new Date(today.setDate(today.getDate()+ Number(value)))\r\n        return futureDate.toDateString();\r\n    }\r\n\r\n    const sumTotal = !quotationData ? 0 : quotationData.data?.map(data => {return(data.qty * data.up)}).reduce((a, b)=>{return Number(a) + Number(b)}, 0);\r\n    const rebateValue = (sumTotal * (Number(discountsAndVat?.rebate)/100)).toFixed(2) || 0\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(discountsAndVat?.tradeDiscount)/100)).toFixed(2) || 0\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(discountsAndVat?.cashDiscount)/100)).toFixed(2) || 0\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(discountsAndVat?.valueAddedTax)/100)).toFixed(2) || 0\r\n    const totalOtherAdditions = (otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b))))\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n    const invoiceData = {\r\n        invoiceInput: {\r\n            date : today,\r\n            invoiceNumber : 1,\r\n            customerName : quotationData.quoteInput?.customerName,\r\n            dueDate : dueDate(discountsAndVat.selectInvoiceTerm)\r\n        },\r\n        selectInvoiceTerm : discountsAndVat.selectInvoiceTerm,\r\n        customerDetails : quotationData?.customerDetails,\r\n        data : [quotationData?.data],\r\n        additionsAndSubtractions : discountsAndVat,\r\n        discountsAndVat: {\r\n            rebateValue,\r\n            tradeDiscountValue,\r\n            cashDiscountValue,\r\n            valueAddedTax\r\n        },\r\n        otherAdditions: additions,\r\n        grossAmount: sumTotal,\r\n        netPayable: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        totalPaid: 0,\r\n        balanceDue: (financialNet + Number(valueAddedTax) + totalOtherAdditions),\r\n        dueDate: dueDate(discountsAndVat.selectInvoiceTerm)\r\n    }\r\n\r\n    const handleInvoiceSubmit = ()=>{\r\n        \r\n        baseURL.post('/invoices', invoiceData)\r\n        // .then(() => axios.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n        // .then(res => {\r\n            \r\n        //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n        //     saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n        //     axios.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n            \r\n            .then((res)=>{\r\n                console.log(res.data);\r\n                setUpdateToInvoice(false);\r\n                setFetching(false)\r\n                setAlert(true);\r\n                setAlertMessage('Invoice Added Successfully');\r\n                setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n            })\r\n        // })\r\n    }\r\n\r\n    const handleExportPdf = ()=>{\r\n        setAlertMessage('Function yet to come, dont forget')\r\n        setAlert(true)\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n    const handleSendQuotation = ()=>{\r\n        setAlertMessage('Function yet to come, dont forget')\r\n        setAlert(true)\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Quotation #{quoteData?.map(item => item.quoteInput.quoteNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewQuotation(true)}}>New Quotation</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Quotation</p>\r\n                            <p className=\"option\" onClick={()=>{\r\n                                setQuotationData(quoteData[0])\r\n                                setUpdateToInvoice(true)\r\n                            }}>Convert To Invoice</p>\r\n                            <p className=\"option\" onClick={handleExportPdf}>Export PDF</p>\r\n                            <p className=\"option\" onClick={handleSendQuotation}>Send Quotation</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            {\r\n                upDateToInvoice &&\r\n            <div className='upDateQuoteToInvoice' ref={ref}>\r\n                <h3>Convert Quotation to Invoice</h3>\r\n                <div className=\"discountsAndVatSection\">\r\n                <p><b>VAT and Other Discounts</b></p>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>VAT(%)</span>\r\n                        <input type=\"number\" name='valueAddedTax' value={discountsAndVat.valueAddedTax} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Rebate(%)</span>\r\n                        <input type=\"number\" name='rebate' value={discountsAndVat.rebate} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Trade Discount(%)</span>\r\n                        <input type=\"number\" name='tradeDiscount' value={discountsAndVat.tradeDiscount} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Cash Discount(%)</span>\r\n                        <input type=\"number\" name='cashDiscount' value={discountsAndVat.cashDiscount} onChange={handle_Change} />\r\n                    </div>\r\n                    <div className=\"vatAndOtherDiscounts\">\r\n                        <span>Due In</span>\r\n                        <select name=\"selectInvoiceTerm\" id=\"selectInvoiceTerm\" value={discountsAndVat.selectInvoiceTerm} onChange={handle_Change} style={{width: '48%'}}>\r\n                            <option value={15}>15 Days (Default)</option>\r\n                            <option value={30}>30 Days</option>\r\n                            <option value={45}>45 Days</option>\r\n                            <option value={60}>60 Days</option>\r\n                            <option value={75}>75 Days</option>\r\n                            <option value={90}>90 Days</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"otherAdditionsSection\">\r\n                    <p><b>Other Additons</b></p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Element</th>\r\n                                <th>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                otherAdditions.map((item, index) =>(\r\n                                    <tr>\r\n                                        <td>\r\n                                            <input type=\"text\" name='name' value={item.name} onChange={otherAdditionsChange('name', index)} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"number\" name='amount' value={item.amount} onChange={otherAdditionsChange('amount', index)} />\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <button className=\"btn\" onClick={()=>{setUpdateToInvoice(false)}}>Cancel</button>\r\n                    <button className=\"btn\" onClick={handleInvoiceSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            {\r\n                quoteData?.map(item => (\r\n                    <QuotationTemplate\r\n                        data = {item}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                newQuotation && \r\n                <Quotation\r\n                onClick={()=>{setNewQuotation(false)}}\r\n                refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Quotation Added Successfully');\r\n                    setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            {\r\n                alert &&\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteDetails\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport PurchaseInvoice from './PurchaseInvoice'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport SinglePay from './SinglePay'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseInvoices() {\r\n    const history = useHistory()\r\n    const [newPurchaseInvoice, setNewPurchaseInvoice] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [makePay, setMakePay] = useState(false)\r\n    const wrapperRef = useRef(null)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const [payData, setPayData] = useState({})\r\n    const [inputValue, setInputValue] = useState({\r\n        amountToPay : '',\r\n        meansOfPayment: 'cash'\r\n    })\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchInvoices = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/purchaseInvoices', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchInvoices(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const {purchaseInvoices} = data\r\n    const {creditors} = data\r\n\r\n    const overDueInvoices = []\r\n    const dueInDaysInvoices = []\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n    const thisMonth = today.getMonth()\r\n    const thisDay = today.getDate()\r\n\r\n    const totalCreditPurchases = purchaseInvoices?.map(item => item.grossAmount).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const totalCreditors = creditors?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const averageDays = ((totalCreditors / totalCreditPurchases) * 360).toFixed(2) || 0\r\n\r\n    const totalOverDueDebts = overDueInvoices?.map(invoice => invoice.netPayable).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const totalDueInDays = dueInDaysInvoices?.map(invoice => invoice.netPayable).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    purchaseInvoices?.forEach(invoice =>{\r\n        const invoiceDate = new Date(invoice?.invoiceInput.date)\r\n        const futureDate = new Date(invoice?.invoiceInput.dueDate)\r\n        const futureYear = futureDate.getFullYear()\r\n        const futureMonth = futureDate.getMonth()\r\n        const futureDay = futureDate.getDate()\r\n        if (futureYear === thisYear && futureMonth === thisMonth && futureDay < thisDay) {\r\n            overDueInvoices.push(invoice)\r\n        }else{\r\n            const daysTimeDate = new Date(today.setDate(today.getDate()+ 15))\r\n            const daysTimeYear = daysTimeDate.getFullYear()\r\n            const daysTimeMonth = daysTimeDate.getMonth()\r\n            const daysTimeDay = daysTimeDate.getDate()\r\n            if (daysTimeYear >= futureYear && daysTimeMonth >= futureMonth && daysTimeDay <= futureDay  && !((daysTimeDay - thisDay) < 0) ) {\r\n                dueInDaysInvoices.push(invoice)\r\n            }\r\n        }\r\n    })\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e) {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setMakePay(false);\r\n        }\r\n    }\r\n\r\n    const handleSingleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setInputValue(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const template = [{\r\n        ...payData,\r\n        date: new Date().toDateString(),\r\n        amountToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay),\r\n        meansOfPayment: inputValue.meansOfPayment\r\n    }]\r\n\r\n    const makePaymentData = {\r\n        source: 'make payment',\r\n        template,\r\n        totalToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay)\r\n    }\r\n\r\n    const handleMakePaySubmit = ()=>{\r\n        if (inputValue.amountToPay === '') {\r\n            setAlertMessage('Please add amount to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            setLoader(true)\r\n            baseURL.post('/makePayment', makePaymentData)\r\n                // .then(() => axios.get(`/payments/${receivePaytInput.paymentNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n\r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `paymentNumber${receivePaytInput.paymentNumber}`)\r\n                //     axios.post(`/sendInvoice/${receivePaytInput.paymentNumber}`, {customerDetails})\r\n\r\n                .then(() => {\r\n                    setMakePay(false);\r\n                    setLoader(false)\r\n                })\r\n            // })\r\n        }\r\n    }\r\n    console.log(purchaseInvoices);\r\n\r\n    const handleSendInvoice = ()=>{\r\n        setAlertMessage('Function coming soon.')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n    }\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Purchase Invoices</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewPurchaseInvoice(true)}}>New Invoice</button>\r\n                </div>\r\n\r\n                <div className=\"overDueInvoices\">\r\n                    <div className=\"overDue\">\r\n                        <p className='title'>Total Overdue</p>\r\n                        <p>{(Number(totalOverDueDebts).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    </div>\r\n\r\n                    <div className=\"dueInDays\">\r\n                        <p className='title'>Due in 15 Days</p>\r\n                        <p>{(Number(totalDueInDays).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    </div>\r\n\r\n                    <div className=\"collectionDays\">\r\n                        <p className='title'>Average Collection Days</p>\r\n                        <p>{averageDays} days</p>\r\n                    </div>\r\n\r\n                    <div className=\"totalDebt\">\r\n                        <p className='title'>Total Outstanding Creditors</p>\r\n                        <p>{(Number(totalCreditors).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Supplier Name</th>\r\n                                <th>Invoice Number</th>\r\n                                <th>Due Date</th>\r\n                                <th>Date</th>\r\n                                <th>Net Amount</th>\r\n                                <th>Total Paid</th>\r\n                                <th>Balance Due</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                purchaseInvoices?.filter(item => item.netPayable > item.totalPaid).sort((a, b)=> new Date(b.invoiceInput.date) - new Date(a.invoiceInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.supplierDetails.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.netPayable?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map(invoice => (\r\n                                    <tr key={invoice._id} className='invoiceDetail'>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{invoice.supplierDetails.name}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{invoice.invoiceInput.invoiceNumber}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{new Date(invoice.dueDate).toLocaleDateString()}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{new Date(invoice.invoiceInput.date).toLocaleDateString()}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{(Number(invoice.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{(Number(invoice.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{(Number(invoice.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-invoices/${invoice._id}`)}}>{Number(invoice.netPayable) > Number(invoice.totalPaid) ? 'Owing' : invoice.netPayable === invoice.totalPaid ? 'Paid' : 'Over Paid'}</td>\r\n                                        <td className='sendInvoice'>\r\n                                            <span onClick={() =>{\r\n                                                setPayData(invoice)\r\n                                                setMakePay(true)\r\n                                            }}>\r\n                                                <i class=\"fas fa-file-alt fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>Pay</small>\r\n                                            </span>\r\n                                            <span onClick={handleSendInvoice}>\r\n                                                <i className=\"fas fa-share fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>Send</small>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newPurchaseInvoice && <PurchaseInvoice\r\n                    onClick={()=>{setNewPurchaseInvoice(false)}}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Invoice Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                    />\r\n                }\r\n                <div ref={wrapperRef}>\r\n                    {\r\n                    makePay &&\r\n                    <SinglePay\r\n                        totalDebt = {!payData.netPayable ? '' : (Number(payData?.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n\r\n                        totalPaid = {!payData.netPayable ? '' : (Number(payData?.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n\r\n                        balance = {!payData.netPayable ? '' : (Number(payData?.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n\r\n                        inputValue = {inputValue}\r\n                        handleChange = {(e)=>{handleSingleChange(e)}}\r\n                        cancel = {()=>{setMakePay(false)}}\r\n                        submit = {handleMakePaySubmit}\r\n                    />\r\n                    }\r\n                </div>\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoices\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport PurchaseInvoice from './PurchaseInvoice'\r\nimport InvoiceTemplate from './InvoiceTemplate'\r\nimport Loader from './Loader'\r\nimport SinglePay from './SinglePay'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseInvoiceDetails() {\r\n    const [makePay, setMakePay] = useState(false)\r\n    const wrapper_Ref = useRef(null)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n    const [payData, setPayData] = useState({})\r\n    const [inputValue, setInputValue] = useState({\r\n        amountToPay : '',\r\n        meansOfPayment: 'cash'\r\n    })\r\n    const wrapperRef = useRef(null)\r\n    const {invoiceNumber} = useParams()\r\n    const [newPurchaseInvoice, setNewPurchaseInvoice] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [invoiceData, setInvoiceData] = useState([])\r\n    const [statusStyles, setStatusStyles] = useState({\r\n        color: 'white',\r\n        backgroundColor: 'blue',\r\n        borderRadius: '0.5rem 2rem',\r\n        width: 'max-content',\r\n        padding: '1rem',\r\n        textAlign: 'left',\r\n    })\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getInvoice(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getInvoice = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/purchaseInvoices/${invoiceNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setInvoiceData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    const dueDate = new Date(invoiceData?.map(item => item.dueDate))\r\n    const dueDay = dueDate.getDate()\r\n    const dueMonth = dueDate.getMonth()\r\n    const dueYear = dueDate.getFullYear()\r\n\r\n    const today = new Date()\r\n    const day = today.getDate()\r\n    const month = today.getMonth()\r\n    const year = today.getFullYear()\r\n\r\n\r\n    let status = '';\r\n    let backgroundColor = ''\r\n\r\n    if (year === dueYear) {\r\n        if (month < dueMonth) {\r\n            status = 'Not Due';\r\n            backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n        }\r\n        if (month === dueMonth) {\r\n            if (day === dueDay) {\r\n                status = 'Due Today'\r\n                backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n            }\r\n            if (day < dueDay) {\r\n                status = `Due in ${dueDay - day} days`\r\n                backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n            }\r\n            if (day > dueDay) {\r\n                status = `Overdue ${day - dueDay} days`\r\n                backgroundColor = 'rgba(255, 0, 0, 0.7)'\r\n            }\r\n        }\r\n        if (month > dueMonth) { \r\n            status = 'Overdue'\r\n            backgroundColor = 'rgba(255, 0, 0, 0.7)'\r\n        }\r\n    }else if (year < dueYear) {\r\n        status = 'Not Due'\r\n        backgroundColor = 'rgba(0, 0, 255, 0.5)'\r\n    }else{\r\n        status = 'Overdue'\r\n        backgroundColor = 'rgba(255, 0, 0, 0.7)'\r\n    }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'invoiceTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\nuseEffect(() => {\r\n        document.addEventListener('mousedown', handleClick_Outside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick_Outside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClick_Outside(e) {\r\n        const { current: wrap } = wrapper_Ref;\r\n        if (wrap && !wrap.contains(e.target)) {\r\n            setMakePay(false);\r\n        }\r\n    }\r\n\r\n    const handleSingleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setInputValue(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const template = [{\r\n        ...payData,\r\n        date: new Date().toDateString(),\r\n        amountToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay),\r\n        meansOfPayment: inputValue.meansOfPayment\r\n    }]\r\n\r\n    const makePaymentData = {\r\n        source: 'make payment',\r\n        template,\r\n        totalToPay: inputValue.amountToPay === '' ? 0 : Number(inputValue.amountToPay)\r\n    }\r\n\r\n    const handleMakePaySubmit = ()=>{\r\n        if (inputValue.amountToPay === '') {\r\n            setAlertMessage('Please add amount to pay')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n        }else{\r\n            setLoader(true)\r\n            baseURL.post('/makePayment', makePaymentData)\r\n                // .then(() => axios.get(`/payments/${receivePaytInput.paymentNumber}`, {responseType: 'blob'}))\r\n                // .then(res => {\r\n\r\n                //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n                //     saveAs(pdfBlob, `paymentNumber${receivePaytInput.paymentNumber}`)\r\n                //     axios.post(`/sendInvoice/${receivePaytInput.paymentNumber}`, {customerDetails})\r\n\r\n                .then(() => {\r\n                    setMakePay(false);\r\n                    setLoader(false)\r\n                })\r\n            // })\r\n        }\r\n    }\r\n\r\n    const handleSendInvoice = ()=>{\r\n        setAlertMessage('Function coming soon.')\r\n            setAlert(true)\r\n            setTimeout(()=>{\r\n                setAlert(false)\r\n            }, 3000)\r\n    }\r\n\r\n    const invoiceTemplateData = invoiceData?.map(item => (\r\n        {\r\n            invoiceInput: {\r\n                date : item.invoiceInput.date,\r\n                invoiceNumber : item.invoiceInput.invoiceNumber,\r\n                customerName : item.invoiceInput.supplierName,\r\n                dueDate : item.dueDate\r\n            },\r\n            selectInvoiceTerm: item.selectInvoiceTerm,\r\n            customerDetails : item.supplierDetails,\r\n            data : item.data,\r\n            additionsAndSubtractions : item.additionsAndSubtractions,\r\n            discountsAndVat: {\r\n                rebateValue : item.discountsAndVat.rebateValue,\r\n                tradeDiscountValue: item.discountsAndVat.tradeDiscountValue,\r\n                cashDiscountValue : item.discountsAndVat.cashDiscountValue,\r\n                valueAddedTax : item.discountsAndVat.valueAddedTax\r\n            },\r\n            otherAdditions: item.otherAdditions,\r\n            grossAmount: item.grossAmount,\r\n            netPayable: item.netPayable,\r\n            totalPaid: item.totalPaid,\r\n            balanceDue: item.balanceDue,\r\n            dueDate: item.dueDate\r\n        }\r\n    ))\r\n\r\n    console.log(invoiceTemplateData);\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Invoice #{invoiceData?.map(item => item.invoiceInput.invoiceNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{\r\n                    setPayData(invoiceData[0])\r\n                    setMakePay(true)\r\n                }}>Make Payment</button>\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewPurchaseInvoice(true)}}>New Invoice</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Invoice</p>\r\n                            <p className=\"option\" onClick={handleSendInvoice}>Export PDF</p>\r\n                            <p className=\"option\" onClick={handleSendInvoice}>Send Invoice</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n                {\r\n                    invoiceData?.map(item => (\r\n                        !fetching && <div className=\"customerQuickDetails\">\r\n                            <div className=\"leftDetail\">\r\n                                <div className=\"status\" style={{\r\n                                    ...statusStyles,\r\n                                    backgroundColor: backgroundColor\r\n                                }}>\r\n                                    <p>Status</p>\r\n                                    <p>{status}</p>\r\n                                </div>\r\n                                <div className=\"customer specificItem\">\r\n                                    <p>Supplier Name</p>\r\n                                    <p><Link to={`/suppliers/${item.supplierDetails.name}`} className='custName'>{item.supplierDetails.name.slice(0, 25)}...</Link></p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"rightDetail\">\r\n                                <div className=\"totalDebt specificItem\">\r\n                                    <p>Total Debt</p>\r\n                                    <p>{(Number(item.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                </div>\r\n                                <div className=\"totalDebt specificItem\">\r\n                                    <p>Total Paid</p>\r\n                                    <p>{(Number(item.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                </div>\r\n                                <div className=\"amountOwing specificItem\">\r\n                                    <p>Balance</p>\r\n                                    <p>{(Number(item.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n                \r\n                {\r\n                    invoiceTemplateData?.map(item => (\r\n                        <InvoiceTemplate\r\n                            data = {item}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            {\r\n                newPurchaseInvoice && \r\n                <PurchaseInvoice\r\n                onClick={()=>{setNewPurchaseInvoice(false)}}\r\n                refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Purchase Invoice Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n                }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            <div ref={wrapper_Ref}>\r\n                {\r\n                makePay &&\r\n                <SinglePay\r\n                    totalDebt = {!payData.netPayable ? '' : (Number(payData?.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    totalPaid = {!payData.netPayable ? '' : (Number(payData?.totalPaid).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    balance = {!payData.netPayable ? '' : (Number(payData?.balanceDue).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    inputValue = {inputValue}\r\n                    handleChange = {(e)=>{handleSingleChange(e)}}\r\n                    cancel = {()=>{setMakePay(false)}}\r\n                    submit = {handleMakePaySubmit}\r\n                    />\r\n                    }\r\n                </div>\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoiceDetails\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport CashPurchase from './CashPurchase'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseReceipts() {\r\n    const history = useHistory()\r\n    const [newReceipt, setNewReceipt] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchReceipts = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/purchaseReceipts', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchReceipts(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const receipts = data\r\n    \r\n    const discounts = receipts?.map(item => (\r\n        Number(item.discountsAndVat.rebateValue) + Number(item.discountsAndVat.tradeDiscountValue) + Number(item.discountsAndVat.cashDiscountValue)\r\n        ))\r\n\r\n    const totalOtherAdditions = 5000\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Purchase Receipts</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewReceipt(true)}}>New Receipt</button>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Supplier Name</th>\r\n                                <th>Receipt Number</th>\r\n                                <th>Date</th>\r\n                                <th>Net Amount</th>\r\n                                <th>Total Discounts</th>\r\n                                <th>Total Other Additions</th>\r\n                                <th>VAT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                receipts?.sort((a, b)=> new Date(b.receiptInput.date) - new Date(a.receiptInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.customerDetails.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.netPayable?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map((receipt, i) => (\r\n                                    <tr key={receipt._id} onClick={()=>{handlePush(`/purchase-receipts/${receipt._id}`)}} className='invoiceDetail'>\r\n                                        <td>{receipt.supplierDetails.name}</td>\r\n                                        <td>{receipt.receiptInput.receiptNumber}</td>\r\n                                        <td>{new Date(receipt.receiptInput.date).toLocaleDateString()}</td>\r\n                                        <td>{(Number(receipt.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td>{Number(receipt.discountsAndVat.rebateValue) + Number(receipt.discountsAndVat.tradeDiscountValue) + Number(receipt.discountsAndVat.cashDiscountValue) }</td>\r\n                                        <td>{receipt.otherAdditions?.map(item => item.amount).reduce((a, b) => a + b, 0)}</td>\r\n                                        <td>{(Number(receipt.discountsAndVat.valueAddedTax).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newReceipt && <CashPurchase \r\n                    onClick={()=>{setNewReceipt(false)}}\r\n                    refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Receipt Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                    />\r\n                }\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                <Alert\r\n                    alert={alert}\r\n                    message={alertMessage}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseReceipts\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport CashPurchase from './CashPurchase'\r\nimport ReceiptTemplate from './ReceiptTemplate'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseReceiptDetails() {\r\n    const wrapperRef = useRef(null)\r\n    const {receiptNumber} = useParams()\r\n    const [newReceipt, setNewReceipt] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [receiptData, setReceipteData] = useState([])\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getReceipt(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getReceipt = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/purchaseReceipts/${receiptNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setReceipteData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'ReceiptTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\n    const receiptTemplateData = receiptData?.map(item => (\r\n        {\r\n        source: 'cash purchases',\r\n        receiptInput : item.receiptInput,\r\n        customerDetails : item.supplierDetails,\r\n        data: item.data,\r\n        additionsAndSubtractions : item.additionsAndSubtractions,\r\n        discountsAndVat: item.discountsAndVat,\r\n        otherAdditions: item.otherAdditions,\r\n        grossAmount: item.grossAmount,\r\n        netPayable: item.netPayable,\r\n    }\r\n    ))\r\n    const handleExportPdf = ()=>{\r\n        setAlert(true);\r\n        setAlertMessage('Function coming soon!!!');\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n    const handleSendReceipt = ()=>{\r\n        setAlert(true);\r\n        setAlertMessage('Function coming soon!!!');\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Receipt #{receiptData?.map(item => item.receiptInput.receiptNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewReceipt(true)}}>New Receipt</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Receipt</p>\r\n                            <p className=\"option\" onClick={handleExportPdf}>Export PDF</p>\r\n                            <p className=\"option\" onClick={handleSendReceipt}>Send Receipt</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n                {\r\n                    receiptTemplateData?.map(item => (\r\n                        <ReceiptTemplate\r\n                    data = {item}\r\n                />\r\n                    ))\r\n                }\r\n\r\n            {\r\n                newReceipt && \r\n                <CashPurchase\r\n                onClick={()=>{setNewReceipt(false)}}\r\n                refetch={() =>{\r\n                    setAlert(true);\r\n                    setAlertMessage('Purchase Receipt Added Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseReceiptDetails\r\n","import React from 'react'\r\nimport './ConfirmMessageBox.css'\r\n\r\nfunction ConfirmMessageBox({message, submit}) {\r\n    return (\r\n        <div className='ConfirmMessageBox'>\r\n            <div className=\"messageContent\">\r\n                <p>{message}</p>\r\n            </div>\r\n            <div className=\"submitButton\">\r\n                <button className=\"btn\" onClick={submit}>\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmMessageBox\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport PurchaseOrder from './PurchaseOrder'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport ConfirmMessageBox from './ConfirmMessageBox'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseOrders() {\r\n    const history = useHistory()\r\n    const [newOrder, setNewOrder] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n\r\n    const [orderData, setOrderData] = useState({})\r\n    const [upDateToInvoice, setUpdateToInvoice] = useState(false)\r\n    const [discountsAndVat, setDiscountsAndVat] = useState({\r\n        valueAddedTax: '',\r\n        cashDiscount: '',\r\n        tradeDiscount: '',\r\n        rebate: '',\r\n        selectInvoiceTerm: 15\r\n    })\r\n\r\n    const [otherAdditions, setOtherAdditions] = useState([\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n        {\r\n            name: '',\r\n            amount: ''\r\n        },\r\n    ])\r\n    const ref = useRef(null)\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchOrder = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/purchaseOrders', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchOrder(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    // data.forEach(item => {\r\n    //     const element = item.data\r\n    //     element.forEach(order => {\r\n    //         orders.push({\r\n    //             ...order,\r\n    //             name: item.supplierDetails.name,\r\n    //             number: item.orderInput.orderNumber,\r\n    //             date: item.orderInput.date,\r\n    //             id: item._id\r\n    //         })\r\n    //     })\r\n    // })\r\n\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n    // const handle_Change = (e) => {\r\n    //     const {name, value} = e.target\r\n    //     setDiscountsAndVat(prev => (\r\n    //         {\r\n    //             ...prev,\r\n    //             [name] : value\r\n    //         }\r\n    //     ))\r\n    // }\r\n    // const otherAdditionsChange = (name, index) => (event) => {\r\n    //     let newArr = otherAdditions.map((item, i) => {\r\n    //     if (index === i) {\r\n    //         return { ...item, [name]: event.target.value };\r\n    //     } else {\r\n    //         return item;\r\n    //     }\r\n    //     });\r\n    //     setOtherAdditions(newArr);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = ref;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setUpdateToInvoice(false);\r\n        }\r\n    }\r\n\r\n    const today = new Date().toDateString()\r\n    const dueDate = (value)=>{\r\n        const today = new Date()\r\n        const futureDate = new Date(today.setDate(today.getDate()+ Number(value)))\r\n        return futureDate.toDateString();\r\n    }\r\n\r\n    const sumTotal = orderData?.amount;\r\n    const rebateValue = (sumTotal * (Number(discountsAndVat?.rebate)/100)).toFixed(2) || 0\r\n    const commercialNet1 = sumTotal - rebateValue;\r\n    const tradeDiscountValue = (commercialNet1 * (Number(discountsAndVat?.tradeDiscount)/100)).toFixed(2) || 0\r\n    const commercialNet2 = commercialNet1 - tradeDiscountValue\r\n    const cashDiscountValue = (commercialNet2 * (Number(discountsAndVat?.cashDiscount)/100)).toFixed(2) || 0\r\n    const financialNet = commercialNet2 - cashDiscountValue\r\n    const valueAddedTax = (financialNet * (Number(discountsAndVat?.valueAddedTax)/100)).toFixed(2) || 0\r\n    const totalOtherAdditions = (otherAdditions.map(item => item.amount).reduce((a,b)=> (Number(a) + Number(b))))\r\n    const additions = otherAdditions.filter(ele => ele.name !== '' && ele.amount !== '')\r\n\r\n    const invoiceData = {\r\n        invoiceInput: {\r\n            date : orderData.orderInput?.date,\r\n            invoiceNumber : orderData.orderInput?.orderNumber,\r\n            supplierName : orderData.orderInput?.supplierName,\r\n            dueDate : orderData?.dueDate\r\n        },\r\n        selectInvoiceTerm : orderData.selectInvoiceTerm,\r\n        supplierDetails : orderData?.supplierDetails,\r\n        data : orderData.data,\r\n        additionsAndSubtractions : orderData.additionsAndSubtractions,\r\n        discountsAndVat: orderData.discountsAndVat,\r\n        otherAdditions: orderData.otherAdditions,\r\n        grossAmount: orderData.grossAmount,\r\n        netPayable: orderData.netPayable,\r\n        totalPaid: 0,\r\n        balanceDue: orderData.netPayable,\r\n        dueDate: orderData.dueDate\r\n    }\r\n\r\n    // const invoiceData = {\r\n    //     invoiceInput: orderData?.orderInput,\r\n    //     selectInvoiceTerm: orderData?.selectInvoiceTerm,\r\n    //     supplierDetails: orderData?.supplierDetails,\r\n    //     data: orderData?.data,\r\n    //     additionsAndSubtractions: orderData?.additionsAndSubtractions,\r\n    //     discountsAndVat: orderData?.discountsAndVat,\r\n    //     otherAdditions: orderData?.otherAdditions,\r\n    //     grossAmount: orderData?.grossAmount,\r\n    //     netPayable: orderData?.netPayable\r\n    // }\r\n\r\n\r\n    const handleInvoiceSubmit = ()=>{\r\n\r\n        baseURL.post('/purchaseInvoice', invoiceData)\r\n        // .then(() => axios.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n        // .then(res => {\r\n            \r\n        //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n        //     saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n        //     axios.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n            \r\n            .then(()=>{\r\n                setUpdateToInvoice(false);\r\n                setLoader(false)\r\n                setAlert(true);\r\n                setAlertMessage('Updated To Invoice Successfully');\r\n                    setTimeout(() => {\r\n                    setAlert(false);\r\n                    setAlertMessage('');\r\n                }, 2000)\r\n            })\r\n        // })\r\n    }\r\n\r\n    const handleSendInvoice = ()=>{\r\n        setAlert(true);\r\n        setAlertMessage('function coming soon!!!');\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Purchase Orders</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewOrder(true)}}>New Order</button>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Supplier Name</th>\r\n                                <th>Order Number</th>\r\n                                <th>Date</th>\r\n                                <th>Due Date</th>\r\n                                <th>Gross Amoount</th>\r\n                                <th>Net Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                data?.sort((a, b)=> new Date(b.orderInput.date) - new Date(a.orderInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.amount?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map((order, i) => (\r\n                                    <tr key={order.__id} className='invoiceDetail'>\r\n                                        <td onClick={()=>{handlePush(`/purchase-orders/${order._id}`)}}>{order.supplierDetails.name}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-orders/${order._id}`)}}>{order.orderInput.orderNumber}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-orders/${order._id}`)}}>{new Date(order.orderInput.date).toLocaleDateString()}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-orders/${order._id}`)}}>{order.dueDate}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-orders/${order._id}`)}}>{(Number(order.grossAmount).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td onClick={()=>{handlePush(`/purchase-orders/${order._id}`)}}>{(Number(order.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td className='sendInvoice'>\r\n                                            <span onClick={handleSendInvoice}>\r\n                                                <i className=\"fas fa-share fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>Send</small>\r\n                                            </span>\r\n                                            <span onClick={() =>{\r\n                                                setOrderData({\r\n                                                    ...order,\r\n                                                    totalPaid: 0,\r\n                                                    balanceDue: order.netPayable\r\n                                                })\r\n                                                setUpdateToInvoice(true)\r\n                                            }}>\r\n                                                <i className=\"fas fa-file-alt fa-sm\"></i>\r\n                                                <small style={{display: 'block'}}>New</small>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newOrder && <PurchaseOrder\r\n                    onClick={()=>{setNewOrder(false)}}\r\n                    fetching={()=>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Order Added Successfully');\r\n                            setTimeout(() => {\r\n                            setAlert(false);\r\n                            setAlertMessage('');\r\n                        }, 2000)\r\n                    }}\r\n                    />\r\n                }\r\n            </div>\r\n            }\r\n            {\r\n                upDateToInvoice &&\r\n            <div ref={ref}>\r\n                <ConfirmMessageBox\r\n                    message=\"Confirm Update Order to Invoice??\"\r\n                    submit={handleInvoiceSubmit}\r\n                />\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrders\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport PurchaseOrder from './PurchaseOrder'\r\nimport InvoiceTemplate from './InvoiceTemplate'\r\nimport Loader from './Loader'\r\nimport ConfirmMessageBox from './ConfirmMessageBox'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseOrderDetails() {\r\n    const wrapperRef = useRef(null)\r\n    const {orderNumber} = useParams()\r\n    const [newOrder, setNewOrder] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [orderData, setOrderData] = useState([])\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const [upDateToInvoice, setUpdateToInvoice] = useState(false)\r\n\r\n    const ref = useRef(null)\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getOrder(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getOrder = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/purchaseOrders/${orderNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setOrderData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'invoiceTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick_Outside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClick_Outside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClick_Outside(e){\r\n        const {current : wrap} = ref;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            setUpdateToInvoice(false);\r\n        }\r\n    }\r\n\r\n    const invoiceData = orderData?.map(item => (\r\n        {\r\n            invoiceInput: item?.orderInput,\r\n            selectInvoiceTerm : item?.selectInvoiceTerm,\r\n            supplierDetails : item?.supplierDetails,\r\n            data : item?.data,\r\n            additionsAndSubtractions : item?.additionsAndSubtractions,\r\n            discountsAndVat: item?.discountsAndVat,\r\n            otherAdditions: item?.otherAdditions,\r\n            grossAmount: item?.grossAmount,\r\n            netPayable: item?.netPayable,\r\n            totalPaid: item?.totalPaid,\r\n            balanceDue: item?.balanceDue,\r\n            dueDate: item?.dueDate\r\n        }\r\n    ))\r\n\r\n    const invoiceTemplateData = orderData?.map(item => (\r\n        {\r\n            invoiceInput: {\r\n                date: item.orderInput.date,\r\n                customerName: item.orderInput.supplierName,\r\n                dueDate: item?.orderInput.dueDate\r\n                },\r\n            selectInvoiceTerm : item?.selectInvoiceTerm,\r\n            customerDetails : item?.supplierDetails,\r\n            data : item?.data,\r\n            additionsAndSubtractions : item?.additionsAndSubtractions,\r\n            discountsAndVat: item?.discountsAndVat,\r\n            otherAdditions: item?.otherAdditions,\r\n            grossAmount: item?.grossAmount,\r\n            netPayable: item?.netPayable,\r\n            totalPaid: item?.totalPaid,\r\n            balanceDue: item?.balanceDue,\r\n            dueDate: item?.dueDate\r\n        }\r\n    ))\r\n\r\n    const handleInvoiceSubmit = ()=>{\r\n        \r\n        baseURL.post('/purchaseInvoice', invoiceData[0])\r\n        // .then(() => axios.get(`/invoices/${quoteInput.invoiceNumber}`, {responseType: 'blob'}))\r\n        // .then(res => {\r\n            \r\n        //     const pdfBlob = new Blob([res.data], {type:'application/pdf'})\r\n        //     saveAs(pdfBlob, `invoiceNumber${quoteInput.invoiceNumber}`)\r\n        //     axios.post(`/sendInvoice/${quoteInput.invoiceNumber}`, {customerDetails})\r\n            \r\n            .then((res)=>{\r\n                console.log(res.data);\r\n                setUpdateToInvoice(false);\r\n                setFetching(false)\r\n                setAlert(true)\r\n                setAlertMessage('Updated To Invoice Successfully')\r\n                setTimeout(()=>{\r\n                    setAlert(false)\r\n                    setAlertMessage('')\r\n                }, 2000)\r\n            })\r\n        // })\r\n    }\r\n\r\n    const handleExportPdf = ()=>{\r\n        setAlert(true);\r\n        setAlertMessage('function coming soon!!!');\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Order #{orderData?.map(item => item.orderInput.orderNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewOrder(true)}}>Place New Order</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Order</p>\r\n                            <p className=\"option\" onClick={()=>{\r\n                                setUpdateToInvoice(true)\r\n                            }}>Convert To Invoice</p>\r\n                            <p className=\"option\" onClick={handleExportPdf}>Export PDF</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            {\r\n                upDateToInvoice &&\r\n            <div className='upDateQuoteToInvoice' ref={ref}>\r\n                <ConfirmMessageBox\r\n                    message=\"Confirm Update Order to Invoice??\"\r\n                    submit={handleInvoiceSubmit}\r\n                />\r\n            </div>\r\n            }\r\n\r\n            {\r\n                invoiceTemplateData?.map((item, i) => (\r\n                    <InvoiceTemplate\r\n                    key={item.i}\r\n                        data = {item}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                newOrder && \r\n                <PurchaseOrder\r\n                onClick={()=>{setNewOrder(false)}}\r\n                fetching={()=>{\r\n                    setAlert(true)\r\n                    setAlertMessage('Order Added Successfully')\r\n                    setTimeout(()=>{\r\n                        setAlert(false)\r\n                        setAlertMessage('')\r\n                    }, 2000)\r\n                }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrderDetails\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport './Invoices.css'\r\nimport PurchaseReturns from './PurchaseReturns'\r\nimport axios from 'axios'\r\nimport { baseURL } from './axios'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseReturnsPage() {\r\n    const history = useHistory()\r\n    const [newReturn, setNewReturn] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState({})\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n\r\n        setFilter(prev =>(\r\n            {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const fetchReturns = async(source, unMounted)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get('/purchaseReturns', {\r\n                cancelToken: source.token\r\n            })\r\n            setData(res.data)\r\n            setLoader(false)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchReturns(source, unMounted)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n    const returns = data\r\n\r\n    const handlePush = (route)=>{\r\n        history.push(route)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n            !loader && \r\n            <div className='Invoices'>\r\n                <div className=\"invoicesHeading\">\r\n                    <h1>Purchase Returns</h1>\r\n                    <button className=\"invoiceButton\" onClick={()=>{setNewReturn(true)}}>New Purchase Returns</button>\r\n                </div>\r\n\r\n                <div className=\"invoiceFilters\">\r\n                    <div className=\"nameFilter\">\r\n                        <input type=\"text\" name='nameFilter' value={filter.nameFilter} onChange={handleChange} className='filterInput' placeholder='Filter by customer name' />\r\n                    </div>\r\n\r\n                    <div className=\"amountFilter\">\r\n                        <input type=\"text\" name='amountFilter' value={filter.amountFilter} onChange={handleChange} className='filterInput' placeholder='Filter by amount' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"allDebtorsContainer\">\r\n                    <table className=\"allDebtorsTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Supplier Name</th>\r\n                                <th>Return Number</th>\r\n                                <th>Date</th>\r\n                                <th>Net Amount</th>\r\n                                <th>Total Discounts</th>\r\n                                <th>Total Other Additions</th>\r\n                                <th>VAT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                returns?.sort((a, b)=> new Date(b.returnInput.date) - new Date(a.returnInput.date)).filter(item => {\r\n                                    if(!filter.nameFilter){\r\n                                        if(!filter.amountFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    if(!filter.amountFilter){\r\n                                        if(!filter.nameFilter){\r\n                                            return true\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    if(item.supplierDetails.name?.toLowerCase().includes(filter.nameFilter?.toLowerCase())){return true}\r\n                                    if(item.netPayable?.toString().includes(filter.amountFilter)){return true}\r\n                                }).map((returns, i) => (\r\n                                    <tr key={returns._id} onClick={()=>{handlePush(`/purchase-returns/${returns._id}`)}} className='invoiceDetail'>\r\n                                        <td>{returns.supplierDetails.name}</td>\r\n                                        <td>{returns.returnsInput.returnNumber}</td>\r\n                                        <td>{new Date(returns.returnsInput.date).toLocaleDateString()}</td>\r\n                                        <td>{(Number(returns.netPayable).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td>{Number(returns.discountsAndVat.rebateValue) + Number(returns.discountsAndVat.tradeDiscountValue) + Number(returns.discountsAndVat.cashDiscountValue) }</td>\r\n                                        <td>{returns.otherAdditions?.map(item => item.amount).reduce((a, b) => a + b, 0)}</td>\r\n                                        <td>{(Number(returns.discountsAndVat.valueAddedTax).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    newReturn && <PurchaseReturns\r\n                    onClick={()=>{setNewReturn(false)}}\r\n                    refetch={()=>{\r\n                        setAlertMessage('Purchases Return Added Successfully')\r\n                        setAlert(true)\r\n                        setTimeout(()=>{\r\n                            setAlert(false)\r\n                            setAlertMessage('')\r\n                        })\r\n                    }}\r\n                    />\r\n                }\r\n            </div>\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseReturnsPage\r\n","import React, {useRef, useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport print from 'print-js'\r\nimport {baseURL} from './axios'\r\nimport './InvoiceDetails.css'\r\nimport PurchaseReturns from './PurchaseReturns'\r\nimport ReceiptTemplate from './ReceiptTemplate'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\n\r\nfunction PurchaseReturnDetails() {\r\n    const wrapperRef = useRef(null)\r\n    const {returnNumber} = useParams()\r\n    const [newReturn, setNewReturn] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [fetching, setFetching] = useState(false)\r\n    const [returnData, setReturnData] = useState([])\r\n    const [alert, setAlert] = useState(false)\r\n    const [alertMessage, setAlertMessage] = useState('')\r\n\r\n    const [styler, setStyler] = useState({\r\n        transform: 'translateY(-5rem)',\r\n        visibility: 'hidden'\r\n    })\r\n\r\n    const styles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        color: 'gray',\r\n        fontWeight: '550',\r\n        padding: '1rem',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '1rem',\r\n        transform : styler.transform,\r\n        visibility : styler.visibility,\r\n        transition: 'transform 0.5s ease',\r\n    }\r\n\r\n    const handleStyling = ()=>{\r\n        styler.visibility === 'hidden' ? setStyler({transform: 'translateY(0)', visibility: 'visible'}) : setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n    }\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n\r\n            return ()=>{\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            }\r\n        }, [])\r\n\r\n        function handleClickOutside(e){\r\n                const {current : wrap} = wrapperRef;\r\n                if(wrap && !wrap.contains(e.target)){\r\n                    setStyler({transform: 'translateY(-5rem)', visibility: 'hidden'})\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let unMounted = false;\r\n            let source = axios.CancelToken.source();\r\n\r\n            getReturn(source, unMounted)\r\n            return () => {\r\n                unMounted = true;\r\n                source.cancel('Cancelling request')\r\n            }\r\n        }, [])\r\n\r\n        const getReturn = async(source, unMounted)=>{\r\n            try {\r\n                setFetching(true)\r\n                const fetch = await baseURL.get(`/purchaseReturns/${returnNumber}`, {\r\n                    cancelToken: source.token\r\n                })\r\n                const res = await fetch.data\r\n                setReturnData(res)\r\n                setFetching(false)\r\n            } catch (err) {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    }else{\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    const handlePrint = ()=>{\r\n        setLoader(true)\r\n        setTimeout(()=>{\r\n            setLoader(false)\r\n            print({\r\n            printable : 'ReceiptTemplate',\r\n            type: 'html',\r\n            targetStyles: ['*'],\r\n            maxWidth: '120%',\r\n            documentTitle: '@HK Solutions',\r\n        })\r\n        }, 1000)\r\n    }\r\n\r\n    const item = returnData?.map(item => (\r\n        {\r\n            receiptInput: {\r\n                date: item.returnsInput.date,\r\n                receiptNumber: item.returnsInput.returnNumber,\r\n                customerName: item.returnsInput.customerName,\r\n                additionalInfo: item.returnsInput.additionalInfos\r\n            },\r\n            customerDetails: item.supplierDetails,\r\n            data: item.data,\r\n            additionsAndSubtractions: item.additionsAndSubtractions,\r\n            discountsAndVat: item.discountsAndVat,\r\n            otherAdditions: item.otherAdditions,\r\n            grossAmount: item.grossAmount,\r\n            netPayable: item.netPayable,\r\n        }\r\n    ))\r\n\r\n    const handleExportPdf = ()=>{\r\n        setAlert(true);\r\n        setAlertMessage('Function Coming Soon!!!');\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n            setAlertMessage('');\r\n        }, 2000)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='Invoices'>\r\n            {\r\n                !fetching && <div className=\"invoicesHeading\">\r\n                <h1>Return #{returnData?.map(item => item.returnsInput.returnNumber)}</h1>\r\n                <div className=\"invoiceDetailOptions invoicesHeading moreOptions\">\r\n                <button className=\"invoiceButton\" onClick={()=>{setNewReturn(true)}}>New Return</button>\r\n                    <div className=\"moreOptions invoicesHeading\" ref={wrapperRef}>\r\n                        <button className=\"invoiceButton\" onClick={handleStyling}>More Options <i className=\"fas fa-sort-down\"></i></button>\r\n                        <div className=\"moreOptionsCont\" style={{...styles}}>\r\n                            <p className=\"option\" onClick={handlePrint}>Print Return Statement</p>\r\n                            <p className=\"option\" onClick={handleExportPdf}>Export PDF</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            {\r\n                item?.map(item => (\r\n                    <ReceiptTemplate\r\n                        data = {item}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                newReturn && \r\n                <PurchaseReturns\r\n                onClick={()=>{setNewReturn(false)}}\r\n                refetch={() =>{\r\n                        setAlert(true);\r\n                        setAlertMessage('Purchase Return Added Successfully');\r\n                        setTimeout(() => {\r\n                        setAlert(false);\r\n                        setAlertMessage('');\r\n                    }, 2000)\r\n                    }}\r\n                />\r\n            }\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                fetching && <Loader/>\r\n            }\r\n            <Alert\r\n                alert={alert}\r\n                message={alertMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseReturnDetails\r\n","import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nfunction LineChart({labels, data1, data2, data3, tooltip1, tooltip2, tooltip3}) {\r\n    return (\r\n        <div className='Barchart'>\r\n            <Line\r\n                width= {200}\r\n                height= '70%'\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: tooltip1,\r\n                            data: data1,\r\n                            backgroundColor: '#B336D6'\r\n                        },\r\n                        {\r\n                            label: tooltip2,\r\n                            data: data2,\r\n                            backgroundColor: '#37D636'\r\n                        },\r\n                        {\r\n                            label: tooltip3,\r\n                            data: data3,\r\n                            backgroundColor: '#598A07'\r\n                        },\r\n                    ]\r\n                }}\r\n                options={\r\n                    {\r\n                        responsive: true,\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                            },\r\n                            title: {\r\n                            display: true,\r\n                            text: 'Profit and Loss Graph'\r\n                            }\r\n                        },\r\n                        scales: {\r\n                            xAxes: [\r\n                                {\r\n                                    grideLines: {\r\n                                        display: false\r\n                                    }\r\n                                }\r\n                            ],\r\n                            yAxes: [\r\n                                {\r\n                                    grideLines: {\r\n                                        display: false\r\n                                    },\r\n                                    ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        maintainAspectRatio: true\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react'\r\nimport {Doughnut} from 'react-chartjs-2'\r\n\r\nfunction DoughnutChart({labels, data, tooltip,}) {\r\n    return (\r\n        <div className=\"Barchart Doughnut\">\r\n            <Doughnut\r\n                width= '100%'\r\n                height= '100%'\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: tooltip,\r\n                            data: data,\r\n                            backgroundColor: ['#B336D6', '#37D636', '#F332D1']\r\n                        },\r\n                    ]\r\n                }}\r\n                options={\r\n                    {\r\n                        responsive: true,\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                            },\r\n                            title: {\r\n                            display: true,\r\n                            text: 'Chart.js Line Chart'\r\n                            }\r\n                        },\r\n                        scales: {\r\n                            xAxes: [\r\n                                {\r\n                                    grideLines: {\r\n                                        display: false\r\n                                    }\r\n                                }\r\n                            ],\r\n                            yAxes: [\r\n                                {\r\n                                    grideLines: {\r\n                                        display: false\r\n                                    },\r\n                                    ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        maintainAspectRatio: false\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\nfunction SingleBarChart({labels, tooltip, backgroundColors, data}) {\r\n    return (\r\n        <div className=\"Barchart\">\r\n                        <Bar\r\n                            width= '100%'\r\n                            height= '50%'\r\n                            data={{\r\n                                labels :labels,\r\n                                datasets:[\r\n                                    {\r\n                                        label: tooltip,\r\n                                        data: data,\r\n                                        backgroundColor: backgroundColors\r\n                                    }\r\n                                ]\r\n                            }}\r\n                            options={\r\n                            {\r\n                                scales: {\r\n                                    xAxes: [\r\n                                        {\r\n                                            grideLines: {\r\n                                                display: false\r\n                                            }\r\n                                        }\r\n                                    ],\r\n                                    yAxes: [\r\n                                        {\r\n                                            grideLines: {\r\n                                                display: false\r\n                                            },\r\n                                            ticks: {\r\n                                            beginAtZero: true\r\n                                        }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            {\r\n                                maintainAspectRatio: true\r\n                            }\r\n                        }\r\n                            />\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default SingleBarChart\r\n","import React, {useState, useEffect, useRef} from \"react\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport \"./Dashboard.css\";\r\nimport LineChart from \"./LineChart\";\r\nimport DoughnutChart from \"./Doughnut\";\r\nimport SingleBarChart from \"./SingleBarChart\";\r\nimport {baseURL} from \"./axios\"\r\nimport Loader from './Loader';\r\n\r\nfunction Dashboard() {\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(true)\r\n    const [data, setData] = useState([])\r\n\r\n    const fetchData = async(unMounted, source)=>{\r\n                await baseURL.get('/', {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                setData(res.data)\r\n                setFetching(false)\r\n            })\r\n            .catch(err => {\r\n                if (!unMounted) {\r\n                    if (axios.isCancel(err)) {\r\n                        console.log('Request Cancelled');\r\n                    } else {\r\n                        console.log('Something went wrong');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    useEffect(()=>{\r\n        let unMounted = false;\r\n        let source = axios.CancelToken.source();\r\n        fetchData(unMounted, source)\r\n    return () => {\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [])\r\n\r\n  let janSales = []; let febSales = []; let marSales = []; let aprSales = []; let maySales = []; let junSales = []; let julSales = []; let augSales = []; let sepSales = []; let octSales = []; let novSales  = [];let decSales = [];\r\n\r\n  let janSalesReturns = []; let febSalesReturns = []; let marSalesReturns = []; let aprSalesReturns = []; let maySalesReturns = []; let junSalesReturns = []; let julSalesReturns = []; let augSalesReturns = []; let sepSalesReturns = []; let octSalesReturns = []; let novSalesReturns  = [];let decSalesReturns = [];\r\n\r\n  let janPurchases = []; let febPurchases = []; let marPurchases = []; let aprPurchases = []; let mayPurchases = []; let junPurchases = []; let julPurchases = []; let augPurchases = []; let sepPurchases = []; let octPurchases = []; let novPurchases  = [];let decPurchases = [];\r\n\r\n  let janPurchaseReturns = []; let febPurchaseReturns = []; let marPurchaseReturns = []; let aprPurchaseReturns = []; let mayPurchaseReturns = []; let junPurchaseReturns = []; let julPurchaseReturns = []; let augPurchaseReturns = []; let sepPurchaseReturns = []; let octPurchaseReturns = []; let novPurchaseReturns  = [];let decPurchaseReturns = [];\r\n\r\n  let janPurchaseExp = []; let febPurchaseExp = []; let marPurchaseExp = []; let aprPurchaseExp = []; let mayPurchaseExp = []; let junPurchaseExp = []; let julPurchaseExp = []; let augPurchaseExp = []; let sepPurchaseExp = []; let octPurchaseExp = []; let novPurchaseExp  = [];let decPurchaseExp = [];\r\n\r\n  let janEntries = []; let febEntries = []; let marEntries = []; let aprEntries = []; let mayEntries = []; let junEntries = []; let julEntries = []; let augEntries = []; let sepEntries = []; let octEntries = []; let novEntries  = [];let decEntries = [];\r\n\r\n  let janExits = []; let febExits = []; let marExits = []; let aprExits = []; let mayExits = []; let junExits = []; let julExits = []; let augExits = []; let sepExits = []; let octExits = []; let novExits  = [];let decExits = [];\r\n\r\n  const switcher = (key, jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec, amount)=>{\r\n    switch (key) {\r\n      case 0:\r\n        jan.push(amount)\r\n        break;\r\n      \r\n      case 1:\r\n        feb.push(amount)\r\n        break;\r\n\r\n      case 2:\r\n        mar.push(amount)\r\n        break;\r\n\r\n      case 3:\r\n        apr.push(amount)\r\n        break;\r\n\r\n      case 4:\r\n        may.push(amount)\r\n        break;\r\n\r\n      case 5:\r\n        jun.push(amount)\r\n        break;\r\n\r\n      case 6:\r\n        jul.push(amount)\r\n        break;\r\n\r\n      case 7:\r\n        aug.push(amount)\r\n        break;\r\n\r\n      case 8:\r\n        sep.push(amount)\r\n        break;\r\n\r\n      case 9:\r\n        oct.push(amount)\r\n        break;\r\n\r\n      case 10:\r\n        nov.push(amount)\r\n        break;\r\n\r\n      case 11:\r\n        dec.push(amount)\r\n        break;\r\n    \r\n      default:\r\n        return null\r\n        break;\r\n    }\r\n  }\r\n\r\n  const reducer = (amount)=>{\r\n    return amount.reduce((a, b) => Number(a) + Number(b), 0)\r\n  }\r\n\r\n  data?.sales?.filter(item => item.saleType !== 'sales returns').map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.amount\r\n\r\n    switcher(key, janSales, febSales, marSales, aprSales, maySales, junSales, julSales, augSales, sepSales, octSales, novSales, decSales, amount)\r\n  })\r\n\r\n  data?.sales?.filter(item => item.saleType === 'sales returns').map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.amount\r\n\r\n    switcher(key, janSalesReturns, febSalesReturns, marSalesReturns, aprSalesReturns, maySalesReturns, junSalesReturns, julSalesReturns, augSalesReturns, sepSalesReturns, octSalesReturns, novSalesReturns, decSalesReturns, amount)\r\n  })\r\n\r\n  const janSale = reducer(janSales) - reducer(janSalesReturns)\r\n  const febSale = reducer(febSales) - reducer(febSalesReturns)\r\n  const marSale = reducer(marSales) - reducer(marSalesReturns)\r\n  const aprSale = reducer(aprSales) - reducer(aprSalesReturns)\r\n  const maySale = reducer(maySales) - reducer(maySalesReturns)\r\n  const junSale = reducer(junSales) - reducer(junSalesReturns)\r\n  const julSale = reducer(julSales) - reducer(julSalesReturns)\r\n  const augSale = reducer(augSales) - reducer(augSalesReturns)\r\n  const sepSale = reducer(sepSales) - reducer(sepSalesReturns)\r\n  const octSale = reducer(octSales) - reducer(octSalesReturns)\r\n  const novSale = reducer(novSales) - reducer(novSalesReturns)\r\n  const decSale = reducer(decSales) - reducer(decSalesReturns)\r\n\r\n  \r\n\r\n  data?.purchases?.filter(item => item.purchaseType !== 'purchase returns').map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.amount\r\n    switcher(key, janPurchases, febPurchases, marPurchases, aprPurchases, mayPurchases, junPurchases, julPurchases, augPurchases, sepPurchases, octPurchases, novPurchases, decPurchases, amount)\r\n  })\r\n\r\n  data?.purchases?.filter(item => item.purchaseType === 'purchase returns').map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.amount\r\n    switcher(key, janPurchaseReturns, febPurchaseReturns, marPurchaseReturns, aprPurchaseReturns, mayPurchaseReturns, junPurchaseReturns, julPurchaseReturns, augPurchaseReturns, sepPurchaseReturns, octPurchaseReturns, novPurchaseReturns, decPurchaseReturns, amount)\r\n  })\r\n\r\n  const janPurchase = reducer(janPurchases) - reducer(janPurchaseReturns)\r\n  const febPurchase = reducer(febPurchases) - reducer(febPurchaseReturns)\r\n  const marPurchase = reducer(marPurchases) - reducer(marPurchaseReturns)\r\n  const aprPurchase = reducer(aprPurchases) - reducer(aprPurchaseReturns)\r\n  const mayPurchase = reducer(mayPurchases) - reducer(mayPurchaseReturns)\r\n  const junPurchase = reducer(junPurchases) - reducer(junPurchaseReturns)\r\n  const julPurchase = reducer(julPurchases) - reducer(julPurchaseReturns)\r\n  const augPurchase = reducer(augPurchases) - reducer(augPurchaseReturns)\r\n  const sepPurchase = reducer(sepPurchases) - reducer(sepPurchaseReturns)\r\n  const octPurchase = reducer(octPurchases) - reducer(octPurchaseReturns)\r\n  const novPurchase = reducer(novPurchases) - reducer(novPurchaseReturns)\r\n  const decPurchase = reducer(decPurchases) - reducer(decPurchaseReturns)\r\n\r\n  data?.purchaseExpenses?.map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.value\r\n    switcher(key, janPurchaseExp, febPurchaseExp, marPurchaseExp, aprPurchaseExp, mayPurchaseExp, junPurchaseExp, julPurchaseExp, augPurchaseExp, sepPurchaseExp, octPurchaseExp, novPurchaseExp, decPurchaseExp, amount)\r\n  })\r\n\r\n  const janPurchaseExpVal = reducer(janPurchaseExp)\r\n  const febPurchaseExpVal = reducer(febPurchaseExp)\r\n  const marPurchaseExpVal = reducer(marPurchaseExp) \r\n  const aprPurchaseExpVal = reducer(aprPurchaseExp)\r\n  const mayPurchaseExpVal = reducer(mayPurchaseExp) \r\n  const junPurchaseExpVal = reducer(junPurchaseExp) \r\n  const julPurchaseExpVal = reducer(julPurchaseExp)\r\n  const augPurchaseExpVal = reducer(augPurchaseExp) \r\n  const sepPurchaseExpVal = reducer(sepPurchaseExp) \r\n  const octPurchaseExpVal = reducer(octPurchaseExp) \r\n  const novPurchaseExpVal = reducer(novPurchaseExp)\r\n  const decPurchaseExpVal = reducer(decPurchaseExp)\r\n\r\n  data?.inventory?.filter(item => item.exitOrEntry === 'entry').map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.amount\r\n    switcher(key, janEntries, febEntries, marEntries, aprEntries, mayEntries, junEntries, julEntries, augEntries, sepEntries, octEntries, novEntries, decEntries, amount)\r\n  })\r\n\r\n  const janEntry = reducer(janEntries)\r\n  const febEntry = reducer(febEntries)\r\n  const marEntry = reducer(marEntries) \r\n  const aprEntry = reducer(aprEntries)\r\n  const mayEntry = reducer(mayEntries) \r\n  const junEntry = reducer(junEntries) \r\n  const julEntry = reducer(julEntries)\r\n  const augEntry = reducer(augEntries) \r\n  const sepEntry = reducer(sepEntries) \r\n  const octEntry = reducer(octEntries) \r\n  const novEntry = reducer(novEntries)\r\n  const decEntry = reducer(decEntries)\r\n\r\n  data?.inventory?.filter(item => item.exitOrEntry === 'exit').map(item => {\r\n    const key = new Date(item.date).getMonth()\r\n    const amount = item.amount\r\n    switcher(key, janExits, febExits, marExits, aprExits, mayExits, junExits, julExits, augExits, sepExits, octExits, novExits, decExits, amount)\r\n  })\r\n\r\n  const janExit = reducer(janExits)\r\n  const febExit = reducer(febExits)\r\n  const marExit = reducer(marExits) \r\n  const aprExit = reducer(aprExits)\r\n  const mayExit = reducer(mayExits) \r\n  const junExit = reducer(junExits) \r\n  const julExit = reducer(julExits)\r\n  const augExit = reducer(augExits) \r\n  const sepExit = reducer(sepExits) \r\n  const octExit = reducer(octExits) \r\n  const novExit = reducer(novExits)\r\n  const decExit = reducer(decExits)\r\n\r\n  const janStock = janEntry - janExit\r\n  const febStock = febEntry - febExit\r\n  const marStock = marEntry - marExit \r\n  const aprStock = aprEntry - aprExit\r\n  const mayStock = mayEntry - mayExit \r\n  const junStock = junEntry - junExit \r\n  const julStock = julEntry - julExit\r\n  const augStock = augEntry - augExit \r\n  const sepStock = sepEntry - sepExit \r\n  const octStock = octEntry - octExit \r\n  const novStock = novEntry - novExit\r\n  const decStock = decEntry - decExit\r\n\r\n  const janCOGS = janPurchase + janPurchaseExpVal - janStock\r\n  const febCOGS = febPurchase + febPurchaseExpVal - febStock\r\n  const marCOGS = marPurchase + marPurchaseExpVal - marStock \r\n  const aprCOGS = aprPurchase + aprPurchaseExpVal - aprStock\r\n  const mayCOGS = mayPurchase + mayPurchaseExpVal - mayStock \r\n  const junCOGS = junPurchase + junPurchaseExpVal - junStock \r\n  const julCOGS = julPurchase + julPurchaseExpVal - julStock\r\n  const augCOGS = augPurchase + augPurchaseExpVal - augStock \r\n  const sepCOGS = sepPurchase + sepPurchaseExpVal - sepStock \r\n  const octCOGS = octPurchase + octPurchaseExpVal - octStock \r\n  const novCOGS = novPurchase + novPurchaseExpVal - novStock\r\n  const decCOGS = decPurchase + decPurchaseExpVal - decStock\r\n\r\n  const janGP = janSale - janCOGS\r\n  const febGP = febSale - febCOGS\r\n  const marGP = marSale - marCOGS \r\n  const aprGP = aprSale - aprCOGS\r\n  const mayGP = maySale - mayCOGS \r\n  const junGP = junSale - junCOGS \r\n  const julGP = julSale - julCOGS\r\n  const augGP = augSale - augCOGS \r\n  const sepGP = sepSale - sepCOGS \r\n  const octGP = octSale - octCOGS \r\n  const novGP = novSale - novCOGS\r\n  const decGP = decSale - decCOGS\r\n\r\n    const sales = data.sales?.filter(item => item.saleType !== 'sales returns').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const creditSales = data.sales?.filter(item => item.saleType === 'credit').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const salesReturns = data.sales?.filter(item => item.saleType === 'sales returns').map(item => item.amount).reduce((a, b) => Number(a) + Number(b), 0).toFixed(2) || 0\r\n\r\n    const purchases = data.purchases?.filter(item => item.purchaseType !== 'purchase returns').map(item => item.amount).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const purchaseReturns = data.purchases?.filter(item => item.purchaseType === 'purchase returns').map(item => item.amount).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const creditPurchases = data.purchases?.filter(item => item.purchaseType === 'credit').map(item => item.amount).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const purchaseExpenses = data.purchaseExpenses?.map(item => item.value).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const inventoryEnteries = (data.inventory?.filter(item => item.exitOrEntry === 'entry').map(item => item.amount).reduce((a, b) => a + b, 0)) || 0\r\n\r\n    const inventoryExits = data.inventory?.filter(item => item.exitOrEntry === 'exit').map(item => item.amount).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const closingStock = inventoryEnteries - inventoryExits || 0\r\n\r\n    const costOfSales = purchases + purchaseExpenses - purchaseReturns - closingStock || 0\r\n\r\n    const netSales = sales - salesReturns || 0\r\n    \r\n    const discountsReceived = data.discounts?.filter(item => item.typeOfDiscount === 'received')\r\n    let rebatesReceived = []\r\n    let cashDiscountsReceived = []\r\n    let tradeDiscountsReceived = []\r\n\r\n    discountsReceived?.forEach(element => {\r\n        if (element.tradeDiscount !== 0 || element.tradeDiscount !== '0.00') {\r\n            tradeDiscountsReceived.push(element.tradeDiscount)\r\n        }\r\n\r\n        if (element.cashDiscount !== 0 || element.cashDiscount !== '0.00') {\r\n            cashDiscountsReceived.push(element.cashDiscount)\r\n        }\r\n\r\n        if (element.rebate !== 0 || element.rebate !== '0.00') {\r\n            rebatesReceived.push(element.rebate)\r\n        }\r\n    })\r\n\r\n    const totalDiscountsAllowed = data.discounts?.filter(item => item.typeOfDiscount === 'allowed').map(item => (item.rebate + item.cashDiscount + item.tradeDiscount)).reduce((acc, item) => acc + item, 0)\r\n\r\n\r\n    const totalOtherIncome = data.otherIncome?.map(item => item.value).reduce((a, b) => a + b, 0) || 0\r\n\r\n    const totalDiscountsReceived = discountsReceived?.map(item => Number(item.rebate) + Number(item.cashDiscount) + Number(item.tradeDiscount)).reduce((a, b) => a + b, 0) || 0\r\n\r\n\r\n\r\n    const expenses = data.expenses\r\n    const totalExp = (data.expenses?.map(exp => exp.amount).reduce((a, b) => a + b, 0)) + totalDiscountsAllowed || 0\r\n\r\n    const totalAdminExp = expenses?.filter(item => item.category === 'administration').map(item => item.amount).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const totalDistExp = expenses?.filter(item => item.category === 'distribution').map(item => item.amount).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const totalOtherExp = expenses?.filter(item => item.category === 'other').map(item => item.amount).reduce((a, b) => Number(a) + Number(b), 0) || 0\r\n\r\n    const today = new Date()\r\n    const thisYear = today.getFullYear()\r\n    const thisDay = today.getDate()\r\n    const thisMonth = today.getMonth()\r\n    const fixedAssetsDep = data.fixedAssets\r\n\r\n    let depInfos = []\r\n    fixedAssetsDep?.forEach(asset => {\r\n        const element = asset.depInfos\r\n\r\n        element.forEach(item => {\r\n            item.assetName = asset.asset.assetName\r\n            item.cost = asset.asset.cost\r\n            if (item.year === thisYear) {\r\n                depInfos.push(item)\r\n            }\r\n        })\r\n    })\r\n\r\n    const totalFixedAssetCost = (depInfos.map(item => item.cost).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2) || 0\r\n\r\n    const totalNBV = (depInfos.map(item => item.nbv).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2) || 0\r\n\r\n    const totalDep = (depInfos.map(item => item.endOfYearDep).reduce((a, b) => Number(a) + Number(b), 0)).toFixed(2) || 0\r\n\r\n    const grossProfit = netSales - costOfSales || 0\r\n\r\n    const netResult = grossProfit + totalOtherIncome + totalDiscountsReceived - totalExp - totalDep || 0\r\n\r\n    const ebdit = grossProfit + totalOtherIncome + totalDiscountsReceived - totalExp\r\n\r\n    const grossProfitMargin = ((Number(grossProfit)/Number(sales))* 100).toFixed(2) || 0\r\n\r\n    const netProfitMargin = ((Number(netResult)/Number(sales))* 100).toFixed(2) || 0\r\n\r\n    const totalDebtors = data?.debtors?.map(item => item.balanceDue).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const debtorsDays = ((((totalDebtors/creditSales) * 360)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") || 0\r\n\r\n    const totalCreditors = data?.suppliers?.map(item => item.balanceDue).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const creditorsDays = ((((totalCreditors/creditPurchases) * 360)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") || 0\r\n\r\n    const cashIn = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'cash').filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const cashOut = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'cash').filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const cash = Number(cashIn) - Number(cashOut)\r\n\r\n    const bankIn = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'bank').filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const bankOut = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'bank').filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const bank = Number(bankIn) - Number(bankOut)\r\n\r\n    const mobileMoneyIn = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'mobileMoney').filter(item => item.inOrOut === 'in').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const mobileMoneyOut = data?.meansOfPayment?.filter(item => item.meansOfPayment === 'mobileMoney').filter(item => item.inOrOut === 'out').map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const mobileMoney = Number(mobileMoneyIn) - Number(mobileMoneyOut)\r\n\r\n    const totalCapital = data?.capital?.map(item => item.totalContribution).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n\r\n    const totalLongtermLiab = data?.longtermLiabilities?.map(item => item.amount).reduce((a, b) => a + b, 0).toFixed(2) || 0\r\n    const longtermLiabilities = data?.longtermLiabilities\r\n\r\n    const vatInvoiced = data.vat?.filter(item => item.vatType === 'invoiced').map(item => item.value).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const vatRecoverable = data.vat?.filter(item => item.vatType === 'recoverable').map(item => item.value).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const netVat = Number(vatInvoiced) - Number(vatRecoverable)\r\n\r\n    const paidInvoices = data?.salesInvoices?.filter(item => Number(item.netPayable) === Number(item.totalPaid))\r\n\r\n    const unpaidInvoices = data?.salesInvoices?.filter(item => Number(item.netPayable) > Number(item.totalPaid))\r\n\r\n    const unpaidPurchaseInvoices = data?.purchaseInvoices?.filter(item => Number(item.netPayable) > Number(item.totalPaid))\r\n\r\n    let overDueInvoices = []\r\n    let dueThisMonthInvoices = []\r\n    let notDueInvoices = []\r\n    let purchaseInvoicesDueThisMonth = []\r\n\r\n    unpaidInvoices?.forEach(invoice => {\r\n      const dueDate = new Date(invoice.dueDate)\r\n      const dueMonth = dueDate.getMonth()\r\n      const dueYear = dueDate.getFullYear()\r\n      const dueDay = dueDate.getDate()\r\n      if (dueYear === thisYear) {\r\n        if (dueMonth < thisMonth) {\r\n          overDueInvoices.push(invoice)\r\n        }\r\n        if (dueMonth === thisMonth) {\r\n          if (dueDay < thisDay) {\r\n            overDueInvoices.push(invoice)\r\n          }\r\n          if (dueDay >= thisDay) {\r\n            dueThisMonthInvoices.push(invoice)\r\n          }\r\n        }\r\n        if (dueMonth > thisMonth) {\r\n          notDueInvoices.push(invoice)\r\n        }\r\n      }\r\n    })\r\n\r\n    unpaidPurchaseInvoices?.forEach(item => {\r\n      const dueDate = new Date(item.dueDate)\r\n      const dueMonth = dueDate.getMonth()\r\n      const dueYear = dueDate.getFullYear()\r\n      if (dueYear === thisYear) {\r\n        if (dueMonth === thisMonth) {\r\n          purchaseInvoicesDueThisMonth.push(item)\r\n        }\r\n      }\r\n    })\r\n\r\n    const totalOverDueInvoices = overDueInvoices?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const totalDueThisMonthInvoices = dueThisMonthInvoices?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0)\r\n\r\n    const totalNotDueInvoices = notDueInvoices?.map(item => item.balanceDue).reduce((a, b) => Number(a) + Number(b), 0)\r\nconsole.log(data);\r\n  return (\r\n    <div className=\"Dashboard Invoices\">\r\n      <div className=\"treasuryBalances\">\r\n        <div className=\"companyName gridItem\">\r\n          <h2>XYZ Ltd to the world...</h2>\r\n        </div>\r\n        <div className=\"itemBalance gridItem\">\r\n          <p className=\"itemCaption\">Cash Balance</p>\r\n          <p className=\"itemValue\">{(Number(cash)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n        <div className=\"itemBalance gridItem\">\r\n          <p className=\"itemCaption\">Bank Balance</p>\r\n          <p className=\"itemValue\">{(Number(bank)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n        <div className=\"itemBalance gridItem\">\r\n          <p className=\"itemCaption\">Mobile Money Balance</p>\r\n          <p className=\"itemValue\">{(Number(mobileMoney)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"profitAndLossSection\">\r\n        <div className=\"profitAndLossGraph\">\r\n          <LineChart\r\n            labels={[\r\n              \"Jan\",\r\n              \"Feb\",\r\n              \"Mar\",\r\n              \"Apr\",\r\n              \"May\",\r\n              \"Jun\",\r\n              \"Jul\",\r\n              \"Aug\",\r\n              \"Sept\",\r\n              \"Oct\",\r\n              \"Nov\",\r\n              \"Dec\",\r\n            ]}\r\n            data1={[janSale, febSale, marSale, aprSale, maySale, junSale, julSale, augSale, sepSale, octSale, novSale, decSale]}\r\n            tooltip1=\"Sales\"\r\n            data2={[janCOGS, febCOGS, marCOGS, aprCOGS, mayCOGS, junCOGS, julCOGS, augCOGS, sepCOGS, octCOGS, novCOGS, decCOGS]}\r\n            tooltip2=\"COGS\"\r\n            data3={[\r\n              janGP, febGP, marGP, aprGP, mayGP, junGP, julGP, augGP, sepGP, octGP, novGP, decGP,\r\n            ]}\r\n            tooltip3=\"Gross Profit\"\r\n          />\r\n        </div>\r\n        <div className=\"profitAndLossSummary\">\r\n          <div className=\"treasuryBalances\">\r\n            <div className=\"companyName gridItem\">\r\n              <p className=\"itemCaption\">Net Profit</p>\r\n              <p className=\"itemValue\">{(Number(netResult)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            </div>\r\n            <div className=\"itemBalance gridItem\">\r\n              <p className=\"itemCaption\">Net Profit Margin</p>\r\n              <p className=\"itemValue\">{netProfitMargin}%</p>\r\n            </div>\r\n            <div className=\"itemBalance gridItem\">\r\n              <p className=\"itemCaption\">Gross Profit</p>\r\n              <p className=\"itemValue\">{(Number(grossProfit)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            </div>\r\n            <div className=\"itemBalance gridItem\">\r\n              <p className=\"itemCaption\">Gross Profit Margin</p>\r\n              <p className=\"itemValue\">{grossProfitMargin}%</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"reportsSection\">\r\n        <div className=\"incomeStatementSection\">\r\n          <h3>Summarised Income Statement</h3>\r\n          <table className='summaryReport'>\r\n            <thead>\r\n              <tr>\r\n                <th>Elements</th>\r\n                <th>Calc</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Sales</td>\r\n                <td></td>\r\n                <td>{Number(sales)?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Cost of Sales</td>\r\n                <td></td>\r\n                <td><u>({(Number(costOfSales)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></td>\r\n              </tr>\r\n              <tr>\r\n                <td><b>Gross Profit</b></td>\r\n                <td></td>\r\n                <td><b>{(Number(grossProfit)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Other Income</td>\r\n                <td></td>\r\n                <td>{(Number(totalOtherIncome)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n              </tr>\r\n              <tr>\r\n                <td><b><u>Expenses</u></b></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Admin</td>\r\n                <td>{(Number(totalAdminExp)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Distribution</td>\r\n                <td>{(Number(totalDistExp)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Other Exp</td>\r\n                <td>{(Number(totalOtherExp)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Depreciation</td>\r\n                <td><u>{(Number(totalDep)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                <td><u>({((Number(totalDep) + Number(totalExp))?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></td>\r\n              </tr>\r\n              <tr>\r\n                <td><b><u>EBIT</u></b></td>\r\n                <td></td>\r\n                <td><b><u>{(Number(netResult)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></b></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"invoicesAndExpensesByNatureSection\">\r\n          <DoughnutChart\r\n            labels={['OverDue', 'Not Due', 'Due this Month']}\r\n            data={[totalOverDueInvoices, totalNotDueInvoices, totalDueThisMonthInvoices]}\r\n          />\r\n          <SingleBarChart\r\n            data={[Number(totalDistExp), Number(totalAdminExp), Number(totalOtherExp)]}\r\n            labels={['Distribution', 'AdminiStrative', 'Others']}\r\n            tooltip='Expenses by type'\r\n            backgroundColors={['#9AD636', '#D63689', '#088A07',]}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"balanceSheetSummarySection\">\r\n          <h3>Summarised Balance Sheet</h3>\r\n          <table className='summaryReport'>\r\n            <thead>\r\n              <tr>\r\n                <th>Elements</th>\r\n                <th>Calc</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Net Fixed Assets</td>\r\n                <td></td>\r\n                <td>{(Number(totalNBV)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Total Current Assets</td>\r\n                <td></td>\r\n                <td><u>{((Number(mobileMoney) + Number(cash) + Number(bank) + Number(closingStock) + Number(totalDebtors)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n              </tr>\r\n              <tr>\r\n                <td><b>Total Assets</b></td>\r\n                <td></td>\r\n                <td><b>{((Number(mobileMoney) + Number(cash) + Number(bank) + Number(closingStock) + Number(totalDebtors) + Number(totalNBV)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</b></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Total Current Liabilities</td>\r\n                <td>{((Number(totalCreditors) + Number(netVat)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Total Longterm Liabilities</td>\r\n                <td><u>{totalLongtermLiab.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                <td><u>({((Number(totalLongtermLiab) + Number(totalCreditors) + Number(netVat)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})</u></td>\r\n              </tr>\r\n              <tr>\r\n                <td><b>Net Assets</b></td>\r\n                <td></td>\r\n                <td><b><u>{(((Number(mobileMoney) + Number(cash) + Number(bank) + Number(closingStock) + Number(totalDebtors) + Number(totalNBV)) - Number(totalCreditors) - Number(netVat) - Number(totalLongtermLiab)).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></b></td>\r\n              </tr>\r\n              <tr>\r\n                <td><b><u>Financed By:</u></b></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Capital</td>\r\n                <td>{(Number(totalCapital)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>EBIT</td>\r\n                <td><u>{((Number(ebdit) - Number(totalDep))?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td><b><u>Net Capital</u></b></td>\r\n                <td><b><u>{((Number(totalCapital) + (Number(ebdit) - Number(totalDep)))?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></b></td>\r\n                <td><b><u>{((Number(totalCapital) + (Number(ebdit) - Number(totalDep)))?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</u></b></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"invoicesDueThisMonth\">\r\n            <p><b>Customer Invoices Due this Month</b></p>\r\n            {\r\n              dueThisMonthInvoices?.map(item => (\r\n                <div className='dueInvoice' onClick={()=>{\r\n                  history.push(`/invoices/${item._id}`)\r\n                }}>\r\n                  <p>Invoice #{item.invoiceInput.invoiceNumber}</p>\r\n                  <p>{(Number(item.balanceDue?.toFixed(2))).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                </div>\r\n              ))\r\n            }\r\n        </div>\r\n        <div className=\"supplierInvoicesDueThisMonth\">\r\n            <p><b>Supplier Invoices Due this Month</b></p>\r\n          {\r\n            purchaseInvoicesDueThisMonth?.map(item => (\r\n                <div className='dueInvoice' onClick={()=>{\r\n                  history.push(`/purchase-invoices/${item._id}`)\r\n                }}>\r\n                  <p>{item.invoiceInput.invoiceNumber}</p>\r\n                  <p>{(Number(item.balanceDue?.toFixed(2))).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n                </div>\r\n              ))\r\n          }\r\n        </div>\r\n        <div className=\"netDebtorsAndCreditors\">\r\n          <div className=\"treasuryBalances\">\r\n            <div className=\"companyName gridItem\">\r\n              <p className=\"itemCaption\">Total Debtors</p>\r\n              <p className=\"itemValue\">{(Number(totalDebtors)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            </div>\r\n            <div className=\"itemBalance gridItem\">\r\n              <p className=\"itemCaption\">Debtors Collection Period</p>\r\n              <p className=\"itemValue\">{debtorsDays} days</p>\r\n            </div>\r\n            <div className=\"itemBalance gridItem\">\r\n              <p className=\"itemCaption\">Total Creditors</p>\r\n              <p className=\"itemValue\">{(Number(totalCreditors)?.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            </div>\r\n            <div className=\"itemBalance gridItem\">\r\n              <p className=\"itemCaption\">Creditors Payment Period</p>\r\n              <p className=\"itemValue\">{creditorsDays} days</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {\r\n        fetching && <Loader />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport {useState, useRef, useEffect} from 'react'\nimport Nav from './Components/Nav'\nimport Sales from './Components/Sales'\nimport CustomersPage from './Components/CustomersPage';\nimport CustomerDetails from './Components/CustomerDetails';\nimport Purchases from './Components/Purchases';\nimport SuppliersPage from './Components/SuppliersPage';\nimport SupplierDetails from './Components/SupplierDetails'\nimport ExpensesPage from './Components/ExpensesPage';\nimport InventoriesPage from './Components/InventoriesPage';\nimport InventoryPage from './Components/InventoryPage'\nimport LiquidityPage from './Components/LiquidityPage'\nimport CapitalAndFixedAssets from './Components/CapitalAndFixedAssets'\nimport FixedAsset from './Components/FixedAsset';\nimport Shareholder from './Components/Shareholder'\nimport Liability from './Components/Liability'\nimport Reports from './Components/Reports'\nimport ReviewsPage from './Components/RiviewsPage'\nimport Quotation from './Components/Quotation';\nimport Invoice from './Components/Invoice'\nimport Receipt from './Components/Receipt'\nimport ReceivePayment from './Components/ReceivePayment'\nimport CreditNote from './Components/CreditNote'\nimport PurchaseOrder from './Components/PurchaseOrder'\nimport PurchaseInvoice from './Components/PurchaseInvoice'\nimport CashPurchase from './Components/CashPurchase'\nimport MakePayment from './Components/MakePayment'\nimport PurchaseReturns from './Components/PurchaseReturns'\nimport NewExpense from './Components/NewExpense'\nimport Alert from './Components/Alert'\nimport DebitNote from './Components/DebitNote'\nimport SalesAndPurchaseOptions from './Components/SalesOptions'\nimport Invoices from './Components/Invoices'\nimport InvoiceDetails from './Components/InvoiceDetails'\nimport Receipts from './Components/Receipts'\nimport ReceiptDetails from './Components/ReceiptDetails'\nimport CreditNotes from './Components/CreditNotes'\nimport CreditNoteDetails from './Components/CreditNoteDetails'\nimport Quotes from './Components/Quotes'\nimport QuoteDetails from './Components/QuoteDetails'\nimport PurchaseInvoices from './Components/PurchaseInvoices'\nimport PurchaseInvoiceDetails from './Components/PurchaseInvoiceDetails'\nimport PurchaseReceipts from './Components/PurchaseReceipts'\nimport PurchaseReceiptDetails from './Components/PurchaseReceiptDetails'\nimport PurchaseOrders from './Components/PurchaseOrders';\nimport PurchaseOrderDetails from './Components/PurchaseOrderDetails';\nimport PurchaseReturnsPage from './Components/PurchaseReturnsPage'\nimport PurchaseReturnDetails from './Components/PurchaseReturnDetails'\nimport AddReview from './Components/AddReview'\nimport Dashboard from './Components/Dashboard'\n\nfunction App() {\n  const [newTran, setNewTran] = useState(false)\n  const [newQuotation, setNewQuotation] = useState(false)\n  const [newInvoice, setNewInvoice] = useState(false)\n  const [newCreditNote, setNewCreditNote] = useState(false)\n  const [newReceipt, setNewReceipt] = useState(false)\n  const [newReceivePayment, setNewReceivePayment] = useState(false)\n  const [newExpense, setNewExpense] = useState(false)\n  const [newPurchaseOrder, setNewPurchaseOrder] = useState(false)\n  const [newPurchaseInvoice, setNewPurchaseInvoice] = useState(false)\n  const [newCashPurchase, setNewCashPurchase] = useState(false)\n  const [newMakePayment, setNewMakePayment] = useState(false)\n  const [newPurchaseReturns, setNewPurchaseReturns] = useState(false)\n  const [newDebitNote, setNewDebitNote] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertMessage, setAlertMessage] = useState('')\n  return (\n    <Router>\n      <Switch>\n        <div className=\"App\">\n\n          <Nav click={()=>{setNewTran(!newTran)}}/>\n          {\n            newTran && \n            <div className=\"Home\">\n              <SalesAndPurchaseOptions\n                    onClick={()=>{setNewTran(!true)}}\n                    newQuotation={() => {\n                    setNewTran(false)\n                    setTimeout(() => {\n                      setNewQuotation(true)\n                      }, 500)\n                    }}\n\n                    newInvoice={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewInvoice(true)\n                        }, 500)\n                    }}\n\n                    newCreditNote={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewCreditNote(true)\n                        }, 500)\n                    }}\n\n                    newReceipt={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewReceipt(true)\n                        }, 500)\n                    }}\n\n                    newReceivePayment={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewReceivePayment(true)\n                        }, 500)\n                    }}\n\n                    newPurchaseInvoice={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewPurchaseInvoice(true)\n                        }, 500)\n                    }}\n\n                    newMakePayment={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewMakePayment(true)\n                        }, 500)\n                    }}\n\n                    newDebitNote={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewDebitNote(true)\n                        })\n                    }}\n\n                    newPurchaseReturns={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewPurchaseReturns(true)\n                        }, 500)\n                    }}\n\n                    newPurchaseOrder={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewPurchaseOrder(true)\n                        })\n                    }}\n\n                    newExpense={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewExpense(true)\n                        }, 500)\n                    }}\n\n                    newCashPurchase={() => {\n                        setNewTran(false)\n                        setTimeout(() => {\n                            setNewCashPurchase(true)\n                        }, 500)\n                    }}\n\n                />\n            </div>\n          }\n          \n          <Route path=\"/\" exact>\n            <Dashboard/>\n          </Route>\n\n          <Route path=\"/sales\" exact>\n            <Sales />\n          </Route>\n\n          <Route path=\"/invoices\" exact>\n            <Invoices />\n          </Route>\n\n          <Route path=\"/invoices/:invoiceNumber\" exact>\n            <InvoiceDetails />\n          </Route>\n\n          <Route path=\"/receipts\" exact>\n            <Receipts />\n          </Route>\n          <Route path=\"/receipts/:receiptNumber\" exact>\n            <ReceiptDetails />\n          </Route>\n\n          <Route path=\"/credit-notes\" exact>\n            <CreditNotes />\n          </Route>\n          <Route path=\"/credit-notes/:noteNumber\" exact>\n            <CreditNoteDetails />\n          </Route>\n\n          <Route path=\"/quotes\" exact>\n            <Quotes />\n          </Route>\n          <Route path=\"/quotes/:quoteNumber\" exact>\n            <QuoteDetails />\n          </Route>\n\n          <Route path=\"/customers\" exact>\n            <CustomersPage />\n          </Route>\n\n          <Route path=\"/purchase-receipts\" exact>\n            <PurchaseReceipts />\n          </Route>\n          <Route path=\"/purchase-receipts/:receiptNumber\" exact>\n            <PurchaseReceiptDetails />\n          </Route>\n\n          <Route path=\"/purchase-invoices\" exact>\n            <PurchaseInvoices />\n          </Route>\n          <Route path=\"/purchase-invoices/:invoiceNumber\" exact>\n            <PurchaseInvoiceDetails />\n          </Route>\n\n          <Route path=\"/purchase-orders\" exact>\n            <PurchaseOrders />\n          </Route>\n          <Route path=\"/purchase-orders/:orderNumber\" exact>\n            <PurchaseOrderDetails />\n          </Route>\n\n          <Route path=\"/purchase-returns\" exact>\n            <PurchaseReturnsPage />\n          </Route>\n          <Route path=\"/purchase-returns/:returnNumber\" exact>\n            <PurchaseReturnDetails />\n          </Route>\n\n          <Route path=\"/inventories\" exact>\n            <InventoriesPage/>\n          </Route>\n          <Route path=\"/inventories/inventory?id=''&name=''\" exact>\n            <InventoryPage/>\n          </Route>\n\n          <Route path=\"/purchases\" exact>\n            <Purchases />\n          </Route>\n\n          <Route path=\"/suppliers\" exact>\n            <SuppliersPage />\n          </Route>\n          <Route path=\"/suppliers/:supplierName\" exact>\n            <SupplierDetails />\n          </Route>\n\n          <Route path=\"/expenses\" exact>\n            <ExpensesPage />\n          </Route>\n\n          <Route path=\"/treasury\" exact>\n            <LiquidityPage/>\n          </Route>\n\n          <Route path=\"/capital-and-fixed-assets\" exact>\n            <CapitalAndFixedAssets/>\n          </Route>\n\n          <Route path=\"/assets/:serialNumber\" exact>\n            <FixedAsset/>\n          </Route>\n\n          <Route path=\"/shareholders/:serialNumber\" exact>\n            <Shareholder/>\n          </Route>\n          <Route path=\"/liabilities/:serialNumber\" exact>\n            <Liability/>\n          </Route>\n\n          <Route path=\"/reports\" exact>\n            <Reports/>\n          </Route>\n\n          <Route path=\"/customers/:customerName\" exact>\n            <CustomerDetails />\n          </Route>\n\n          <Route path=\"/reviews\" exact>\n            <ReviewsPage/>\n          </Route>\n\n          {\n            newQuotation && <Quotation\n            onClick={() => { setNewQuotation(false) }}\n            refetch={() =>{\n              setAlert(true);\n              setAlertMessage('Quotation Added Successfully');\n              setTimeout(() => {\n                setAlert(false);\n              setAlertMessage('');\n              }, 2000)\n            }}\n            />\n          }\n\n          {\n            newInvoice && <Invoice\n              onClick={() => {\n                  setNewInvoice(false)\n            }}\n            refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Invoice Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n              }, 2000)\n            }}\n            />\n            }\n\n            {\n              newCreditNote && <CreditNote\n                onClick={() => {\n                    setNewCreditNote(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Credit Note Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n              }, 2000)\n              }}\n              />\n            }\n\n            {\n              newReceipt && <Receipt\n                onClick={() => {\n                  setNewReceipt(false)\n                }}\n              refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Receipt Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n              }, 2000)\n              }}\n              />\n            }\n\n            {\n              newReceivePayment && <ReceivePayment\n                onClick={() => {\n                  setNewReceivePayment(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Customer Payment Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n              }, 2000)\n              }}\n              />\n            }\n\n            {\n              newPurchaseInvoice && <PurchaseInvoice\n                onClick={() => {\n                  setNewPurchaseInvoice(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Purchase Invoice Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n\n            {\n              newMakePayment && <MakePayment\n                onClick={() => {\n                  setNewMakePayment(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Supplier Payment Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n\n            {\n              newDebitNote && <DebitNote\n                onClick={() => {\n                  setNewDebitNote(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Debit Note Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n\n            {\n              newPurchaseReturns && <PurchaseReturns\n                onClick={() => {\n                  setNewPurchaseReturns(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Purchase Returns Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n\n            {\n              newPurchaseOrder && <PurchaseOrder\n                onClick={() => {\n                  setNewPurchaseOrder(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Purchase Order Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n\n            {\n              newExpense && <NewExpense\n                onClick={() => {\n                  setNewExpense(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Expense Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n\n            {\n              newCashPurchase && <CashPurchase\n                onClick={() => {\n                  setNewCashPurchase(false)\n                }}\n                refetch={() =>{\n                setAlert(true);\n                setAlertMessage('Purhase Receipt Added Successfully');\n                setTimeout(() => {\n                  setAlert(false);\n                setAlertMessage('');\n                }, 2000)\n                }}\n              />\n            }\n            {\n              alert && \n              <Alert\n                alert={alert}\n                message={alertMessage}\n              />\n            }\n\n\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}